<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#" xmlns:media="http://search.yahoo.com/mrss/"
	>

<channel>
	<title>iPhone Dev Log</title>
	<atom:link href="https://iphonedevlog.wordpress.com/feed/" rel="self" type="application/rss+xml" />
	<link>https://iphonedevlog.wordpress.com</link>
	<description>Making iPhone and Android Apps with PhoneGap/Cordova. For the Non-tech Savvy.</description>
	<lastBuildDate>Thu, 07 Jan 2016 14:22:42 +0000</lastBuildDate>
	<language>en</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.com/</generator>
<cloud domain='iphonedevlog.wordpress.com' port='80' path='/?rsscloud=notify' registerProcedure='' protocol='http-post' />
<image>
		<url>https://secure.gravatar.com/blavatar/c4f991814d8e5202d489730a25dad0da?s=96&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Fbuttonw-com.png</url>
		<title>iPhone Dev Log</title>
		<link>https://iphonedevlog.wordpress.com</link>
	</image>
	<atom:link rel="search" type="application/opensearchdescription+xml" href="https://iphonedevlog.wordpress.com/osd.xml" title="iPhone Dev Log" />
	<atom:link rel='hub' href='https://iphonedevlog.wordpress.com/?pushpress=hub'/>
	<item>
		<title>Posts updated, January 2016</title>
		<link>https://iphonedevlog.wordpress.com/2016/01/07/posts-updated-january-2016/</link>
		<comments>https://iphonedevlog.wordpress.com/2016/01/07/posts-updated-january-2016/#respond</comments>
		<pubDate>Thu, 07 Jan 2016 14:21:46 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[site update]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=2037</guid>
		<description><![CDATA[When I create or update apps, which happens on an infrequent basis, I click on the Workflow tab above and on the appropriate link for an Android or iOS app under New App. As I follow the steps, especially after not making an update for  several Cordova updates, then I often find new issues I did [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=2037&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>When I create or update apps, which happens on an infrequent basis, I click on the Workflow tab above and on the appropriate link for an Android or iOS app under New App. As I follow the steps, especially after not making an update for  several Cordova updates, then I often find new issues I did not encounter before. At that point, I update the Workflow article to match what worked for me, including any error messages I found and had to deal with.</p>
<p>The first two Workflow articles in New App have been updated to keep up with an ever-changing landscape. I&#8217;ve also added more information to the first link of Update App to keep the information where I&#8217;ll find it quickly when I need to update anything regarding Cordova.</p>
<p>I am still at work on the site; the new material is just not always seen on the home page.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/category/site-update-2/'>site update</a>  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/2037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/2037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/2037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/2037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/2037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/2037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/2037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/2037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/2037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/2037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/2037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/2037/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=2037&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2016/01/07/posts-updated-january-2016/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Implementing the Moust Videoplayer Cordova plugin for Android</title>
		<link>https://iphonedevlog.wordpress.com/2015/06/11/implementing-the-moust-videoplayer-cordova-plugin-for-android/</link>
		<comments>https://iphonedevlog.wordpress.com/2015/06/11/implementing-the-moust-videoplayer-cordova-plugin-for-android/#comments</comments>
		<pubDate>Thu, 11 Jun 2015 18:41:21 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[moust]]></category>
		<category><![CDATA[video]]></category>
		<category><![CDATA[videoplayer]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1873</guid>
		<description><![CDATA[The Moust videoplayer plugin allows the app to play videos within the app in fullscreen mode. Unfortunately, the video does not play according to its own proportional size, nor is it confined to the proportion of the div it&#8217;s in. It breaks out to fit in the device window. We are given two different options [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1873&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>The Moust videoplayer plugin allows the app to play videos within the app in fullscreen mode.</p>
<p>Unfortunately, the video does not play according to its own proportional size, nor is it confined to the proportion of the div it&#8217;s in. It breaks out to fit in the device window. We are given two different options for scaling the video. The following were the results when viewing a 320x200px video in my Nexus 7:</p>
<p><strong>SCALE_TO_FIT_WITH_CROPPING</strong> As noted, this doesn&#8217;t show the whole video. In landscape, the top/bottom are cropped. In portrait, the left/right sides are cropped. No pinch-to-reduce functionality included.</p>
<p><strong>SCALE_TO_FIT</strong> (default) This will stretch/squeeze the video to fit the device&#8217;s screen, whether horizontal or vertical orientation.</p>
<p>It makes the most sense to use this player when you want to play back the videos in the same mobile device you shot them with; then they would play back in perfect proportion. If you want your videos to play back reliably across Android devices in their own proportion, I recommend trying <a href="https://iphonedevlog.wordpress.com/2015/06/08/implementing-crosswalks-chromium-webview-plugin-in-an-android-app/" target="_blank">Crosswalk. </a><span id="more-1873"></span></p>
<p>Resource:<br />
<a href="https://github.com/moust/cordova-plugin-videoplayer" target="_blank">https://github.com/moust/cordova-plugin-videoplayer</a></p>
<p>These steps assume you&#8217;ve already created a Cordova project and added the Android platform files.</p>
<h2>Steps to create</h2>
<p>1. Include videos in project at <strong>www/videos.</strong> I don&#8217;t know what the preferred formats are, but mp4 and mpg work.</p>
<p>2. Download videoplayer.js to www/js folder from <strong><a href="https://github.com/moust/cordova-plugin-videoplayer" target="_blank">https://github.com/moust/cordova-plugin-videoplayer</a> &gt; www.</strong> (I copied the contents of that file into a txt document then saved it to the folder.)</p>
<p>3. On your project&#8217;s index.html page, make a link to the external js file just above &lt;/body&gt; like:</p>
<pre>&lt;script type="text/javascript" src="js/videoplayer.js"&gt;&lt;/script&gt;</pre>
<p>4. Install the plugin to your cordova Android project:</p>
<pre>cordova plugin add com.moust.cordova.videoplayer</pre>
<p>5. Make button links to videos and call the JavaScript (see below). Note that you&#8217;ll reference the video like this:</p>
<pre>"file:///android_asset/www/videos/myvideo-h264.mp4",</pre>
<p>6. Include Cordova deviceready script in the &lt;head&gt; (see below).</p>
<p>Final index.html:</p>
<pre>&lt;!DOCTYPE html&gt;</pre>
<pre>&lt;html&gt;
 &lt;head&gt;
 &lt;meta http-equiv="Content-Security-Policy" content="default-src 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; media-src *"&gt;
 &lt;meta name="format-detection" content="telephone=no"&gt;
 &lt;meta name="msapplication-tap-highlight" content="no"&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width"&gt;
 &lt;title&gt;Moust Videoplayer plugin&lt;/title&gt;
 &lt;script type="text/javascript" src="cordova.js"&gt;&lt;/script&gt;
 &lt;script type="text/javascript" charset="utf-8"&gt;
 // Wait for device API libraries to load
 document.addEventListener("deviceready", onDeviceReady, false);
 // device APIs are available
 function onDeviceReady() {
 }
 &lt;/script&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;div style="margin: 20px;"&gt;
 &lt;button onclick="playMP4()"&gt;PLAY MP4 VIDEO&lt;/button&gt;
 &lt;/div&gt;</pre>
<pre>&lt;script&gt;
 function playMP4() {
 VideoPlayer.play(
 "file:///android_asset/www/videos/myvideo-h264.mp4",
 {
 volume: 1.0, 
 scalingMode: VideoPlayer.SCALING_MODE.SCALE_TO_FIT_WITH_CROPPING
 },
 function () {
 console.log("video completed");
 },
 function (err) {
 console.log(err);
 }
 );
 }
 &lt;/script&gt;
 &lt;script type="text/javascript" src="js/videoplayer.js"&gt;&lt;/script&gt;
 &lt;/body&gt;
&lt;/html&gt;</pre><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/moust/'>moust</a>, <a href='https://iphonedevlog.wordpress.com/tag/video/'>video</a>, <a href='https://iphonedevlog.wordpress.com/tag/videoplayer/'>videoplayer</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1873/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1873/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1873/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1873/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1873/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1873/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1873/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1873/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1873/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1873/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1873/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1873/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1873&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2015/06/11/implementing-the-moust-videoplayer-cordova-plugin-for-android/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Implementing Crosswalk&#8217;s Chromium webview plugin in an Android app</title>
		<link>https://iphonedevlog.wordpress.com/2015/06/08/implementing-crosswalks-chromium-webview-plugin-in-an-android-app/</link>
		<comments>https://iphonedevlog.wordpress.com/2015/06/08/implementing-crosswalks-chromium-webview-plugin-in-an-android-app/#comments</comments>
		<pubDate>Mon, 08 Jun 2015 22:34:38 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[android-22]]></category>
		<category><![CDATA[Chromium]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[crosswalk]]></category>
		<category><![CDATA[webview]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1864</guid>
		<description><![CDATA[Why consider using Crosswalk? Android devices have different implementations of the webview, in which our PhoneGap and Cordova apps appear. Vendors have made their own tweaks of the webview, causing our code to render inconsistently. So our CSS and scripts will play differently across devices or not at all. For instance, the HTML5 &#60;video&#62; tag [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1864&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>Why consider using Crosswalk? Android devices have different implementations of the webview, in which our PhoneGap and Cordova apps appear. Vendors have made their own tweaks of the webview, causing our code to render inconsistently. So our CSS and scripts will play differently across devices or not at all.</p>
<p>For instance, the HTML5 &lt;video&gt; tag won&#8217;t work across all Android browsers:</p>
<pre>&lt;video id="video_1" 
 controls preload="auto" width="320" height="240"&gt;
 &lt;source src="video/myvideo-h264.mp4" type="video/mp4"&gt;
I'm sorry; your device browser doesn't support HTML5 video in MP4 with H.264.
&lt;/video&gt;</pre>
<p>But it will work in the Chromium webview provided by Crosswalk. By adding the Chromium webview to our app, we will have a unified Android playing field for our app.<span id="more-1864"></span></p>
<p>Where the code works well on our Android devices under testing with Crosswalk&#8217;s webview, then it should work the same across all Android devices. We are effectively taking back control of the webview for ourselves.</p>
<p>If you are fed up with endless hacks to make your code work and look the same across Android devices, Crosswalk should be taken into consideration. It does have some drawbacks, however, and one is its hefty size. It may add around 20MB to your app. Also, your code will work depending on the Chromium browser version Crosswalk installs, so you may have to go up or down a stable version.</p>
<p>The reason I am considering it is that my next apps will include videos and I want them to reliably play across all Android devices. (They already work fine in the iOS devices.) The app will be around 150MB, so adding an extra 20MB is an acceptable tradeoff &#8211; it&#8217;s still under the 200MB app size limit. I want to be able to use the &lt;video&gt; tag, which Android does not reliably use at present. You might use the &lt;video&gt; tag with a video on a current project to test whether it works. Then do this project and see if there is a difference.</p>
<p>Resource:<br />
<a href="https://github.com/crosswalk-project/cordova-plugin-crosswalk-webview" target="_blank">https://github.com/crosswalk-project/cordova-plugin-crosswalk-webview</a></p>
<p>This article assumes you already have your environment set up for Cordova and Android. If not, follow <a href="https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/" target="_blank">this</a> and <a href="https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/" target="_blank">this</a> if on Windows, or follow <a href="https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/" target="_blank">this</a> if on the Mac.</p>
<p><strong>My Mac environment for this article:</strong><br />
OS X Yosemite 10.10.3<br />
Mac Mini (Mid 2010)<br />
cordova -v = 5.0.0<br />
cordova-android platform v4.0.0<br />
Plugins installed in project: crosswalk<br />
Not using PhoneGap or PhoneGap Build<br />
No frameworks used</p>
<h2>Install android-22</h2>
<p>Crosswalk requires android-22, so in the Terminal app, start up the Android SDK Manager via:</p>
<pre>android</pre>
<p>In the Android SDK Manager window, select Build-Tools 22.0.0 and Android 5.1.1 (API 22) packages, if they are not installed already. Then select each package and Accept the agreement for each. Due to the LONG download time on a Mac Mini, you may want to do this just before bedtime and let it run overnight.</p>
<h2>Set up basic Cordova files</h2>
<p>Crosswalk requires Cordova 5.0+, so upgrade if necessary:</p>
<pre>npm update -g cordova</pre>
<p>Make sure Cordova version is 5.0.0:</p>
<pre>cordova -v</pre>
<p>Create the basic project and enter the folder for it:</p>
<pre>cordova create crosswalk</pre>
<pre>cd crosswalk</pre>
<p>Add the Android platform files:</p>
<pre>cordova platform add android</pre>
<p>Add the Crosswalk plugin:</p>
<pre>cordova plugin add cordova-plugin-crosswalk-webview --save</pre>
<p>Read here to see what video/audio codecs Chromium supports: <a href="https://www.chromium.org/audio-video" target="_blank">https://www.chromium.org/audio-video</a></p>
<p>If you have a program that outputs video, try for these settings:<br />
Video codec: H.264 Baseline, Theora, Opus, VP8, VP9. Audio codec: AAC Main (not AAC-LC), MP3, Vorbis, Opus. Containers supported: MP4, WebM, Ogg, WAV.</p>
<p>Best combo seems to be: <strong>H.264 Baseline + AAC Main + MP4.</strong></p>
<p>Or upload your file here to convert it online for free (unfortunately, you can&#8217;t choose options that cover all the recommendations above): <a href="http://video.online-convert.com/convert-video-for-android" target="_blank">http://video.online-convert.com/convert-video-for-android</a> (I chose the MP4 conversion option).</p>
<p>To test, add your myvideo.mp4 video to a www/video folder.</p>
<p>Add to index.html after the &lt;body&gt; tag:</p>
<pre> &lt;video id="video_1" 
 controls preload="auto" width="320" height="200"&gt;
 &lt;source src="video/myvideo-h264.mp4" type="video/mp4"&gt;
 &lt;/video&gt;</pre>
<p>My fully edited index.html:</p>
<pre>&lt;!DOCTYPE html&gt;

&lt;html&gt;
 &lt;head&gt;
 &lt;meta http-equiv="Content-Security-Policy" content="default-src 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *"&gt;
 &lt;meta name="format-detection" content="telephone=no"&gt;
 &lt;meta name="msapplication-tap-highlight" content="no"&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width"&gt;
 &lt;title&gt;Hello World&lt;/title&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;div style="margin:20px;"&gt;
 &lt;h2&gt;CONVERTED MP4 file&lt;/h2&gt;
 &lt;br&gt;
 &lt;video id="video_1" 
 controls preload="auto" width="320" height="200"&gt;
 &lt;source src="video/myvideo-h264.mp4" type="video/mp4"&gt;
 &lt;/video&gt;
 &lt;/div&gt;
 &lt;script type="text/javascript" src="cordova.js"&gt;&lt;/script&gt;
 &lt;/body&gt;
&lt;/html&gt;</pre>
<p>We don&#8217;t do anything special to invoke the webview.</p>
<p>Learn more about the &lt;video&gt; markup here for other options available to you:<br />
<a href="http://www.html5rocks.com/en/tutorials/video/basics/" target="_blank">http://www.html5rocks.com/en/tutorials/video/basics/</a><br />
<a href="http://www.encoding.com/html5/" target="_blank">http://www.encoding.com/html5/</a></p>
<h2>Testing</h2>
<p>Create a debug apk file to test:</p>
<pre>cordova build android</pre>
<p>Crosswalk builds two binaries for Chromium support: /platforms/android/build/outputs/apk/<strong>android-x86-debug.apk</strong></p>
<p>and:</p>
<p>/platforms/android/build/outputs/apk/<strong>android-armv7-debug.apk</strong></p>
<p>The x86 version is for devices and emulators that use the x86 instruction set. So if you are testing with GenyMotion, it would use the x86 version. The armv7 is for devices and emulators that use the ARMv7 architecture. Most physical devices fall into the latter category. There are some exceptions, which is also why it is important to have both builds. Your Android device will use the ARMv7 build. When uploading to Google Play, we will upload both, because some devices will need the x86 version. (I have not yet tested how Google Play allows uploads of two apks for an app.)</p>
<p>Make sure your Android device is set up for testing with Chromium by making changes in your devices&#8217; Developer Options under Settings. Read &#8220;Physical Device Setup, ADB Debugging&#8221; and &#8220;Screen&#8221; here: <a href="https://code.google.com/p/chromium/wiki/AndroidTestInstructions" target="_blank">https://code.google.com/p/chromium/wiki/AndroidTestInstructions</a> (In a nutshell: Check &#8220;USB debugging.&#8221; Un-check &#8220;Verify apps over USB.&#8221; Check &#8220;Stay Awake.&#8221;)</p>
<p>Install the apk file into your device and test thoroughly. (I dragged it to my Dropbox.com site, then synced it in my device via the Dropbox app.)</p>
<blockquote><p><strong>App specs:</strong><br />
I made the above changes to the index.html file.<br />
My video was 1.8MB on disk (320 x 200 size, no audio, H.264 + AAC, 18 seconds). Video was edited on Corel VideoStudio Pro on my PC and output as Share &gt; MPEG-4 &gt; iPod H.264.<br />
Final output debug apk size: 25.5 &#8211; 26.7MB.</p></blockquote>
<p>Result upon loading in device: video shows a freezed frame from later in the video. Upon tapping, it starts to play in place from the beginning. Tapping the enlarge button in the lower right frame allows it to play full screen. Tap the video to show the controls and tap the reduce icon in the lower right frame to reduce the size to the default you specified.</p>
<p>It&#8217;s good to know that I can now use the &lt;video&gt; tag in my Android apps to play my in-app videos. So I will duplicate the iOS version, follow the step above, and take further steps to turn it into an Android version.</p>
<p><a href="https://iphonedevlog.files.wordpress.com/2015/06/crosswalk.jpg"><img class="aligncenter size-full wp-image-1866" src="https://iphonedevlog.files.wordpress.com/2015/06/crosswalk.jpg?w=660" alt="crosswalk"   /></a></p>
<p><em>Thanks to Kerri Shotts for her invaluable help.</em></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/android-22/'>android-22</a>, <a href='https://iphonedevlog.wordpress.com/tag/chromium/'>Chromium</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/crosswalk/'>crosswalk</a>, <a href='https://iphonedevlog.wordpress.com/tag/webview/'>webview</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1864/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1864/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1864/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1864/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1864/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1864/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1864/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1864/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1864/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1864/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1864/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1864/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1864&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2015/06/08/implementing-crosswalks-chromium-webview-plugin-in-an-android-app/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2015/06/crosswalk.jpg" medium="image">
			<media:title type="html">crosswalk</media:title>
		</media:content>
	</item>
		<item>
		<title>Updates made recently</title>
		<link>https://iphonedevlog.wordpress.com/2015/06/06/updates-made-recently/</link>
		<comments>https://iphonedevlog.wordpress.com/2015/06/06/updates-made-recently/#respond</comments>
		<pubDate>Sat, 06 Jun 2015 05:37:30 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[site update]]></category>
		<category><![CDATA[Android]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[icons]]></category>
		<category><![CDATA[screengrabs]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1858</guid>
		<description><![CDATA[I updated the following pages several times over the last few weeks. I realize that subscribers are alerted only when new posts are made, not when pages are updated, so this post is to alert you to several important edits. I made updates to conform the processes more closely to Cordova 5.0.0, explain how I [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1858&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I updated the following pages several times over the last few weeks. I realize that subscribers are alerted only when new posts are made, not when pages are updated, so this post is to alert you to several important edits.</p>
<p>I made updates to conform the processes more closely to Cordova 5.0.0, explain how I do icons and screens with iOS reliably, and described my process for creating screengrabs more thoroughly (for iOS), among other edits.</p>
<p><a href="https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/" target="_blank">https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/</a></p>
<p><a href="https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/" target="_blank">https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/</a></p>
<p>More information was added to the bottom of the adb logcat after its first release:</p>
<p><a href="https://iphonedevlog.wordpress.com/2015/05/19/using-adb-logcat-to-debug-your-android-app-installation/" target="_blank">https://iphonedevlog.wordpress.com/2015/05/19/using-adb-logcat-to-debug-your-android-app-installation/</a></p>
<p>&nbsp;</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/site-update-2/'>site update</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/icons/'>icons</a>, <a href='https://iphonedevlog.wordpress.com/tag/screengrabs/'>screengrabs</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1858/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1858/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1858/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1858/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1858/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1858/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1858/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1858/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1858/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1858/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1858/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1858/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1858&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2015/06/06/updates-made-recently/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using ADB Logcat to debug your Android app installation</title>
		<link>https://iphonedevlog.wordpress.com/2015/05/19/using-adb-logcat-to-debug-your-android-app-installation/</link>
		<comments>https://iphonedevlog.wordpress.com/2015/05/19/using-adb-logcat-to-debug-your-android-app-installation/#comments</comments>
		<pubDate>Tue, 19 May 2015 04:05:34 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[Tips]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1823</guid>
		<description><![CDATA[A more descriptive title would be, &#8220;Using ADB logcat outside of ADT, Eclipse, or Android Studio to debug your Android app installation errors.&#8221; Did you try to install the app in your Android device, but got the annoying “Unfortunately, [app name] has stopped”? If so, then you need to run ADB logcat to find out [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1823&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>A more descriptive title would be, &#8220;Using ADB logcat outside of ADT, Eclipse, or Android Studio to debug your Android app installation errors.&#8221; Did you try to install the app in your Android device, but got the annoying “Unfortunately, [app name] has stopped”? If so, then you need to run ADB logcat to find out why. Logcat allows us to read the logs that are automatically running in the background when we run the program. So when the app quits suddenly, we can read the messages along the way and pinpoint when it went south. Here are the steps to implement logcat.<span id="more-1823"></span></p>
<p><em>Resources:</em></p>
<p><a title="http://forums.androidcentral.com/general-help-how/141073-learn-logcat-like-pro.html" href="http://forums.androidcentral.com/general-help-how/141073-learn-logcat-like-pro.html" target="_blank">http://forums.androidcentral.com/general-help-how/141073-learn-logcat-like-pro.html</a><br />
<a title="http://wiki.cyanogenmod.org/w/Doc:_debugging_with_logcat" href="http://wiki.cyanogenmod.org/w/Doc:_debugging_with_logcat" target="_blank">http://wiki.cyanogenmod.org/w/Doc:_debugging_with_logcat</a><br />
<a title="http://www.growingwiththeweb.com/2014/01/handy-adb-commands-for-android.html" href="http://www.growingwiththeweb.com/2014/01/handy-adb-commands-for-android.html" target="_blank">http://www.growingwiththeweb.com/2014/01/handy-adb-commands-for-android.html</a></p>
<p>ADB (Android Debug Bridge) was stored in my /adt-bundle-mac-x87_64/sdk/platform-tools folder, which I had installed when I first downloaded the Android Development Tools+Eclipse  bundle to my Mac before Android Studio was released.</p>
<p>Also, my .bash_profile hidden file has a line to the above file folder, so when I use the console, it will find the file and start it up. For help with this, see this link and look up &#8220;Set up the PATH statements:&#8221; <a title="https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/" href="https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/" target="_blank">https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/</a></p>
<p>These prerequisites are a must before the following steps can be started.</p>
<p>1. Build your Android app (via <strong>cordova build android</strong>) and install the app in your device. For instance, I installed Dropbox on computer and device and transferred the files between them with that free service.</p>
<p>2. Plug the device into the computer with your USB plug.</p>
<p>3. Set up the device to enable debugging. In device, Settings:</p>
<p><em>Allow USB Debugging</em><br />
<em>Select debug app</em></p>
<p>4. In console, type to following so we can read all the messages in full:</p>
<pre>adb logcat -v long</pre>
<p>If you want to output all the messages to a text file on your Mac desktop (it&#8217;s different for a PC), type:</p>
<pre class="p1"><span class="s1">adb logcat &gt; ~/Desktop/logcat.txt</span></pre>
<p>Immediately the console should be outputting a lot of lines of text. If it stops at &#8230;</p>
<pre>- waiting for device -</pre>
<p>&#8230; and freezes, then check your screen to see if there is a popup to answer. If there is none, then unplug the USB from the device and try again.  In my Settings &gt; Developer Options, I chose &#8220;Select debug app,&#8221; then chose the app I installed; that might help too.</p>
<p>When the reporting stops, sometimes I hit Return a few times to mark the place with  a large gap of space before doing the next step. This tells me how far to back up.</p>
<p>5. Tap on app icon in device to start it. The dreaded message will appear. Tap OK to quit.</p>
<p>6. Tap Ctrl+C to stop logcat.</p>
<p>7. Review the logcat in the console. Every app is different, so the reasons for breaking will differ. Look for reasons that begin with “Caused by:.” Example:</p>
<pre>Caused by: java.lang.ClassNotFoundException: Didn't find class "org.apache.cordova.splashscreen.SplashScreen" on path: DexPathList[[. . .],nativeLibraryDirectories=[/data/app-lib/. . ., /vendor/lib, /system/lib]]</pre>
<pre>[ 05-18 20:26:07.190 6365: 6365 I/System.out ]
Error adding plugin org.apache.cordova.splashscreen.SplashScreen.</pre>
<p>So it looks like a problem with the splashscreen plugin. What I did is uninstall the plugin (via <strong>cordova plugin rm org.apache.cordova.splashscreen.SplashScreen</strong>) and add it again (via <strong>cordova plugin add org.apache.cordova.splashscreen.SplashScreen</strong>). When I did that, I got a clear warning:</p>
<pre>WARNING: org.apache.cordova.splashscreen has been renamed to cordova-plugin-splashscreen. You may not be getting the latest version! We suggest you ‘cordova plugin rm org.apache.cordova.splashscreen’ and ‘cordova plugin add cordova-plugin-splashscreen’.</pre>
<p>Over the last few weeks, Cordova had earlier renamed its plugins from org.apache.cordova.splashscreen to cordova-plugin-splashscreen. So I removed the first named version again, but added in the second named version. I opened up the /plugins folder and found another org.apache.cordova plugin, removed it, and added it with cordova-plugin-etc. to make sure I got the latest version of that, too.</p>
<p>This resolved the issue, and the app started up normally.</p>
<p>8. If you can’t figure out the reason for the problem on your own, then copy/paste the likely error or fatal line into a search engine and look for answers. If you use <a title="http://www.stackoverflow.com/" href="http://www.stackoverflow.com/" target="_blank">stackoverflow.com</a> or the <a title="https://groups.google.com/forum/?fromgroups#!forum/phonegap" href="https://groups.google.com/forum/?fromgroups#!forum/phonegap" target="_blank">PhoneGap Google group,</a> include the logcat error lines you found. That’ll help the veterans track it down.</p>
<p>9. To stop debugging, hit Crtl+C. This will return the prompt.</p>
<p><strong>Cool idea to try out: create a screenshot of your device with adb.</strong></p>
<p>1. With your device hooked up, type into console:</p>
<pre>adb shell screencap -p /sdcard/screen12345.png</pre>
<p>This puts the screenshot into your device. In my case, at the root of Internal Memory in my Nexus 7.</p>
<p>2. Copy it to your computer&#8217;s root with:</p>
<pre>adb pull /sdcard/screen12345.png</pre>
<p>I clicked on my computer&#8217;s Home icon and there it was! It was 1200 x 1920 and included the top and bottom screen matter.</p>
<p>3. Remove it from your device with:</p>
<pre>adb shell rm /sdcard/screen12345.png</pre><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/tips/'>Tips</a>  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1823/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1823/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1823/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1823/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1823/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1823/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1823/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1823/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1823/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1823/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1823/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1823/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1823&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2015/05/19/using-adb-logcat-to-debug-your-android-app-installation/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Cordova Android project from start to finish &#8212; quick version of workflow</title>
		<link>https://iphonedevlog.wordpress.com/2015/03/13/cordova-android-project-from-start-to-finish-quick-version-of-workflow/</link>
		<comments>https://iphonedevlog.wordpress.com/2015/03/13/cordova-android-project-from-start-to-finish-quick-version-of-workflow/#respond</comments>
		<pubDate>Fri, 13 Mar 2015 20:23:05 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1756</guid>
		<description><![CDATA[Here&#8217;s a cheat sheet for creating a Cordova app from start to finish. No details on this page; they&#8217;re all covered elsewhere on my site. My environment for this is a PC machine with Windows 7 Pro, and this is building an Android project. I&#8217;m not using Eclipse or Android Studio &#8212; they are not [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1756&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>Here&#8217;s a cheat sheet for creating a Cordova app from start to finish. No details on this page; they&#8217;re all covered elsewhere on my site. My environment for this is a PC machine with Windows 7 Pro, and this is building an Android project. I&#8217;m not using Eclipse or Android Studio &#8212; they are not needed. <span id="more-1756"></span></p>
<p>1. Download Nodejs if you don&#8217;t already have it installed. In the Command Prompt:</p>
<pre>https://nodejs.org/</pre>
<p>2. Download and install <a title="https://developer.android.com/sdk/index.html#top" href="https://developer.android.com/sdk/index.html#top" target="_blank">Android Studio. </a> Set up the SDK platform for android-22, latest Android SDK Platform-tools, and latest Android SDK Build-tools.</p>
<p>3. Install Cordova if you don&#8217;t already have it. In the Command Prompt:</p>
<pre>npm install -g cordova</pre>
<p>4. Create the default Cordova project files (change myApp to your own app&#8217;s name):</p>
<pre>cordova create myApp</pre>
<p>5. Download the Android platform files:</p>
<pre>cordova platform add android</pre>
<p>6. Delete the myApp/www folder contents and replace it with your project&#8217;s completed HTML, CSS, and JavaScript files.<br />
a. Add all your icons and 9-patch splash screens.<br />
b. Add your plugins. (If this is an update, remove all your core Cordova plugins and replace them with the new versions with this format: <strong>cordova plugin add cordova-plugin-device &#8211;save</strong>. In Config.xml, remove the lines for the plugins you added formerly; &#8211;save adds the new information Cordova is using.)<br />
c. Add the Cordova deviceReady API lines to &lt;head&gt; of the pages that use plugins.<br />
d. Update the myApp/config.xml file.<br />
e. Update the permissions in AndroidManifest.xml, if necessary.<br />
f. Validate and check all your work in the browser with Developer tools in a browser.</p>
<p>7. Make an apk to run on your device to test:</p>
<pre>cordova build android</pre>
<p>The apk file was built and saved as: /myApp/platforms/android/ant-build/helloCordova-debug.apk. <em>(For cordova 5.0.0, it is saved in /myApp/platforms/android/build/outputs/apk.)</em></p>
<p>Test and adjust project files to suit.</p>
<p>8. When you are ready to upload the project to the app store, run this in the command prompt (change myapp to your app&#8217;s name) to make your keystore file:</p>
<pre>keytool -genkey -v -keystore myapp.keystore -alias myapp -keyalg RSA -keysize 2048 -validity 10000</pre>
<p>Your keystore file will be located at /myApp/myapp.keystore.</p>
<p>9. Copy myapp.keystore to /platforms/android.</p>
<p>10. Now it’s time to sign the app with the key and create the release version. Open /platforms/android/local.properties (or project.properties) in a text editor.</p>
<p>11. Add these two lines at the end and save (change myapp to your app&#8217;s name):</p>
<pre>key.store=myapp.keystore 
key.alias=myapp</pre>
<p>12. Still in your /myApp folder in Terminal, run:</p>
<pre>cordova build android --release</pre>
<p>13. Your myApp.apk file is put in /myApp/platforms/android/ant-build/CordovaApp-release.apk. This is the file you rename and upload to Google Play. My build in May 2015, with cordova 5.0.0, had the apk output to /platforms/android/build/outputs/apk.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a>  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1756/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1756/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1756/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1756/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1756/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1756/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1756/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1756/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1756/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1756/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1756/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1756/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1756&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2015/03/13/cordova-android-project-from-start-to-finish-quick-version-of-workflow/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using NetBeans IDE instead of Eclipse</title>
		<link>https://iphonedevlog.wordpress.com/2015/03/12/using-netbeans-ide-instead-of-eclipse/</link>
		<comments>https://iphonedevlog.wordpress.com/2015/03/12/using-netbeans-ide-instead-of-eclipse/#respond</comments>
		<pubDate>Thu, 12 Mar 2015 20:29:14 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1749</guid>
		<description><![CDATA[I&#8217;ve decided to ditch Eclipse in favor of the NetBeans IDE. Since we can create signed apks with the Cordova CLI, Eclipse is no longer needed. There are several good replacements if you want a code editor. NetBeans, like several other code-creation editors, offers much more than a text editor can provide. Here is why [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1749&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I&#8217;ve decided to ditch Eclipse in favor of the NetBeans IDE. <a title="https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/" href="https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/" target="_blank">Since we can create signed apks with the Cordova CLI,</a> Eclipse is no longer needed. There are several good replacements if you want a code editor. NetBeans, like several other code-creation editors, offers much more than a text editor can provide. Here is why I am enjoying NetBeans (NB) with Cordova. These are just a few of the features I&#8217;ve found handy when using NB. (If you have a coding IDE you favor other than NB, please talk about it in the comments section.) NB works on the PC and Mac. <span id="more-1749"></span></p>
<p>Free download: <a title="https://netbeans.org/" href="https://netbeans.org/" target="_blank">https://netbeans.org/</a><br />
NetBeans Community: <a title="https://netbeans.org/community/index.html " href="https://netbeans.org/community/index.html%20" target="_blank">https://netbeans.org/community/index.html </a><br />
NetBeans HTML5 features: <a title="https://netbeans.org/features/html5/index.html" href="https://netbeans.org/features/html5/index.html" target="_blank">https://netbeans.org/features/html5/index.html</a><br />
NetBeans Forum: <a title="http://forums.netbeans.org/" href="http://forums.netbeans.org/" target="_blank">http://forums.netbeans.org/</a></p>
<h2>Code completion and other helps</h2>
<ul>
<li>If you create the starting tag, like &lt;p&gt;, then hit enter, &lt;/p&gt; will appear to its left to complete it.</li>
<li>When you type in the css selector and colon, like color:, a drop-down will allow you to select among the options. Just double-click to select.</li>
<li>Color bars at left and right show where code has changed (blue), added (green), or an arrowhead appears where text was deleted.</li>
<li>Code elements are color-coded. For instance, all comments are gray and italicized in a dark version of the interface.</li>
<li>Squiggle lines under code means something needs to be addressed. For instance, an alt=&#8221;&#8221; attribute may be missing from the &lt;img&gt; line. Pausing your cursor over the squiggled text will show the issue to be addressed.</li>
<li>Highlighting an opening or closing tag will highlight the other tag.</li>
<li>Words highlighted in red indicate an illegal issue there or in the lines above.</li>
</ul>
<h2>Minify files</h2>
<p>Right-click on an html or css file in NB and click on minify to create a copy of the file, minified. So index.css becomes index.min.css. Project Build can minify all files and create a different Build folder, if desired. <em>Tools &gt; Options &gt; Editor &gt; Project Build.</em></p>
<h2>Instant &lt;link&gt; formation</h2>
<p>Create an external css file. Open an html file in NB. Drag the css file into the &lt;head&gt; of the html file and the entire link is created automatically: &lt;link href=&#8221;index.css&#8221; rel=&#8221;stylesheet&#8221; type=&#8221;text/css&#8221;/&gt;</p>
<h2>Show file in IDE browser</h2>
<p>Select file in NB, then:<em> Run &gt; Set Project Browser &gt; Embedded WebKit Browser.</em> Click on the green Play arrow in the menubar to run the selected file right in the IDE. Select mobile screen icons to see it in various mobile configurations.</p>
<h2>Show file in Chrome browser</h2>
<ol>
<li>Add NetBeans Connector Chrome extension to debug app on Chrome. <em>Tools &gt; Extensions,</em> search for NetBeans Connector.</li>
<li>Then select html file, then:<em> Run &gt; Set Project Browser &gt; Chrome with NetBeans Connector.</em></li>
<li>Then click on the green Play arrow in the menubar to run the selected file in the Chrome browser in localhost.</li>
</ol>
<h2>Set up Cordova project</h2>
<p>In NB:<em> Project Properties &gt; Cordova</em></p>
<ul>
<li><strong>Application tab:</strong> type app ID (com.companyname.appName format), app name and version. This sets up part of the config.xml file.</li>
<li><strong>Plugins tab:</strong> choose default Cordova plugins to add. (InAppBrowser is not included in the list, but can be added to the nbproject/plugins.properties file.)</li>
<li><strong>Mobile Platforms setup:</strong> Give location of Android SDK (includes link to download the Android Studio SDK if not installed). Give iOS Code Sign Identity and iOS Provisioning Profile.</li>
</ul>
<h2>Zip entire project</h2>
<p><em>File &gt; Export Project &gt; To ZIP&#8230;</em> will zip all files in the project folder.</p>
<h2>Convert symbols to HTML entities</h2>
<p>&lt;/div&gt; becomes &amp;lt;/div&amp;gt; by selecting it and <em>Edit &gt; Convert to HTML Entities (name).</em></p>
<h2>Shift and Move</h2>
<ul>
<li>Shift selected code left and right in tab length. <em>Source &gt; Shift Left or Shift Right.</em></li>
<li>Move selected lines up and down one line at a time. <em>Source &gt; Move Up or Move Down.</em></li>
</ul>
<h2>Duplicate lines</h2>
<p>Select lines of code then <em>Source &gt; Duplicate up</em> or <em>Duplicate down.</em> Lines are duplicated. Great for lists with many &lt;li&gt;&lt;/li&gt;.</p>
<h2>Commenting  lines</h2>
<p>Select entire line or lines then<em> Source &gt; Toggle comment</em> will comment out the lines if they are not commented, or uncomment them if they are.</p>
<h2>Hints</h2>
<p>Explains errors in code and what to do to fix. <em>Tools &gt; Options &gt; Editor &gt; Hints.</em></p>
<h2>Code Templates</h2>
<p>Type c then Tab and get &lt;!&#8211; ${comment} &#8211;&gt; ready to be filled in. <em>Tools &gt; Options &gt; Editor &gt; Code Templates.</em></p>
<h2>Change look and feel</h2>
<p>Change appearance of the IDE by choosing among several templates. <em>Tools &gt; Options &gt; Appearance &gt; Look and Feel.</em></p>
<h2>Validate XML</h2>
<p><em>Run &gt; Validate XML</em> and <em>Run &gt; Check XML</em> on your config.xml file to check for any problems.</p>
<h2>Versioning</h2>
<p>Git, Subversion, and Mercury. See in <em>menubar, Team.</em></p>
<p>IDE Plugins</p>
<p>Over 200 plugins available to customize the IDE: <em>Tools &gt; Plugins &gt; Available Plugins.</em> Uninstall IDE plugins to speed up start: <em>Tools &gt; Plugins &gt; Installed</em> (check and Deactivate or Uninstall).</p>
<ul>
<li>Try: Dark Look And Feel Themes.</li>
<li>Try: JSLint. (Not sure if it works, though. To use it, open a js file in NB, and right-click to select JSLint. However, nothing happens when I do it. Shout out if you figure it out.)</li>
</ul><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1749/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1749/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1749/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1749/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1749/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1749/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1749/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1749/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1749/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1749/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1749/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1749/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1749&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2015/03/12/using-netbeans-ide-instead-of-eclipse/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using npm in your Cordova Workflow</title>
		<link>https://iphonedevlog.wordpress.com/2015/02/24/1730/</link>
		<comments>https://iphonedevlog.wordpress.com/2015/02/24/1730/#respond</comments>
		<pubDate>Tue, 24 Feb 2015 21:59:18 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Tips]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1730</guid>
		<description><![CDATA[I decided to try npm (nodejs) and see how it could streamline my workflow. If you&#8217;ve been using Cordova or PhoneGap, you probably already have npm installed &#8211; you used npm to install either one in the first place. But it can do so much more. Test Drive npm 1. I created an empty test folder [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1730&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I decided to try npm (nodejs) and see how it could streamline my workflow. If you&#8217;ve been using Cordova or PhoneGap, you probably already have npm installed &#8211; you used npm to install either one in the first place. But it can do so much more.</p>
<p><span id="more-1730"></span></p>
<h2>Test Drive npm</h2>
<p>1. I created an empty test folder called npmTest. Open the Terminal console and set it to start with your test project&#8217;s folder (type &#8220;cd&#8221; and a space, then drag the project&#8217;s folder to the console window, click on Terminal, then hit Enter). Type the following command in Terminal to get a list of all the packages you have downloaded for your project:</p>
<pre>npm ls</pre>
<p>Very likely it returns, &#8220;empty.&#8221;</p>
<p>2. I know there&#8217;s a program which validates JavaScript called jshint. I need to do a search on npm to find out the exact npm package name. Stretch the Terminal window as wide as you can and type:</p>
<pre>npm search jshint</pre>
<p>This described all packages containing &#8220;jshint&#8221; in the package name or description. If the package begins with grunt- or gulp- or othername-, then it is a version designed to be used with grunt or other named packages. I&#8217;m not using grunt or another package manager, just npm, so I avoided packages with those prefixes. This search gave me &#8220;jshint&#8221; as the package I wanted, among other titles.</p>
<p>You can visit the following link, type in the package name in the search, and click through to learn more about it to see if it&#8217;s right for your application: <a title="http://www.npmjs.com/" href="http://www.npmjs.com/" target="_blank">http://www.npmjs.com/</a></p>
<p>3. Now it&#8217;s time to install the package with:</p>
<pre>npm install jshint</pre>
<p>It&#8217;s installed locally: a /node_modules folder is created in the root of your project and the files downloaded there. Open it to see what packages have been downloaded. It&#8217;ll have a subfolder with the same name as the npm name; in our case, /jshint. (&#8220;npm ls&#8221; typed into the Terminal will also list your files, but it takes much longer.) Sometimes I had to do the run command twice to get the files to install; just check the folder to make sure it appears.</p>
<p>4. I went ahead and searched for and installed image optimizers for png and jpg (optimg for png and jpgo for jpg), and a css minifier, ycssmin:</p>
<pre>npm install optimg
npm install jpgo
npm install ycssmin</pre>
<p>5. How do I run the npm files on my project? npm looks for package.json in the project&#8217;s root folder to know what scripts to run. In my example, note the placement of all the commas, use of straight quotes and not curly quotes; and in my text editor the text file is encoded as UTF-8 (without BOM):</p>
<p><em>package.json:</em></p>
<pre>{
 "name": "npmTest",
 "devDependencies": {
 "jshint": "latest",
 "optimg": "latest",
 "jpgo": "latest",
 "ycssmin": "latest"
 },
 "scripts": {
 "lint": "jshint **.js",
 "png": "optimg",
 "jpg": "jpgo",
 "css": "ycssmin **.css"
 }
}</pre>
<p><strong>Explanation of script:</strong><br />
To the right of &#8220;name&#8221; is the name of your Cordova project.<br />
Under &#8220;devDependencies,&#8221; put the name of the package and either &#8220;latest&#8221; or the version number you want to use, if known.<em> It is better to use the version number instead of &#8220;latest&#8221; so the script won&#8217;t break in later versions. I will revise this when I learn more. But it works as is.</em><br />
Under &#8220;scripts,&#8221; the first word is a command text you make up to run the package (&#8220;lint&#8221; will run jshint); the right section has the program to execute and any arguments &#8212; in the case of jshint, a particular file type to apply the command to: .js. The ** includes all such files.</p>
<p>This site gives the correct syntax when forming the package.json file: <a title="http://json.org/" href="http://json.org/" target="_blank">http://json.org/</a></p>
<p>6. Check the script&#8217;s correctness by pasting it into the validator field at<br />
<a title="http://jsonlint.com/" href="http://jsonlint.com/" target="_blank">http://jsonlint.com/</a>. I have a brief <em>Error Messages</em> section at the bottom of this article that might address some of your errors.</p>
<p>7. To test the above scripts, add one or more .js files and a couple of jpgs. Add a CSS file. I grabbed these from another Cordova project. Use the commands you wrote in package.json under &#8220;scripts,&#8221; one after another, as needed, when the previous command is finished:</p>
<pre>npm run lint
npm run png
npm run jpg</pre>
<p>They will open the corresponding file in /node_modules of the same name and execute the scripts written there. The lint command gave me a list of errors in Terminal (without changing or correcting the original file). The png and jpg commands gave me the input and output sizes of the files with the difference in percentages. The files were overwritten with the smaller versions. (So you&#8217;ll want to keep the full size files outside of your project.)</p>
<p>8. Test the CSS script:</p>
<pre>npm run ycssmin</pre>
<p>This will run the command, but show the compressed css in the Terminal and not overwrite the .css file. You could copy over the text from the Terminal window and name that file filename.css and rename the old version filename.old.css file in order to retain both.</p>
<blockquote><p>The above instructions tell how to install your node modules locally, that is, per app. We could install them globally as well, that is, so the commands would work with any app at any location on your hard drive.</p>
<p>This command will list what npm packages you have globally, as well as the location where they are stored:</p>
<pre>npm list -g</pre>
<p>My global folder location is at /usr/local/lib, and the nested tree  list shows installation of bower, cordova, grunt-cli, grunt-init, ionic, ios-sim, phonegap, ripple emulator, weinre. (These are the names hanging right off the far left vertical line.)</p>
<p>To install a module globally, we would append -g to the install command:</p>
<pre>npm install -g ycssmin</pre>
<p>In this case, you don&#8217;t need to start the Terminal install commands from your project root folder. You do need to start from project root when you do &#8220;npm run&#8221; commands, though.</p></blockquote>
<h2>Error Messages</h2>
<p>I&#8217;ve tried one package after another and got numerous errors I had difficulty resolving. Some packages just won&#8217;t install and I don’t know why not. Some packages could install, but the npm run command didn&#8217;t work. I suspect that I needed to add or remove arguments from the package.json file &#8211; or perhaps even from the npm run command &#8211; but the argument changes I tried in package.json did nothing. The usage guide online mentioned in step 2 was not helpful to me; it didn&#8217;t mention whether the package.json file syntax should change from what I had it above. I tried five or six “html” packages and all of them failed to work. What you see in this article worked for me.</p>
<p>1. Adding the -d flag may give more information on the error:</p>
<pre>npm run -d html</pre>
<p>2. Updating npm will resolve some errors that a later version addressed:</p>
<pre>npm -g install npm@latest</pre>
<p>3. Clearing the user cache may resolve some other problems:</p>
<pre>npm cache clear</pre>
<p>4. Double-check your bash file to make sure the PATH to npm is there:</p>
<pre>export PATH=${PATH}:~/usr/local/bin
export PATH=${PATH}:~/usr/local/lib</pre>
<p>5. It&#8217;s frustrating when you&#8217;re sure the syntax is correct but get errors in the Terminal and validators. When that happened, I made sure each quote was a straight quote and formatted the file as UTF-8 without BOM (see <a title="http://stackoverflow.com/questions/2223882/whats-different-between-utf-8-and-utf-8-without-bom" href="http://stackoverflow.com/questions/2223882/whats-different-between-utf-8-and-utf-8-without-bom" target="_blank">http://stackoverflow.com/questions/2223882/whats-different-between-utf-8-and-utf-8-without-bom</a>). You can&#8217;t change this in TextEdit on the Mac. But in Sublime Text: File &gt; Save with Encoding &gt; UTF-8. And in TextWrangler: TextWrangler &gt; Preferences &gt; Text Encodings &gt; Unicode (UTF-8). Then it validated fine. I noticed that nearly every time I edited the package.json file, nearby straight quotes changed into smart quotes. This site will convert from smart to straight quotes: <a title="http://dan.hersam.com/tools/smart-quotes.html" href="http://dan.hersam.com/tools/smart-quotes.html" target="_blank">http://dan.hersam.com/tools/smart-quotes.html</a></p>
<p>6. Not all npm packages will work with Cordova projects; they weren&#8217;t meant to. Visit the following link, type in the package name in the search, and click through to learn more about it to see if it&#8217;s right for your application: <a title="http://www.npmjs.com/" href="http://www.npmjs.com/" target="_blank">http://www.npmjs.com/</a> You may find that you need to download other files (dependencies) to make it work, or it wasn’t meant for the task you had in mind in the first place.</p>
<p>7. If you get npm ERR! messages in the Terminal, npm may tell you to contact the owner and include a message to pass on. For instance, with npm run imageoptim (an earlier try at an image optimizer package), I got:</p>
<pre>npm ERR! Tell the author that this fails on your system:
npm ERR! npm run env-clear &amp;&amp; npm run env-setup
npm ERR! You can get their info via:
npm ERR! npm owner ls imageoptim</pre>
<p>So I got the email of the responsible person by typing npm owner ls imageoption, as instructed. npm already gave me the message to pass on the owner: &#8220;npm ERR! npm run env-clear &amp;&amp; npm run env-setup.&#8221; At this point, you might as well search for another package. Enter /node_modules and delete the offending package’s files to remove clutter.</p>
<p>8. When using run command:<br />
<strong>Error: </strong></p>
<pre>npm ERR! Unexpected token "</pre>
<p><strong>Solution:</strong><br />
Change smart quotes to straight quotes. This site will convert: <a title="http://dan.hersam.com/tools/smart-quotes.html" href="http://dan.hersam.com/tools/smart-quotes.html" target="_blank">http://dan.hersam.com/tools/smart-quotes.html</a></p>
<p>9. When using run command:<br />
<strong>Error:</strong></p>
<pre>npm ERR! Error: ENOENT, open '/Users/Steve/Documents/APPS/Test_Apps/package.json'</pre>
<p><strong>Solution:</strong><br />
ENOENT means “Error NO ENTry” or “No such directory entry.”<br />
Open /node_modules to see if the files were actually installed. In my case, they were not. Run the install command again.</p>
<p>10. In the root of the project, npm writes its log messages in npm-debug.log. See if there are any extra clues there to help.</p>
<p>11. When using run command:<br />
<strong>Error:</strong></p>
<pre>sh: html5-lint: command not found
npm ERR! Exit status 127</pre>
<p><strong>Solution:</strong><br />
“Exit status 127” indicates “command not found” and may indicate problems with the PATH or a typo.<br />
This means that the program did not include a command for this script to work. The program is not compatible with this package.json method of scripting. Try another.</p>
<h2>Useful Sites</h2>
<p><a title="http://tech.pro/tutorial/1190/package-managers-an-introductory-guide-for-the-uninitiated-front-end-developer" href="http://tech.pro/tutorial/1190/package-managers-an-introductory-guide-for-the-uninitiated-front-end-developer" target="_blank">http://tech.pro/tutorial/1190/package-managers-an-introductory-guide-for-the-uninitiated-front-end-developer</a></p>
<p><a title="http://tobyho.com/2012/02/09/tour-of-npm/" href="http://tobyho.com/2012/02/09/tour-of-npm/" target="_blank">http://tobyho.com/2012/02/09/tour-of-npm/</a></p>
<p><a title="http://browsenpm.org/help" href="http://browsenpm.org/help" target="_blank">http://browsenpm.org/help</a></p>
<p><a title="https://www.npmjs.com/" href="https://www.npmjs.com/" target="_blank">https://www.npmjs.com/</a></p>
<p><a title="https://docs.npmjs.com/" href="https://docs.npmjs.com/" target="_blank">https://docs.npmjs.com/</a></p>
<p><a title="http://dontkry.com/posts/code/using-npm-on-the-client-side.html" href="http://dontkry.com/posts/code/using-npm-on-the-client-side.html" target="_blank">http://dontkry.com/posts/code/using-npm-on-the-client-side.html</a></p>
<p><a title="http://blog.izs.me/post/1675072029/10-cool-things-you-probably-didnt-realize-npm" href="http://blog.izs.me/post/1675072029/10-cool-things-you-probably-didnt-realize-npm" target="_blank">http://blog.izs.me/post/1675072029/10-cool-things-you-probably-didnt-realize-npm</a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/tips/'>Tips</a>  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1730/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1730/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1730/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1730/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1730/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1730/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1730/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1730/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1730/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1730/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1730/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1730/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1730&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2015/02/24/1730/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Displaying a prepopulated database with AngularJS</title>
		<link>https://iphonedevlog.wordpress.com/2015/01/12/displaying-a-database-javascript-array-with-angularjs/</link>
		<comments>https://iphonedevlog.wordpress.com/2015/01/12/displaying-a-database-javascript-array-with-angularjs/#respond</comments>
		<pubDate>Mon, 12 Jan 2015 19:04:26 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Android]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[prepopulated database]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1701</guid>
		<description><![CDATA[I am trying out different ways to have a prepopulated database in an app. This time I&#8217;m experimenting with AngularJS. The following article show how to display an array of data AngularJS style, filtering the output with two buttons. (This article is not using &#8220;ng-cordova.&#8221;) If you follow the other articles on this site, you [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1701&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I am trying out different ways to have a prepopulated database in an app. This time I&#8217;m experimenting with AngularJS. The following article show how to display an array of data AngularJS style, filtering the output with two buttons. (This article is not using &#8220;ng-cordova.&#8221;) If you follow the other articles on this site, you can compare the different approaches for a &#8220;simple,&#8221; in-app, prepopulated DB.<span id="more-1701"></span></p>
<p>Resources:<br />
<a title="https://angularjs.org/" href="https://angularjs.org/" target="_blank">https://angularjs.org/</a><br />
<a title="https://docs.angularjs.org/api/ng/filter" href="https://docs.angularjs.org/api/ng/filter" target="_blank">https://docs.angularjs.org/api/ng/filter</a><br />
<a title="http://www.w3schools.com/angular/default.asp" href="http://www.w3schools.com/angular/default.asp" target="_blank">http://www.w3schools.com/angular/default.asp</a></p>
<blockquote><p>My development environment:</p>
<p>Mac OS X Yosemite 10.10.1 on latest Mac Mini<br />
cordova -v 4.0.0<br />
Testing in device: Android-19, Nexus 7 with 4.4.2<br />
No Jquery or other JS or CSS packages or frameworks used</p></blockquote>
<h2>Create sample Cordova or PhoneGap project</h2>
<p>1. I&#8217;m creating this app in the folder /PhoneGap_apps, so I open the Terminal app, type cd and a space (for the change directory command), and drag that folder to its window, click on the Terminal to select it, and hit Enter. Now the Terminal commands are oriented to that folder, and the project will be built in that folder.</p>
<p>2. Create the barebones files:</p>
<pre>cordova create ngtest</pre>
<p>3. When that&#8217;s over and Terminal returns to the prompt, change to the new folder:</p>
<pre>cd ngtest</pre>
<p>4. Add the platform files to set it up for your devices:</p>
<pre>cordova platform add android</pre>
<p>(Each platform has its own version number. This installed the Android platform version 3.6.4.)</p>
<pre>cordova platform add ios</pre>
<p>(This installed the iOS platform version 3.6.3.)</p>
<p>Since this is only a test, I&#8217;ll be leaving all the defaults as is, including icon files.</p>
<p>5. Open /ngtest/www and delete all the files there.</p>
<h2>Set up the AngularJS and content files</h2>
<p>This template project will require four pages to create: three .js and one .html. They can all be placed into your /ngtest/www folder, and the .html file needs to reference the .js files.</p>
<p>1. The first is <strong>angular.min.js,</strong> which you can download from <a title="https://angularjs.org/" href="https://angularjs.org/" target="_blank">https://angularjs.org/</a> and insert into your /ngtest//www folder. It is 108kb.</p>
<p>2. Next is your <strong>myApp.js</strong> file, which consists of just a single line of text and also goes into your /ngtest//www folder. Create this by hand.</p>
<pre>var app = angular.module("myApp", []);</pre>
<p>3. The final .js file is <strong>myCtrl.js,</strong> your Controller file. You also create this by hand. It will contain all your functions and data for the database (which is actually a JavaScript array object in my example. You can also format as a JSON array). My filtered output is activated by two buttons; in this case, to show buggies only, or trucks only.</p>
<pre>app.controller("myCtrl", function($scope) {
/* Make following line $scope.show = 'Buggy '; to make Buggy the default display on page load. As is, it will display the whole DB on page load. */
$scope.show = '';
 $scope.base = function() {
 return $scope.show;
 };
 $scope.bodyType = function() {
 return {bodyType: $scope.base()};
 };
 $scope.names = [{bodyType: 'Buggy'}, {bodyType: 'Short Course'}];
$scope.names = [
 {
 id: 1,
 bodyType:'Short Course',
 category:"SC18",
 name2:"SC18 Ready-To-Run",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/SC18/RTR/20120.ps_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/SC18/RTR/",
 caption:"Now you can enjoy Team Associated’s world-class performance with true scale authenticity in a 1:18 scale electric truck! The SC18 features a newly designed chassis with a fully enclosed, 2-belt drive train system that is capable of handling the extreme amount of power that today’s brushless motors and LiPo batteries can dish out. Along with durability, the drive train is sealed to help keep rocks and dirt away from the gears and pulleys." // no comma after the last of the series
 },
 {
 id: 2,
 bodyType:"Short Course",
 category:"Qualifier Series",
 name2:"ProSC 4x4 Ready-To-Run",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/ProSC_4x4/RTR/Pro-SC-4x4-3Q_R.500_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/ProSC_4x4/RTR/",
 caption:"Team Associated is proud to announce the ProSC 4x4 Ready-To-Run — a brushless-powered 4WD off-road short-course truck in the Qualifier Series! The ProSC 4x4 comes ready to rock with many high performance features including the XP 2.4GHz radio system, a Reedy brushless power system and a 7-cell 8.4 volt Reedy WolfPack battery wired with a High Current T-Plug."
 },
 {
 id: 3,
 bodyType:"Short Course",
 category:"SC10 4x4",
 name2:"SC10 4x4 RTR Combo",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/SC10_4x4/RTR_Combo/lucas-body-left-7_7661_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/SC10_4x4/RTR_Combo/",
 caption:"The SC10 4x4 Ready-To-Runs are RC replicas of the 800+ horsepower short course trucks driven in the Lucas Oil Off Road Racing Series."
 },
 {
 id: 4,
 bodyType:"Buggy",
 category:"RC10B5M",
 name2:"RC10B5M Team Kit",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/RC10B5M/Team/RC10B5M_TK_2560x2048_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/RC10B5M/Team/",
 caption:"The engineers in Team Associated’s Area 51 designed the RC10B5M to specifically address the demands of racing on high-speed, high-grip tracks where the mid-motor chassis is at its best."
 },
 {
 id: 5,
 bodyType:"Buggy",
 category:"RC10B44",
 name2:"B44.3 Factory Team",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/B44.3/Factory_Team/B44.3_3Q%20White_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/B44.3/Factory_Team/",
 caption:"Enter the RC10B44.3 Factory Team Kit, the latest evolution of Team Associated’s 1:10 4WD electric off road competition buggy. The most significant changes are found on the new hard-anodized aluminum chassis, which helps lower the center of gravity to improve handling and durability."
 } // no comma here
 ];
});</pre>
<p>4. The <strong>index.html</strong> file will hold the AngularJS code structure and style the output. I commented the lines throughout. Just make sure the field names match up perfectly with the field names in myCtrl.js.</p>
<pre>&lt;!-- ******************* BEGIN ******************* --&gt;
&lt;!DOCTYPE html&gt;
 &lt;html ng-app="myApp"&gt;&lt;!-- The container of the app. See myApp.js. Automatically bootstraps the app when page is loaded. --&gt;
 &lt;head&gt;
 &lt;meta charset="utf-8" /&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;
 &lt;title&gt;AngularJS DB Test&lt;/title&gt;
&lt;!-- cordova is not being used in this test
 &lt;script src="javascripts/cordova.js"&gt;&lt;/script&gt;
 &lt;script type="text/javascript" charset="utf-8"&gt;
 // Wait for device API libraries to load
 //
 document.addEventListener("deviceready", onDeviceReady, false);
 // device APIs are available
 //
 function onDeviceReady() {
 }
 &lt;/script&gt; --&gt;
&lt;!-- Reference the js file in the head --&gt;
&lt;script src= "angular.min.js"&gt;&lt;/script&gt;
&lt;!-- Stylize the HTML elements --&gt;
 &lt;style type="text/css"&gt;
 .buttonClass, h2, p {
 font-family: "Helvetica"; color: #000; font-size:1em;
 }
 .buttonClass {
 border-radius:8px; background-color:#fff;
 border:#878787 solid 1px; padding:0 1em;margin:.5em;
 height: 3em; width: 300px;
 text-align:center;
 -webkit-appearance:none;
 }
 .segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 -webkit-appearance:none;
 }
 h2 {
 font-size:1.3em; font-weight: bold;
 }
p {
 text-align:left; margin-left: 170px;
 }
 p.title {
 font-weight:bold;font-size:1em;text-align:center; color:#000
 }
 p.more {
 font-size:.8em;text-align:center;font-style:italic;
 }
 a {
 color:#666
 }
 img.pic {
 width:150px;
 float: left;
 }
 &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;!-- The controller (in myCrtl.js) only works for elements within this div. --&gt;
&lt;div ng-controller="myCtrl"&gt;
&lt;!-- These buttons integrate with the code in myCrtl.js --&gt;
 &lt;button class="buttonClass" ng-click="show='Buggy'"&gt;Buggy&lt;/button&gt;
 &lt;br&gt;&lt;br&gt;
 &lt;button class="buttonClass" ng-click="show='Short Course'"&gt;Truck&lt;/button&gt;
 &lt;br&gt;&lt;br&gt;
&lt;script&gt; 
 
&lt;/script&gt;
&lt;!-- 
{{}} = binding expressions: data from controller goes in here. 
ng-repeat = directive used on an array of objects. 
orderBy = set it to the field by which you want to order the contents. 
More filtering options here: https://docs.angularjs.org/api/ng/filter
--&gt;
&lt;div class='segment' ng-repeat="x in names | filter: bodyType() | orderBy:'id'"&gt;
 &lt;p class='title'&gt;{{ x.id }} -- {{ x.bodyType }}: {{ x.name2 }}&lt;/p&gt;
 &lt;img class='pic' src='{{ x.photo }}' width='100px'&gt; 
 &lt;p class='caption'&gt;{{ x.caption }}&lt;/p&gt;
 &lt;p class='more'&gt;&lt;a href='{{ x.resource }}'&gt;More&lt;/a&gt;&lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;!-- Module file --&gt;
&lt;script src="myApp.js"&gt;&lt;/script&gt;
&lt;!-- Controller file contains functions and the database array entries --&gt;
&lt;script src="myCtrl.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;

&lt;!-- ******************* END ******************* --&gt;</pre>
<h2>Test the file</h2>
<p>1. Double-click the index.html file in /www to test it in your browser. The buggies should list by default. Click on the Trucks then Buggies buttons to see the filtering in action.</p>
<p>2. Now test the app in your device. Output debug versions of the files. In Terminal:</p>
<pre>cordova build</pre>
<p>3. Add the /platforms/android/ant-build/CordovaApp-debug.apk file to your Android device (I used Dropbox to transfer the file), and test by tapping the Show All button at top.</p>
<p>Here is a screen shot of the screen when Buggy is pressed:</p>
<div data-shortcode="caption" id="attachment_1703" style="width: 550px" class="wp-caption aligncenter"><a href="https://iphonedevlog.files.wordpress.com/2015/01/ngtest-screenshot.jpg"><img class="size-full wp-image-1703" src="https://iphonedevlog.files.wordpress.com/2015/01/ngtest-screenshot.jpg?w=660" alt="ngtest screenshot, AngularJS test"   /></a><p class="wp-caption-text">ngtest screenshot, AngularJS test</p></div><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/database/'>database</a>, <a href='https://iphonedevlog.wordpress.com/tag/prepopulated-database/'>prepopulated database</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1701/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1701/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1701/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1701/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1701/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1701/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1701/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1701/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1701/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1701/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1701/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1701/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1701&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2015/01/12/displaying-a-database-javascript-array-with-angularjs/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2015/01/ngtest-screenshot.jpg" medium="image">
			<media:title type="html">ngtest screenshot, AngularJS test</media:title>
		</media:content>
	</item>
		<item>
		<title>Prepopulated Database with TaffyDB for iOS and Android with Cordova</title>
		<link>https://iphonedevlog.wordpress.com/2015/01/07/prepopulated-database-with-taffydb-for-ios-and-android-with-cordova/</link>
		<comments>https://iphonedevlog.wordpress.com/2015/01/07/prepopulated-database-with-taffydb-for-ios-and-android-with-cordova/#comments</comments>
		<pubDate>Wed, 07 Jan 2015 18:35:47 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[taffy]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1682</guid>
		<description><![CDATA[I thought I would look for an alternate to SQLite to display a prepopulated database. Research (and successfully creating a working version) led me to TaffyDB. Here is a working project to create your own prepopulated DB. TaffyDB can do so much more if you are familiar with JavaScript (I&#8217;m not, so it was difficult [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1682&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I thought I would look for an alternate to SQLite to display a prepopulated database. Research (and successfully creating a working version) led me to TaffyDB. Here is a working project to create your own prepopulated DB. TaffyDB can do so much more if you are familiar with JavaScript (I&#8217;m not, so it was difficult trying to figure this much out!).</p>
<p>Resources:<br />
<a title="http://www.taffydb.com/" href="http://www.taffydb.com/" target="_blank">http://www.taffydb.com/</a><br />
<a title="http://www.slideshare.net/typicaljoe/better-data-management-using-taffydb-1357773" href="http://www.slideshare.net/typicaljoe/better-data-management-using-taffydb-1357773" target="_blank">http://www.slideshare.net/typicaljoe/better-data-management-using-taffydb-1357773</a> <span id="more-1682"></span></p>
<p>In this first example, I&#8217;m outputting all of the DB contents with the .each() command. At the end of the article, we&#8217;ll show alternate code to filter the contents.</p>
<blockquote><p>My development environment:</p>
<p>Mac OS X Yosemite 10.10.1 on latest Mac Mini<br />
cordova -v 4.0.0<br />
No Jquery or other JS or CSS packages or frameworks used</p></blockquote>
<p>1. Visit <a title="http://www.taffydb.com/" href="http://www.taffydb.com/" target="_blank">http://www.taffydb.com/</a> to download the code. It is installed as /Downloads/taffydb-master.zip.</p>
<p>2. Double-click to unzip it, and move it to your /Documents folder.</p>
<p>3. Open your text editor (mine is SublimeText) and create a blank index.html file in the /taffydb-master folder.</p>
<p>4. Paste the following contents into index.html for a complete, working prepopulated DB. Just make sure to make a reference to taffy-min.js. In this case, &#8220;&lt;script src=&#8221;taffy-min.js&#8221;&gt;&lt;/script&gt;&#8221;</p>
<pre>&lt;!-- ************* BEGIN ************* --&gt;
 &lt;!DOCTYPE html&gt;
 &lt;html&gt;
 &lt;head&gt;
 &lt;meta charset="utf-8" /&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;
 &lt;title&gt;Taffy DB Test&lt;/title&gt;
&lt;!-- cordova is not being used in this test
 &lt;script src="javascripts/cordova.js"&gt;&lt;/script&gt;
 &lt;script type="text/javascript" charset="utf-8"&gt;
 // Wait for device API libraries to load
 //
 document.addEventListener("deviceready", onDeviceReady, false);
 // device APIs are available
 //
 function onDeviceReady() {
 }
 &lt;/script&gt; --&gt;
&lt;!-- reference the js file --&gt;
 &lt;script src="taffy-min.js"&gt;&lt;/script&gt;
&lt;!-- stylize the screen elements --&gt;
 &lt;style type="text/css"&gt;
 .buttonClass, h2, p {
 font-family: "Helvetica"; color: #000; font-size:1em;
 }
 .buttonClass {
 border-radius:8px; background-color:#fff;
 border:#878787 solid 1px; padding:0 1em;margin:.5em;
 height: 3em; width: 300px;
 text-align:center;
 -webkit-appearance:none;
 }
 .segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 -webkit-appearance:none;
 }
 h2 {
 font-size:1.3em; font-weight: bold;
 }
p {
 text-align:left; margin-left: 170px;
 }
 p.title {
 font-weight:bold;font-size:1em;text-align:center; color:#000
 }
 p.more {
 font-size:.8em;text-align:center;font-style:italic;
 }
 a {
 color:#666
 }
 img.pic {
 width:150px;
 float: left;
 }
 &lt;/style&gt;
&lt;/head&gt;
 &lt;body&gt;
 &lt;!-- this button will execute, or call, the showAll() function below --&gt;
 &lt;input type="button" class="buttonClass" id="buggy" value="Show All" onclick='showAll();'&gt;
 &lt;br&gt;&lt;br&gt;
 &lt;h2&gt;Database output: &lt;/h2&gt;
&lt;!-- shows the database here --&gt;
 &lt;span id="display"&gt;&lt;/span&gt;
&lt;script&gt;
 /*
 Create all your field and data pairs, with data within quotes. In this case: id, bodyType, category, name2, photo, resource, caption. Make sure you escape any quotes with a \ character, like this: "John \"Billy\" Bob".
 */
 function showAll(){
 var db = TAFFY([
 {
 id: 1,
 bodyType:"Short Course",
 category:"SC18",
 name2:"SC18 Ready-To-Run",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/SC18/RTR/20120.ps_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/SC18/RTR/",
 caption:"Now you can enjoy Team Associated's world-class performance with true scale authenticity in a 1:18 scale electric truck! The SC18 features a newly designed chassis with a fully enclosed, 2-belt drive train system that is capable of handling the extreme amount of power that today's brushless motors and LiPo batteries can dish out.."
 },
 {
 id: 2,
 bodyType:"Short Course",
 category:"Qualifier Series",
 name2:"ProSC 4x4 Ready-To-Run",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/ProSC_4x4/RTR/Pro-SC-4x4-3Q_R.500_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/ProSC_4x4/RTR/",
 caption:"Team Associated is proud to announce the ProSC 4x4 Ready-To-Run -- a brushless-powered 4WD off-road short-course truck in the Qualifier Series! The ProSC 4x4 comes ready to rock with many high performance features including the XP 2.4GHz radio system, a Reedy brushless power system and a 7-cell 8.4 volt Reedy WolfPack battery wired with a High Current T-Plug."
 },
 {
 id: 3,
 bodyType:"Short Course",
 category:"SC10 4x4",
 name2:"SC10 4x4 RTR Combo",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/SC10_4x4/RTR_Combo/lucas-body-left-7_7661_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/SC10_4x4/RTR_Combo/",
 caption:"The SC10 4x4 Ready-To-Runs are RC replicas of the 800+ horsepower short course trucks driven in the Lucas Oil Off Road Racing Series."
 },
 {
 id: 4,
 bodyType:"Buggy",
 category:"RC10B5M",
 name2:"RC10B5M Team Kit",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/RC10B5M/Team/RC10B5M_TK_2560x2048_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/RC10B5M/Team/",
 caption:"The engineers in Team Associated's Area 51 designed the RC10B5M to specifically address the demands of racing on high-speed, high-grip tracks where the mid-motor chassis is at its best."
 },
 {
 id: 5,
 bodyType:"Buggy",
 category:"RC10B44",
 name2:"B44.3 Factory Team",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/B44.3/Factory_Team/B44.3_3Q%20White_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/B44.3/Factory_Team/",
 caption:"Enter the RC10B44.3 Factory Team Kit, the latest evolution of Team Associated’s 1:10 4WD electric off road competition buggy. The most significant changes are found on the new hard-anodized aluminum chassis, which helps lower the center of gravity to improve handling and durability."
 }
 ]);
/*
 The .each() command will cycle through all the db entries. Change the innerHTML section and vars to match your data and output.
 */
 db().each(function (name){
 var bodyType=(name["bodyType"]);
 var category=(name["category"]);
 var name2=(name["name2"]);
 var photo=(name["photo"]);
 var resource=(name["resource"]);
 var caption=(name["caption"]);
 output = document.getElementById("display");
 output.innerHTML+="&lt;div class='segment'&gt;&lt;p class='title'&gt;" + bodyType + ": " + name2 + "&lt;/p&gt;" +
 "&lt;img class='pic' src='" + photo + "' width='150px'&gt;" +
 "&lt;p class='caption'&gt;" + caption + "&lt;/p&gt;" +
 "&lt;p class='more'&gt;&lt;a href='" + resource + "'&gt;More&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;";
 });
 }
&lt;/script&gt;
 &lt;/body&gt;
 &lt;/html&gt;
 &lt;!-- ************* END ************* --&gt;</pre>
<h2>Create Cordova or PhoneGap project</h2>
<p>5. Let&#8217;s test it in our device by creating a new Cordova (or PhoneGap) project. I create my apps in the folder /PhoneGap_apps, so I open the Terminal app, type cd and a space (for the change directory command), and drag that folder to its window, click on the Terminal to select it, and hit Enter. Now the Terminal commands are oriented to that folder, and the project will be built in that folder.</p>
<p>6. Create the barebones files:</p>
<pre>cordova create taffytest</pre>
<p>7. Change to the new folder:</p>
<pre>cd taffytest</pre>
<p>8. Add the platform files to set it up for your devices:</p>
<pre>cordova platform add android</pre>
<p>(Each platform has its own version number. This installed the Android platform version 3.6.4.)</p>
<pre>cordova platform add ios</pre>
<p>(This installed the iOS platform version 3.6.3.)</p>
<p>9. Open /taffytest/www and delete all the files there.</p>
<p>10. Copy the /taffydb-master/index.html and /taffydb-master/taffy-min.js to the new /www folder. Since this is not for production, we will leave all defaults as is.</p>
<p>11. Output debug versions of the files for all platforms (by not specifying a specific platform in the command, it will build for all platforms installed, one after the other):</p>
<pre>cordova build</pre>
<p>12. Add the /platforms/android/ant-build/CordovaApp-debug.apk file to your Android device (I used Dropbox to transfer the file), and test by tapping the Show All button at top.</p>
<h2>Filtering the database</h2>
<p>Use the following code to filter the data output. In this case, I created two buttons to display two different sets of data, buggies and short course trucks, either of which are noted in the bodyType field. Clicking on the button will write the bodyType value into localStorage, then proceed to the database script, then insert the value in the critical place to filter the data.</p>
<pre>&lt;!-- *************** BEGIN *************** --&gt;
&lt;!DOCTYPE html&gt;
 &lt;html&gt;
 &lt;head&gt;
&lt;meta charset="utf-8" /&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;
 &lt;title&gt;Taffy DB Test&lt;/title&gt;
&lt;!-- cordova is not being used in this test
 &lt;script src="javascripts/cordova.js"&gt;&lt;/script&gt;
 &lt;script type="text/javascript" charset="utf-8"&gt;
 // Wait for device API libraries to load
 //
 document.addEventListener("deviceready", onDeviceReady, false);
 // device APIs are available
 //
 function onDeviceReady() {
 }
 &lt;/script&gt; --&gt;
 &lt;!-- reference the js file --&gt;
 &lt;script src="taffy-min.js"&gt;&lt;/script&gt;
&lt;!-- stylize the screen elements --&gt;
 &lt;style type="text/css"&gt;
 .buttonClass, h2, p {
 font-family: "Helvetica"; color: #000; font-size:1em;
 }
 .buttonClass {
 border-radius:8px; background-color:#fff;
 border:#878787 solid 1px; padding:0 1em;margin:.5em;
 height: 3em; width: 300px;
 text-align:center;
 -webkit-appearance:none;
 }
 .segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 -webkit-appearance:none;
 }
 h2 {
 font-size:1.3em; font-weight: bold;
 }
p {
 text-align:left; margin-left: 170px;
 }
 p.title {
 font-weight:bold;font-size:1em;text-align:center; color:#000
 }
 p.more {
 font-size:.8em;text-align:center;font-style:italic;
 }
 a {
 color:#666
 }
 img.pic {
 width:150px;
 float: left;
 }
 &lt;/style&gt;
&lt;/head&gt;
 &lt;body&gt;
 &lt;!-- this button will execute, or call, the showAll() function below --&gt;
 &lt;input type="button" class="buttonClass" id="buggyType" value="Buggy" onclick='showBuggy();'&gt;
 &lt;br&gt;&lt;br&gt;
 &lt;input type="button" class="buttonClass" id="truckType" value="Truck" onclick='showTruck();'&gt;
 &lt;br&gt;&lt;br&gt;
 &lt;h2&gt;Database output: &lt;/h2&gt;
&lt;!-- shows the database here --&gt;
 &lt;span id="display"&gt;&lt;/span&gt;
&lt;script&gt;
/*
 Assign a value to local storage when button is chosen, which matches content in 'bodyType' field
 */
 function showBuggy(){
 var show = localStorage.setItem('show','Buggy');
 getData();
 }
 function showTruck(){
 var show = localStorage.setItem('show','Short Course');
 getData();
}
 /*
 Create all your field and data pairs, with data within quotes. In this case: id, bodyType, category, name2, photo, resource, caption. Make sure you escape any quotes with a \ character, like this: "John \"Billy\" Bob".
 */
 function getData(){
 var db = TAFFY([
 {
 id: 1,
 bodyType:"Short Course",
 category:"SC18",
 name2:"SC18 Ready-To-Run",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/SC18/RTR/20120.ps_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/SC18/RTR/",
 caption:"Now you can enjoy Team Associated's world-class performance with true scale authenticity in a 1:18 scale electric truck! The SC18 features a newly designed chassis with a fully enclosed, 2-belt drive train system that is capable of handling the extreme amount of power that today's brushless motors and LiPo batteries can dish out. Along with durability, the drive train is sealed to help keep rocks and dirt away from the gears and pulleys."
 },
 {
 id: 2,
 bodyType:"Short Course",
 category:"Qualifier Series",
 name2:"ProSC 4x4 Ready-To-Run",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/ProSC_4x4/RTR/Pro-SC-4x4-3Q_R.500_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/ProSC_4x4/RTR/",
 caption:"Team Associated is proud to announce the ProSC 4x4 Ready-To-Run -- a brushless-powered 4WD off-road short-course truck in the Qualifier Series! The ProSC 4x4 comes ready to rock with many high performance features including the XP 2.4GHz radio system, a Reedy brushless power system and a 7-cell 8.4 volt Reedy WolfPack battery wired with a High Current T-Plug."
 },
 {
 id: 3,
 bodyType:"Short Course",
 category:"SC10 4x4",
 name2:"SC10 4x4 RTR Combo",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/SC10_4x4/RTR_Combo/lucas-body-left-7_7661_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/SC10_4x4/RTR_Combo/",
 caption:"The SC10 4x4 Ready-To-Runs are RC replicas of the 800+ horsepower short course trucks driven in the Lucas Oil Off Road Racing Series."
 },
 {
 id: 4,
 bodyType:"Buggy",
 category:"RC10B5M",
 name2:"RC10B5M Team Kit",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/RC10B5M/Team/RC10B5M_TK_2560x2048_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/RC10B5M/Team/",
 caption:"The engineers in Team Associated's Area 51 designed the RC10B5M to specifically address the demands of racing on high-speed, high-grip tracks where the mid-motor chassis is at its best."
 },
 {
 id: 5,
 bodyType:"Buggy",
 category:"RC10B44",
 name2:"B44.3 Factory Team",
 photo:"http://www.teamassociated.com/pictures/cars_and_trucks/B44.3/Factory_Team/B44.3_3Q%20White_md.jpg",
 resource:"http://www.teamassociated.com/cars_and_trucks/B44.3/Factory_Team/",
 caption:"Enter the RC10B44.3 Factory Team Kit, the latest evolution of Team Associated’s 1:10 4WD electric off road competition buggy. The most significant changes are found on the new hard-anodized aluminum chassis, which helps lower the center of gravity to improve handling and durability."
 }
 ]);
/*
 The .each() command will cycle through all the db entries. Change the innerHTML section and vars to match your data and output.
 */
 var show = localStorage.getItem('show'); // pull the data out of local storage
 var output = document.getElementById("display");
 output.innerHTML=''; // refresh screen between button taps
 db({bodyType:show}).each(function (name){
 var bodyType=(name["bodyType"]);
 var category=(name["category"]);
 var name2=(name["name2"]);
 var photo=(name["photo"]);
 var resource=(name["resource"]);
 var caption=(name["caption"]);
 output = document.getElementById("display");
 output.innerHTML+="&lt;div class='segment'&gt;&lt;p class='title'&gt;" + bodyType + ": " + name2 + "&lt;/p&gt;" +
 "&lt;img class='pic' src='" + photo + "' width='150px'&gt;" +
 "&lt;p class='caption'&gt;" + caption + "&lt;/p&gt;" +
 "&lt;p class='more'&gt;&lt;a href='" + resource + "'&gt;More&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;";
 });
}
&lt;/script&gt;
 &lt;/body&gt;
 &lt;/html&gt;
&lt;!-- *************** END *************** --&gt;</pre>
<p><strong>Below is a screen shot taken after the Buggy button was pressed:</strong></p>
<div data-shortcode="caption" id="attachment_1689" style="width: 502px" class="wp-caption aligncenter"><a href="https://iphonedevlog.files.wordpress.com/2015/01/screenshot.jpg"><img class="size-full wp-image-1689" src="https://iphonedevlog.files.wordpress.com/2015/01/screenshot.jpg?w=660" alt="screenshot, TaffyDB output"   /></a><p class="wp-caption-text">screenshot, TaffyDB output</p></div><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/database/'>database</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/taffy/'>taffy</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1682/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1682/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1682/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1682/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1682/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1682/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1682/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1682/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1682/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1682/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1682/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1682/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1682&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2015/01/07/prepopulated-database-with-taffydb-for-ios-and-android-with-cordova/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2015/01/screenshot.jpg" medium="image">
			<media:title type="html">screenshot, TaffyDB output</media:title>
		</media:content>
	</item>
		<item>
		<title>PhoneGap Desktop App Beta</title>
		<link>https://iphonedevlog.wordpress.com/2014/12/16/phonegap-desktop-app-beta/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/12/16/phonegap-desktop-app-beta/#comments</comments>
		<pubDate>Tue, 16 Dec 2014 05:13:15 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Desktop app]]></category>
		<category><![CDATA[Developer app]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1654</guid>
		<description><![CDATA[The coolest thing about the PhoneGap Desktop app is that it uses the PhoneGap Developer app to update the app across all of your devices at once as you make changes on the desktop. Just download the PhoneGap Developer app to each of your test devices and with a few simple steps it will mirror [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1654&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>The coolest thing about the PhoneGap Desktop app is that it uses the PhoneGap Developer app to update the app across all of your devices at once as you make changes on the desktop. Just download the PhoneGap Developer app to each of your test devices and with a few simple steps it will mirror your changes on the desktop.</p>
<p>This app is still in its infancy. You still need to use the CLI (Terminal commands) to do the heavy lifting. However, the developer feedback section on GitHub is in full swing as new features are being added every week.</p>
<p>Note that this app uses Adobe PhoneGap commands, not Cordova.<span id="more-1654"></span></p>
<blockquote><p>My development environment for this article:</p>
<p>Mac OS X Yosemite 10.10.1 on latest Mac Mini<br />
PhoneGap CLI 4.1.2<br />
Testing in device: Nexus 7, Android v4.4.3<br />
Testing in devices: iPod touch, iOS v5.1.1, v8.1.2<br />
Not for PG Build; no Jquery or other JS or CSS packages used</p></blockquote>
<h2>Installing the Developer App</h2>
<p>The PhoneGap Developer app works in conjunction with the PhoneGap Desktop app. First download and install the PhoneGap Developer App onto your test devices (links to app stores at <a title="http://app.phonegap.com/" href="http://app.phonegap.com/" target="_blank">http://app.phonegap.com/</a>). For this article, I downloaded it onto a Nexus 7 with Android 4.4.3, iPod touch with iOS 5.1.1, and iPod touch with iOS 8.1.2.</p>
<h2>Installing the Desktop App</h2>
<p>1. Download and unzip PhoneGap-Desktop-Beta-xxx-mac.zip to your Mac desktop. from <a title="http://phonegap.com/blog/2015/03/02/phonegap-app-desktop-0-1-2/" href="http://phonegap.com/blog/2015/03/02/phonegap-app-desktop-0-1-2/" target="_blank">http://phonegap.com/blog/2015/03/02/phonegap-app-desktop-0-1-2/</a>.</p>
<p>2. This results in PhoneGap.app in /Downloads. Open another instance of Finder and drag the app to the /Applications folder.</p>
<h2>Using the PhoneGap Desktop App</h2>
<p>1. On the desktop, double-click on the app to open it. (If you get a security notice that it &#8220;can&#8217;t be opened because it is from an unidentified developer,&#8221; then open System Preferences &gt; Security &amp; Privacy &gt; General to change your settings to allow apps to be downloaded from &#8220;Anywhere,&#8221; then double-click the app again.)</p>
<p>2. A small app window opens with four icons at left. Click on the plus icon to create a new app.</p>
<p>3. Choose Create new PhoneGap project&#8230;, then choose a place to save the project, the project&#8217;s display name (&#8220;myApp&#8221; in my case), and ID in com.companyname.myapp reverse-domain format. Then click Create project. A default bare-bones PhoneGap project is created on the desktop.</p>
<p>4. A green band at bottom appears, displaying a server IP address. A popup asks permission to proceed, which I allowed. You see a PhoneGap icon of myApp v1.0.0. An arrow to the right of the app name is for clicking if the server does not start.</p>
<p>5. Start up the Developer App on your device. (The following steps will work only if your computer and device were on the same network. In my case at work, IT kept them separate for security reasons. So after the screen appeared in the device, I get ERROR! and TIMED OUT! messages. You&#8217;ll also get these messages if you mistype the server address in step 6.)</p>
<p>6. With the Developer App started up on your device, replace the Server Address with the one shown in the Desktop app green band and tap Connect.</p>
<p>7. The default 1-page PhoneGap project should then appear on your device.</p>
<p>8. In a text editor, open up the project where you stored it in step 3, make changes to the index.html file, save, and watch the app update on your device after a moment.</p>
<p>As an experiment, I completely replaced the /www folder with a completed app&#8217;s /www folder. The Nexus 7 screen went white with &#8220;Cannot GET /&#8221; at top left. I tapped the back button to return to the Connect screen, tapped the Connect button, and the &#8220;new&#8221; app came on in all its glory.</p>
<p>I also downloaded the PhoneGap Developer app to my iPod touches and my app appeared in both. However, three messages with an input box in the middle kept popping up. You need to keep tapping on Cancel until they stop and the desired page appeared. (When I tapped on OK instead of Cancel, the app came on right away, but was unresponsive.) Unfortunately, I was tapping on three Cancel buttons in a row for each app button I clicked on as I navigated from page to page. What a pain! (Growing pains, I&#8217;m sure.)</p>
<p>Using the Terminal I added an iOS platform. The app still showed up on my Android device. Nice.</p>
<h2>PhoneGap Desktop App menu items</h2>
<h3>+</h3>
<p>The plus icon lists Create new PhoneGap project and Add existing PhoneGap project options.</p>
<p>For the second option, you can click to open a current project from the Finder or simply drag the project folder of a current project over the screen to add it to the list of apps.</p>
<p>However, it wasn&#8217;t smooth sailing. A second app I dragged on would not show its app icon, just the familiar broken image icon. A third app I dragged on refused to be listed and froze the Desktop app. I assumed it&#8217;s because it was composed of more than 500 pages (being a hymnbook), and was just loading slowly. But it never arrived after several minutes. Eventually, I had to choose PhoneGap &gt; Quit PhoneGap, and that did not respond either. I clicked on the Apple icon then Force Quit PhoneGap to shut it down. Restarting the app showed all three apps I had selected or dragged over; however, they were all unresponsive for a half hour. (I suppose that&#8217;s because of my underpowered Mac Mini.) If your experience is the same as mine, I recommend listing only one app at a time. I waited about a half hour, then I was able to click on the minus sign and remove the apps from the list.</p>
<h3><strong>&#8211;</strong></h3>
<p>The minus sign will bring up a red box with an X to remove the project from the list, but not delete it from your computer.</p>
<h3><em>Gear</em></h3>
<p>The gear icon gives the server port information, and a checkbox to turn on or off the option to send anonymous diagnostic and usage data to help them improve the app.</p>
<h3><em>Terminal</em></h3>
<p>The terminal icon opens a server log to see messages, especially on which port it is listening.</p>
<h3><em>?</em></h3>
<p>The question mark icon lists Tutorials, Report Issue, Terms of Use, and Privacy Policy options.</p>
<p>The tutorials link takes us to the wiki at <a title="https://github.com/phonegap/phonegap-app-desktop/wiki/PhoneGap-Desktop-Overview" href="https://github.com/phonegap/phonegap-app-desktop/wiki/PhoneGap-Desktop-Overview" target="_blank">https://github.com/phonegap/phonegap-app-desktop/wiki/PhoneGap-Desktop-Overview</a></p>
<p>Report issue takes us to <a title="https://github.com/phonegap/phonegap-app-desktop/issues?q=is%3Aopen" href="https://github.com/phonegap/phonegap-app-desktop/issues?q=is%3Aopen" target="_blank">https://github.com/phonegap/phonegap-app-desktop/issues?q=is%3Aopen</a></p>
<p>Terms of Use goes to <a title="http://www.adobe.com/legal/general-terms.html" href="http://www.adobe.com/legal/general-terms.html" target="_blank">http://www.adobe.com/legal/general-terms.html</a></p>
<p>Privacy Policy links to <a title="http://www.adobe.com/privacy.html" href="http://www.adobe.com/privacy.html" target="_blank">http://www.adobe.com/privacy.html</a></p>
<h2>Final Note</h2>
<p>This is beta software. It is being updated on a near-daily basis from feedback by developers using it. Submit your own feedback for features to be modified or added (and bug removal). This requires that you create a GitHub.com account, and click on the green New Issue button to contribute. See <a title="https://github.com/phonegap/phonegap-app-desktop/issues" href="https://github.com/phonegap/phonegap-app-desktop/issues" target="_blank">https://github.com/phonegap/phonegap-app-desktop/issues</a>.</p>
<p>You still need to use the Terminal to add platforms and plugins at this stage. From what I read about in the Issues, though, it appears that a lot of work is going into this app to make app creation visually appealing to drag-and-drop developers and designers who find the CLI method just too unfamiliar and awkward. To get all you can out of this, don&#8217;t forget to update to phonegap 3.6.x to use the new commands. (See <a title="https://iphonedevlog.wordpress.com/2014/12/01/using-phonegap-cli-3-6-3-commands/" href="https://iphonedevlog.wordpress.com/2014/12/01/using-phonegap-cli-3-6-3-commands/" target="_blank">https://iphonedevlog.wordpress.com/2014/12/01/using-phonegap-cli-3-6-3-commands/</a>.)</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/desktop-app/'>Desktop app</a>, <a href='https://iphonedevlog.wordpress.com/tag/developer-app/'>Developer app</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1654/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1654/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1654/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1654/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1654/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1654/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1654/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1654/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1654/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1654/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1654/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1654/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1654&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/12/16/phonegap-desktop-app-beta/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Adding an Android APK Expansion File to a Cordova Project</title>
		<link>https://iphonedevlog.wordpress.com/2014/12/12/adding-an-android-apk-expansion-file-to-a-cordova-project/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/12/12/adding-an-android-apk-expansion-file-to-a-cordova-project/#comments</comments>
		<pubDate>Fri, 12 Dec 2014 21:15:43 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[Android debugging]]></category>
		<category><![CDATA[Cordova]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1636</guid>
		<description><![CDATA[Google Play apps are limited to 50MB, but may go larger with &#8220;expansion files&#8221; of up to 2GB in size. The &#8220;main&#8221; expansion file is the primary expansion file that contains additional resources required by your application. The &#8220;patch&#8221; expansion file is optional and intended for small updates to the main expansion file. This article [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1636&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>Google Play apps are limited to 50MB, but may go larger with &#8220;expansion files&#8221; of up to 2GB in size. The &#8220;main&#8221; expansion file is the primary expansion file that contains additional resources required by your application. The &#8220;patch&#8221; expansion file is optional and intended for small updates to the main expansion file. This article covers how to create and add an expansion file to our Android app using a plugin. Then gives the &#8220;secret&#8221; way to upload the APK and expansion file to Google Play.<span id="more-1636"></span></p>
<ul>
<li>While you can use the two expansion files any way you wish, Google recommends that the main expansion file deliver the primary assets and should rarely if ever be updated; the patch expansion file should be smaller and serve as a “patch carrier,” getting updated with each major release or as necessary.</li>
<li>There can be only one main file and one patch file for each APK.</li>
<li>The expansion file is only available when the app has been downloaded from Google Play. (It won&#8217;t work in the Amazon Appstore, but that store accepts apps up to 150MB.)</li>
<li>It is a zipped archive, but without compression. The files are accessed directly by the app.</li>
<li>You must upload a new APK version when updating an app containing an expansion file, even when the changes are only in the expansion files. In the case of an update, you must delete the old expansion file and upload the new. (The Developer Console does not allow you to upload an expansion file to an existing APK.)</li>
</ul>
<p>I highly recommend you familiarize yourself with the resource links so you can note any caveats I did not include in this article.</p>
<blockquote><p>My development environment:</p>
<p>Mac OS X Yosemite v10.10.1<br />
Cordova -v: 4.0.0<br />
Testing in device: Android-19, Nexus 7 with 4.4.2</p></blockquote>
<p>For these instructions, all I did was create a basic app:</p>
<pre>cordova create myapp
cd myapp
cordova platform add android</pre>
<p>Update the /myapp/config.xml:</p>
<pre>&lt;widget id="com.companyname.myapp" version="0.0.1"</pre>
<p>Update the /myapp/platforms/android/AndroidManifest.xml with the proper minSDKversion (change 10 to 11):</p>
<pre>&lt;uses-sdk android:minSdkVersion="11"</pre>
<p>Now let&#8217;s begin!</p>
<p>Resources:<br />
<a title="http://developer.android.com/google/play/expansion-files.html" href="http://developer.android.com/google/play/expansion-files.html" target="_blank">http://developer.android.com/google/play/expansion-files.html</a><br />
<a title="https://github.com/agamemnus/cordova-plugin-xAPKreader" href="https://github.com/agamemnus/cordova-plugin-xAPKreader" target="_blank">https://github.com/agamemnus/cordova-plugin-xAPKreader</a></p>
<h2>Make Zip Archive Expansion File</h2>
<p>We need to zip all our media files that won&#8217;t fit in the APK file. They should be stored, not compressed. We don&#8217;t need to download any special files for this zip utility; it&#8217;s already included in the OS.</p>
<p>Resources:<br />
<a title="https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/zip.1.html" href="https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/zip.1.html" target="_blank">https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/zip.1.html</a><br />
<a title="http://developer.android.com/google/play/expansion-files.html" href="http://developer.android.com/google/play/expansion-files.html" target="_blank">http://developer.android.com/google/play/expansion-files.html</a></p>
<p>1. Move all of the expansion file assets into a folder called /myapp/main_expansion. (The main_expansion folder name will be part of the command in step 2.) If you have folders called /videos, /media, or /wallpaper, just drag the folders over to it.</p>
<p>My sample project for this article:</p>
<pre>/www
    index.html
    /folder2
        file.html
/main_expansion
    wallpaper1.jpg
    /folder
        wallpaper2.jpg
        /subfolder
            wallpaper3.jpg</pre>
<pre>2. Starting in /myapp in the Terminal, run the following. 
 
zip -v -dc -r -x \*.DS_Store -Z store main_expansion main_expansion</pre>
<p><strong>Explanation:</strong><br />
-v = give verbose output.<br />
-dc = display running file count.<br />
-r = Go through all the folders of main_expansion.<br />
-x = do not include the following files (in this case, remove the .DS_Store files that are annoyingly generated by the Mac OS).<br />
-Z store = just store the information in the archive, don&#8217;t compress it.</p>
<p>Returned:</p>
<pre>0/ 6 adding: main_expansion/ (in=0) (out=0) (stored 0%)
 1/ 5 adding: main_expansion/folder/ (in=0) (out=0) (stored 0%)
 2/ 4 adding: main_expansion/folder/subfolder/ (in=0) (out=0) (stored 0%)
 3/ 3 adding: main_expansion/folder/subfolder/wallpaper3.jpg (in=943784) (out=943784) (stored 0%)
 4/ 2 adding: main_expansion/folder/wallpaper2.jpg (in=943784) (out=943784) (stored 0%)
 5/ 1 adding: main_expansion/wallpaper1.jpg (in=943784) (out=943784) (stored 0%)
total bytes=2831352, compressed=2831352 -&gt; 0% savings</pre>
<p>This indicates that /main_expansion is in a stored state with no compression within /myapp/main_expansion.zip. The Terminal should show a numbered listing of all the contents with their sizes and stored status of 0% compression for each.</p>
<h2>Get the Base64 License Key and .obb Filename</h2>
<p>Resource:<br />
<a title="http://stackoverflow.com/questions/14015134/expansion-files-in-the-new-google-play-developer-console" href="http://stackoverflow.com/questions/14015134/expansion-files-in-the-new-google-play-developer-console" target="_blank">http://stackoverflow.com/questions/14015134/expansion-files-in-the-new-google-play-developer-console</a></p>
<p>1. Get the Base64-encoded RSA public key from your publisher account. To do that, the myapp APK must be uploaded to the store. Follow steps 1-8 on this link to create a release version suitable for Google Play upload: <a title="https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-APK-apart-from-eclipse-in-mac-os-x/" href="https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-APK-apart-from-eclipse-in-mac-os-x/" target="_blank">https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-APK-apart-from-eclipse-in-mac-os-x/</a></p>
<p>1. Sign in to your Developer Console at <a title="https://play.google.com/apps/publish/" href="https://play.google.com/apps/publish/" target="_blank">https://play.google.com/apps/publish/</a>, and &#8211; <span style="color:#ff0000;">IMPORTANT!</span> &#8211; click on the Alpha Testing tab.</p>
<p>2. Click on &#8220;Upload your first APK to Alpha&#8221; and select the APK file for uploading.</p>
<p>3. After it&#8217;s uploaded, you&#8217;ll find a dropdown for the expansion file; select to upload the expansion file. The directory listing will appear for you to select the main_expansion.zip file.</p>
<p>4. Check that your APK expansion is shown. You should see &#8220;main.1.com.companyname.myapp.obb (xx.x MB)&#8221; in place. Jot down that information; you&#8217;ll need it later when testing the app on your device. If you don&#8217;t see this, select the APK expansion from the dropdown again. Click on Save. (obb = Opaque Binary Blob. Now you know.)</p>
<p>5. Go to Services &amp; APIs. The Base64 License Key is shown. Keep that page open for the next steps.</p>
<p>6. Donate to the coder for this plugin. I did. We don&#8217;t really thank them enough, do we?</p>
<h2>Integrate the Plugin</h2>
<p>Michael Romanovsky wrote a plugin, xAPKreader (Expansion File APK Reader), that saves us a lot of time and aggravation that comes of following the expansion file steps on the Android Developer site.</p>
<p>Resource:<br />
<a title="https://github.com/agamemnus/cordova-plugin-xAPKreader" href="https://github.com/agamemnus/cordova-plugin-xAPKreader" target="_blank">https://github.com/agamemnus/cordova-plugin-xAPKreader</a></p>
<p>1. Starting with your project&#8217;s /myapp folder in Terminal, add the plugin:</p>
<pre>cordova plugin add https://github.com/agamemnus/cordova-plugin-xapkreader.git</pre>
<p>You should find com.flyingsoftgames.xapkreader in /myapp/plugins.</p>
<p>2. Open /platforms/android/project.properties in a text editor (I use TextWrangler) and add the following line under the last line:</p>
<pre>android.library.reference.2=../../plugins/com.flyingsoftgames.xAPKreader/android-sdk/extras/google/play_APK_expansion/downloader_library</pre>
<p>3. Open /plugins/android.json and replace these two values:</p>
<ul>
<li>com.sample.expansion with your company name/app info (for this example, we use com.companyname.myapp).</li>
<li>YOUR_GOOGLE_PLAY_LICENSE_KEY with your Base64 number from the previous section.</li>
</ul>
<h2>Format Links to the Expansion File Archive</h2>
<p>Resource:<br />
<a title="https://github.com/agamemnus/cordova-plugin-xAPKreader" href="https://github.com/agamemnus/cordova-plugin-xAPKreader" target="_blank">https://github.com/agamemnus/cordova-plugin-xAPKreader</a></p>
<p>The specific location of your expansion files in the device is in this pattern:</p>
<pre>&lt;path-to-shared-storage&gt;/Android/obb/com.companyname.myapp/</pre>
<p>You format your resource files in the project like this:</p>
<pre>&lt;img src="content://com.companyname.myapp/main_expansion/folder/wallpaper2.jpg"&gt;</pre>
<p>Go ahead and change a few file links like above for testing. In my case, www/folder/wallpaper2.jpg was linked on www/index.html as:</p>
<pre>&lt;img src="content://com.companyname.myapp/main_expansion/folder/wallpaper2.jpg" width="500"&gt;</pre>
<p>My sample index.html for this article:</p>
<pre>&lt;body&gt;
 &lt;br&gt;&lt;h2&gt;wallpaper1.jpg&lt;/h2&gt;&lt;br&gt;
&lt;img src="content://com.companyname.myapp/main_expansion/wallpaper1.jpg" width="500"&gt;
 &lt;br&gt;
 &lt;h2&gt;folder/wallpaper2.jpg&lt;/h2&gt;&lt;br&gt;
&lt;img src="content://com.companyname.myapp/main_expansion/folder/wallpaper2.jpg" width="500"&gt;
 &lt;br&gt;
 &lt;h2&gt;folder/subfolder/wallpaper3.jpg&lt;/h2&gt;&lt;br&gt;
&lt;img src="content://com.companyname.myapp/main_expansion/folder/subfolder/wallpaper3.jpg" width="500"&gt;
&lt;br&gt;&lt;br&gt;&lt;h2&gt;&lt;a href="../index.html"&gt;../index.html&lt;/a&gt;&lt;/h2&gt;
&lt;/body&gt;</pre>
<p>My www/folder2/file.html has the same contents as www/index.html, but it linked back to ../index.html instead of file.html.</p>
<p><strong>Notes about linking to the expansion file contents. </strong></p>
<ul>
<li>The zip file does not reside in www/. You make all links from all www folders and subfolders as though the expansion file was in the same folder. Example: in expansion file we have /folder/wallpaper2.jpg.</li>
<li>In /www/index.html we link to it like this:<br />
&lt;img src=&#8221;content://com.companyname.myapp/main_expansion/folder/wallpaper2.jpg&#8221; width=&#8221;500&#8243;&gt;</li>
<li>If the link to the same file is in /www/folderA/fileA.html, we link to the file the same way.</li>
<li>If the link to the same file is in /www/folderA/subfolderB/fileB.html, we would link to the file the same way.</li>
<li>The file URL is based on the file structure in the expansion file, not on the www/ structure.</li>
</ul>
<h2>Test the Expansion File from Your Desktop</h2>
<p>Resources:<br />
<a title="https://github.com/agamemnus/cordova-plugin-xAPKreader" href="https://github.com/agamemnus/cordova-plugin-xAPKreader" target="_blank">https://github.com/agamemnus/cordova-plugin-xAPKreader</a><br />
<a title="http://developer.android.com/google/play/expansion-files.html#Testing" href="http://developer.android.com/google/play/expansion-files.html#Testing" target="_blank">http://developer.android.com/google/play/expansion-files.html#Testing</a></p>
<p>1. <span style="color:#ff0000;">Important!</span> &#8211; delete the following two folders so that the plugin generates the necessary files:</p>
<ul>
<li>/platforms/android/ant-build</li>
<li>/platforms/android/ant-gen</li>
</ul>
<p>2. Create a debug build with:</p>
<pre>cordova build android</pre>
<p>3. When we uploaded the zipped expansion file in the Developer console, Google renamed main_expansion.zip as <strong>main.1.com.companyname.myapp.obb</strong></p>
<p>Go ahead and rename main_expansion.zip the same way.</p>
<p>4. Plug in your test device and create the shared folder:</p>
<pre>Android/obb/com.companyname.myapp/</pre>
<p>In the case of my Nexus 7, I plugged it into my PC and a window opened up with an option to show the folders. There was already an /Internal storage/Android/obb folder present. I right-clicked on that folder and selected New Folder, then renamed the folder com.companyname.myapp.</p>
<blockquote><p>At one point, the window would not open to show the folders, and it turned out to be a poor cord in use. Switching back to the original cord worked. If that does not work for you, go into your Settings app and turn off USB Debugging.</p></blockquote>
<p>5. Install the .obb file from step 3 in the device&#8217;s /obb/com.companyname.myapp/ folder you just made.</p>
<p>6. Install the CordovaApp-debug.apk file in the device. In my case, I copied the file to <a title="http://Dropbox.com" href="http://Dropbox.com" target="_blank">Dropbox</a> on the desktop, then opened it in Dropbox on my device, tapped it and installed it. Test your app thoroughly. (It will be named HelloCordova if you created the app exactly as in these steps.)</p>
<p>7. Rename the .obb file back to the way it was for upload to Google Play, main_expansion.zip.</p>
<h2>Test the Expansion File from the Developer Console</h2>
<p>Google Play allows us to test a live download of the APK + expansion files to your device from Google Play while not making it available to the public. Here&#8217;s how.</p>
<p>1. You need to set up a private group of testers (or just yourself) with a Google Group account at <a title="https://groups.google.com/" href="https://groups.google.com/" target="_blank">https://groups.google.com/</a>.</p>
<p>2. Create a group (mine was &#8220;myapp alpha testing&#8221;), which resulted in the email address of <a href="mailto:myapp-alpha-testing@googlegroups.com">myapp-alpha-testing@googlegroups.com</a> and URL of <a href="https://groups.google.com/forum/#!forum/myapp-alpha-testing" rel="nofollow">https://groups.google.com/forum/#!forum/myapp-alpha-testing</a></p>
<p>3. Privatize it. Still in Google Groups, for the Basic permissions section, &#8220;View topics&#8221; and &#8220;Post,&#8221; select &#8220;Owners of the group.&#8221; For Join the group, select &#8220;Only invited users.&#8221; Click on create to finish.</p>
<p>I received an automated welcome message in my gmail account.</p>
<p>4. Back on your computer, create a release version of your app as you did earlier.</p>
<p>5. <strong>On to the Developer Console</strong> at <a title="https://play.google.com/apps/publish/" href="https://play.google.com/apps/publish/" target="_blank">https://play.google.com/apps/publish/</a>. Open the Alpha tab, click on the upload button, and drag in your new APK.</p>
<p>6. After that, you should see the expansion file listed. (If not, try again.) You may click on it to upload a replacement expansion file if needed. Below that is an option to upload a patch file.</p>
<p>Below that is a text box for you to state what&#8217;s new in this version.</p>
<p>Click on the Save button at bottom.</p>
<p>If you get the error message at top, &#8220;An unexpected error occurred. Please try again later. (0),&#8221; then click Cancel, sign out, then sign in again. It should then work. Click the Save button.</p>
<p>7. In the Alpha Testing tab, under &#8220;Alpha testers,&#8221; click on Manage list of testers.&#8221;</p>
<p>8. Enter the Google Group email, myapp-alpha-testing@googlegroups.com, then Add. The group name will be acknowledged underneath. Click Close.</p>
<p>7. You must publish the Alpha app before it can be sent to testers. Make sure all required fields for the app are filled in and saved, including images. Since this was only a practice app, I used dummy text and images from an earlier app. Click on Ready to publish &gt; Publish this app.</p>
<p>8. Let&#8217;s do Alpha Testing. Click on Developer Console to get to your list of apps and click on myapp &gt; APK.</p>
<p>9. In the Alpha Testing tab, under &#8220;Alpha testers,&#8221; click on Manage list of testers.&#8221;</p>
<p>10. You&#8217;ll see the link to send to your testers, <a href="https://play.google.com/apps/testing/com.companyname.myapp" rel="nofollow">https://play.google.com/apps/testing/com.companyname.myapp</a>. Highlight it and copy it.</p>
<p>11. Create a &#8220;New Topic&#8221; in your<strong> Google Group</strong>, paste in the above URL, and Post.</p>
<p>12. Back in<strong> the welcome gmail email,</strong> I clicked on &#8220;Visit This Group&#8221; and signed in. I tapped on the link to enter, then on to a page welcoming me to &#8220;Become A Tester.&#8221; I accepted.</p>
<p>13. At the bottom appeared a link to download myapp from the Play Store. I was greeted with, &#8220;Item not found. Retry.&#8221; It just needed more time to work through the Play system. Clicking on it later, the Play Store page for myApp appeared. I clicked on the Install button, then Open &#8212; and received the message, &#8220;Unfortunately, HelloCordova has stopped.&#8221; Ouch. I hate it when that happens.</p>
<h2>Upload Notes</h2>
<p>1. When Google Play downloads your expansion files to a device, it saves them to the device&#8217;s shared storage location. To ensure proper behavior, you must not delete, move, or rename the expansion files. In the event that your application must perform the download from Google Play itself, you must save the files to the exact same location within the expansion file.</p>
<p>2. One of the great benefits of using expansion files on Google Play is the ability to update your application without re-downloading all of the original assets. Because Google Play allows you to provide two expansion files with each APK, you can use the second file as a &#8220;patch&#8221; that provides updates and new assets. Doing so avoids the need to re-download the main expansion file which could be large and expensive for users.</p>
<p>As long as you don&#8217;t change the main expansion file that&#8217;s associated with the APK in the Developer Console, users who previously installed your application will not download the main expansion file. Existing users receive only the updated APK and the new patch expansion file (retaining the previous main expansion file).</p>
<p>3. APK expansion files (e.g., audio files), as of 10/10/2014, cannot be run in conjunction with the Cordova Media plugin when using the xAPKreader plugin. Please see <a title="https://github.com/agamemnus/cordova-plugin-xapkreader/blob/gh-pages/media_plugin_workaround.txt" href="https://github.com/agamemnus/cordova-plugin-xapkreader/blob/gh-pages/media_plugin_workaround.txt" target="_blank">https://github.com/agamemnus/cordova-plugin-xapkreader/blob/gh-pages/media_plugin_workaround.txt</a> for more details.</p>
<p>4. If you uninstall the xAPKreader plugin, the process will not undo your hand-made entries in the .xml files.</p>
<blockquote><p>Follow-up comments in the Google Groups forum:</p>
<p><a title="https://groups.google.com/forum/#!topic/phonegap/6NTRDZHN5Cw" href="https://groups.google.com/forum/#!topic/phonegap/6NTRDZHN5Cw" target="_blank">https://groups.google.com/forum/#!topic/phonegap/6NTRDZHN5Cw</a></p></blockquote><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/android-debugging/'>Android debugging</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1636/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1636/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1636/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1636/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1636/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1636/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1636/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1636/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1636/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1636/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1636/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1636/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1636&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/12/12/adding-an-android-apk-expansion-file-to-a-cordova-project/feed/</wfw:commentRss>
		<slash:comments>21</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Adding ProGuard to Your Android Cordova Project</title>
		<link>https://iphonedevlog.wordpress.com/2014/12/05/adding-proguard-to-your-android-cordova-project/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/12/05/adding-proguard-to-your-android-cordova-project/#comments</comments>
		<pubDate>Fri, 05 Dec 2014 19:24:15 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[app submission]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[proguard]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1621</guid>
		<description><![CDATA[&#8220;The ProGuard tool shrinks, optimizes, and obfuscates your code by removing unused code and renaming classes, fields, and methods with semantically obscure names. The result is a smaller sized .apk file that is more difficult to reverse engineer&#8221; (from http://developer.android.com/tools/help/proguard.html). You&#8217;ll want to use this tool if your app has sensitive security features you want [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1621&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>&#8220;The ProGuard tool shrinks, optimizes, and obfuscates your code by removing unused code and renaming classes, fields, and methods with semantically obscure names. The result is a smaller sized .apk file that is more difficult to reverse engineer&#8221; (from <a href="http://developer.android.com/tools/help/proguard.html" rel="nofollow">http://developer.android.com/tools/help/proguard.html</a>). You&#8217;ll want to use this tool if your app has sensitive security features you want to protect. <em>To my knowledge, it does not obfuscate your HTML.</em></p>
<p>These steps assume you&#8217;ve already built your Android Cordova project and just about finished it, and are ready to build a release version of the app.<span id="more-1621"></span></p>
<p>1. To implement this, open /platforms/android/project.properties and uncomment one line by removing the &#8220;#&#8221; at left:</p>
<pre>#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt</pre>
<p>2. Add these two lines below the final line of the file and save, even though it says, “Do not modify this file — YOUR CHANGES WILL BE ERASED!” Of course, change &#8220;myapp&#8221; to your own app name.</p>
<pre>key.store=myapp.keystore 
key.alias=myapp</pre>
<p>Now when you create the release version, the apk will be obfuscated. There are several more steps to take. (If you are submitting this app to the Amazon Appstore, read these extra steps: <a title="https://developer.amazon.com/post/TxHZ4VD3PRBCAV/Code-Obfuscation-for-the-Amazon-In-App-Purchasing-API.html" href="https://developer.amazon.com/post/TxHZ4VD3PRBCAV/Code-Obfuscation-for-the-Amazon-In-App-Purchasing-API.html" target="_blank">https://developer.amazon.com/post/TxHZ4VD3PRBCAV/Code-Obfuscation-for-the-Amazon-In-App-Purchasing-API.html </a>)</p>
<p>3. Follow the steps on this page to sign the apk: <a title="https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/" href="https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/" target="_blank">https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/</a> , from &#8220;Signing a First Version Apk Apart from Eclipse&#8221; up to the line &#8220;Now it’s time to sign the app with the key and create the release version.&#8221; Then do the following.</p>
<p>4. In your /myapp folder in Terminal, run:</p>
<pre>cordova build android --release</pre>
<p>5. When finished, it will return an error, &#8220;platforms/android/myapp.keystore (No such file or directory)&#8221;. To fix the error, duplicate /android/ant-build/proguard.txt and rename it proguard-project.txt.</p>
<p>6. Move proguard-project.txt to the /android folder.</p>
<p>7. Move your myapp.keystore file to /android.</p>
<p>8. Run the <strong>cordova build android &#8211;release</strong> command again (watch for where it requests your passphrase twice), and all should be well. Your CordovaApp-release.apk file is put in /myapp/platforms/android/ant-build. This is the file you would rename and upload to Google Play.</p>
<p>9. A /proguard folder will also have been created in the /ant-build folder. <span style="color:#ff0000;"><strong>Important!</strong> </span>Save the /ant-build/proguard/mapping.txt file along with your .keystore file and its passwords/passphrases to a safe place. Rename mapping.txt to mapping-myapp-v1.0.0.txt and retain it for future debugging efforts. Save a copy of every final version&#8217;s mapping.txt file by including the version number in the filename as I did here. Go ahead and open it. It shows you how your classes have been renamed.</p>
<p>10. Read the bottom of <a title="http://developer.android.com/tools/help/proguard.html" href="http://developer.android.com/tools/help/proguard.html" target="_blank">http://developer.android.com/tools/help/proguard.html</a> to see how to read a stack trace using the mapping.txt file.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/app-submission/'>app submission</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/proguard/'>proguard</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1621/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1621/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1621/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1621/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1621/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1621/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1621/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1621/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1621/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1621/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1621/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1621/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1621&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/12/05/adding-proguard-to-your-android-cordova-project/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using PhoneGap CLI 3.6.3 Commands</title>
		<link>https://iphonedevlog.wordpress.com/2014/12/01/using-phonegap-cli-3-6-3-commands/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/12/01/using-phonegap-cli-3-6-3-commands/#comments</comments>
		<pubDate>Mon, 01 Dec 2014 17:24:26 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[inAppBrowser]]></category>
		<category><![CDATA[PhoneGap Build]]></category>
		<category><![CDATA[plugin]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1612</guid>
		<description><![CDATA[Here is a rundown on the phonegap commands you can execute with version 3.6.3 PhoneGap CLI (command-line interface) using the Terminal or console. These commands assume you have set in Terminal the starting folder in which the project files are located. So if you want the command to act on /myApp2, for example, the Terminal [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1612&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>Here is a rundown on the phonegap commands you can execute with version 3.6.3 PhoneGap CLI (command-line interface) using the Terminal or console.<span id="more-1612"></span></p>
<p>These commands assume you have set in Terminal the starting folder in which the project files are located. So if you want the command to act on /myApp2, for example, the Terminal window command line should already include myApp2 at left, somewhere before the $. You would type your commands to the right of the $. To set the starting folder:<br />
a. Open a Finder window and select the folder you want to create your project’s folder inside of, such as /PhonegapApps<br />
b. Open the Terminal app (click on its icon in the dock below, or click on the magnifying glass at top right and type in “terminal”), type cd and a space (for “change directory”), drag the selected folder to the Terminal screen, let go, click on the Terminal to select it, then hit Return. This will orient all commands to that folder.</p>
<h2>install</h2>
<p>Install phonegap CLI with the following:</p>
<pre>npm install -g phonegap</pre>
<p>. . . or with the following, which requires system password:</p>
<pre>sudo npm install -g phonegap</pre>
<p>(Note that commands with &#8220;npm&#8221; assume you have node.js installed on your system. For more information on this, read: <a title="https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/" href="https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/" target="_blank">https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/</a>)</p>
<h2>&#8211;version</h2>
<p>Find out or verify what version is installed on your system with:</p>
<pre>phonegap --version</pre>
<h2>update</h2>
<p>Update to 3.6.3-0.22.6 or higher with the following to gain new functionality over previous versions:</p>
<pre>npm update -g phonegap</pre>
<p>. . . or use the following, which requires system password (use the following if the earlier command resulted in the line: &#8220;npm ERR! Please try running this command again as root/Administrator.&#8221;):</p>
<pre>sudo npm update -g phonegap</pre>
<h2>help</h2>
<p>Get proper command format for using the phonegap CLI commands with:</p>
<pre>phonegap</pre>
<p>Get help for specific commands with the -h or &#8211;help flags:</p>
<pre>phonegap platform add -h</pre>
<p>Get more information to accompany your output with the -d or &#8211;verbose flags added to your command (helpful when you want to diagnose error output):</p>
<pre>phonegap platform add android -d</pre>
<p>&nbsp;</p>
<p>Follow these next steps with me to see what they do.</p>
<h2>create</h2>
<pre>phonegap create myApp1</pre>
<p>This will create a default phonegap app that includes the following in your config.xml file:</p>
<pre>&lt;widget id="com.phonegap.helloworld" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:gap="http://phonegap.com/ns/1.0"&gt;
 &lt;name&gt;Hello World&lt;/name&gt;</pre>
<h2>create +</h2>
<pre>phonegap create myApp2 "com.companyname.appname" "App Name"</pre>
<p>This will create a default phonegap app that includes the following in your config.xml file:</p>
<pre>&lt;widget id="com.companyname.appname" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:gap="http://phonegap.com/ns/1.0"&gt;
 &lt;name&gt;App Name&lt;/name&gt;</pre>
<h2>&#8211;copy-from</h2>
<pre>phonegap create myApp3 --copy-from myApp2</pre>
<p>This will create a new app in the folder /myApp3 that is a duplicate of /myApp2. Any files in /myApp2/hooks and /myApp2/www will be copied, but not the files in /myApp2/plugins or /myApp2/platforms. Config.xml is default phonegap:</p>
<pre>&lt;widget id="com.phonegap.helloworld" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:gap="http://phonegap.com/ns/1.0"&gt;
 &lt;name&gt;Hello World&lt;/name&gt;</pre>
<h2>&#8211;copy-from +</h2>
<pre>phonegap create myApp4 "com.companyname.appname4" "App Name4" --copy-from myApp2</pre>
<p>This will create a new app in the folder /myApp4 that is a duplicate of /myApp2. Any files in /myApp2/hooks and /myApp2/www will be copied, but not the files in /myApp2/plugins or /myApp2/platforms. Config.xml includes the &#8220;com.companyname.appname4&#8221; &#8220;App Name4&#8221; information from the command line:</p>
<pre>&lt;widget id="com.companyname.appname4" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:gap="http://phonegap.com/ns/1.0"&gt;
 &lt;name&gt;App Name4&lt;/name&gt;</pre>
<h2>&#8211;link-to</h2>
<pre>phonegap create myApp5 --link-to myApp2</pre>
<p>Looking inside the folder, we see symlinks (aliases or shortcuts) to myApp2&#8217;s config.xml, /hooks, and /www folders. Note that if you delete myApp2&#8217;s files, then create myApp2 again, the symlinks will point to the files in the Trash, not the new myApp2 folders of the same name.</p>
<h2>info</h2>
<pre>cd myApp5</pre>
<pre>phonegap info</pre>
<p>This will give you the contents of the config.xml file and list all the plugins and platforms associated with the project.</p>
<h2>platform add</h2>
<pre>phonegap platform add android</pre>
<p>Adds the android platform files to the project. Added to /platforms/android.</p>
<h2>platform rm</h2>
<pre>phonegap platform rm android</pre>
<p>Removes the android platform from the project. All files of /platforms/android, including the folder, are removed.</p>
<h2>build</h2>
<pre>phonegap build android</pre>
<p>Adds the android (or other specified platform) to the project if it&#8217;s not there already and builds it, creating a debug version apk. Look in /myApp5/platforms to see the files generated. (See /myApp5/platforms/android/ant-build/AppName-debug.apk for the apk file to test on your device.)</p>
<h2>plugin add</h2>
<pre>phonegap plugin add &lt;...&gt;</pre>
<p>Add plugins to phonegap for increased functionality. Use the plugin syntax listed at <a title="http://docs.phonegap.com/en/3.5.0/cordova_plugins_pluginapis.md.html#Plugin%20APIs" href="http://docs.phonegap.com/en/3.5.0/cordova_plugins_pluginapis.md.html#Plugin%20APIs" target="_blank">http://docs.phonegap.com/en/3.5.0/cordova_plugins_pluginapis.md.html#Plugin%20APIs</a> and <a title="http://plugins.telerik.com/" href="http://plugins.telerik.com/" target="_blank">http://plugins.telerik.com/</a>. For instance, the following command adds the InAppBrowser plugin to the project:</p>
<pre>phonegap plugin add org.apache.cordova.inappbrowser</pre>
<p>Look in the /plugins folder for the files.</p>
<h2>plugins list</h2>
<pre>phonegap plugins ls</pre>
<p>This command will list all the plugins downloaded that are in the /plugins folder, along with their version number. For instance, this output:</p>
<pre>org.apache.cordova.inappbrowser 0.5.3 "InAppBrowser"</pre>
<h2>plugin rm</h2>
<pre>phonegap plugin rm &lt;...&gt;</pre>
<p>Removes the specified plugin. For example the following command removes the InAppBrowser plugin from the project:</p>
<pre>phonegap plugin rm org.apache.cordova.inappbrowser</pre>
<h2>install, run</h2>
<p>Install has been deprecated, meaning it will be removed from further use in a future version. Use run instead. Plug your Android device into your computer, fire up to the home screen, make sure you give it debugging permissions in Settings, and run:</p>
<pre>phonegap run android</pre>
<p>The project is built and displayed on the device.</p>
<h2>emulate</h2>
<pre>phonegap emulate android</pre>
<p>If Eclipse is installed and working properly, this command starts up the emulator and displays the app in it (usually starts up very slowly). Doesn&#8217;t always work for me.</p>
<h2>serve</h2>
<pre>phonegap serve android</pre>
<p>Displays the app in the browser. Console returns:</p>
<pre>[phonegap] starting app server...
[phonegap] listening on 192.168.254.116:3000</pre>
<p>You then copy the URL, <strong>192.168.254.116:3000</strong>, and paste it into a browser like Chrome. Click on Cancel for all the popups. To stop the server, click on the Terminal window then press <strong>ctrl-c</strong>.</p>
<h2>prepare</h2>
<pre>phonegap prepare android</pre>
<p>Use this command to update the project after any changes to the /www folder. For example, if you are making changes to files in the /www folder in response to a warning or error in Eclipse, then run the prepare command when the changes are done, then in Eclipse run Clean so Eclipse can recognize the changes.</p>
<h2>compile</h2>
<pre>phonegap compile android</pre>
<p>Compiles the platform project without preparing it. If you made changes that need to be incorporated into the project, run the prepare command first.</p>
<h2>remote</h2>
<p>Use this with development in cloud with Phonegap Build. I don&#8217;t  use that service, so I can&#8217;t give any further information.</p>
<h2>save &#8211;experimental</h2>
<p>Add a plugin then run the following to write the info into config.xml:</p>
<pre>phonegap save plugins --experimental</pre>
<p>For example, if the InAppBrowser was recently added and this command was run, it&#8217;ll write the following into config.xml:</p>
<pre>&lt;feature name="InAppBrowser"&gt;
 &lt;param name="id" value="org.apache.cordova.inappbrowser" /&gt;
 &lt;/feature&gt;</pre>
<p>(However, if you have removed all the gap:plugin lines from config.xml, it will not add it back in, such as &lt;gap:plugin name=&#8221;org.apache.cordova.inappbrowser&#8221; /&gt;.)</p>
<p>Add a platform then run the following to save the platform info into config.xml:</p>
<pre>phonegap save platforms --experimental</pre>
<p>The following line is added to config.xml. It is the prerequisite for the following restore command:</p>
<pre>&lt;cdv:engine id="android" /&gt;</pre>
<h2>restore &#8211;experimental</h2>
<pre>phonegap restore plugins --experimental</pre>
<p>After performing the save command and removing the plugins from the /plugins folder, this command restores all the plugins to that folder. This is helpful when debugging, and you need to remove all the plugins and reinstall them. This one command will take care of restoring all of them for you, saving time.</p>
<pre>phonegap restore platforms --experimental</pre>
<p>This command will restore the platforms removed from the project&#8217;s /platforms folder earlier, but only if the save command was used first. This one command will take care of restoring all of them for you, saving time.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/inappbrowser/'>inAppBrowser</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap-build/'>PhoneGap Build</a>, <a href='https://iphonedevlog.wordpress.com/tag/plugin/'>plugin</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1612/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1612/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1612/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1612/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1612/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1612/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1612/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1612/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1612/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1612/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1612/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1612/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1612&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/12/01/using-phonegap-cli-3-6-3-commands/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Submitting an Android App to Amazon</title>
		<link>https://iphonedevlog.wordpress.com/2014/11/29/submitting-an-android-app-to-amazon/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/11/29/submitting-an-android-app-to-amazon/#comments</comments>
		<pubDate>Sat, 29 Nov 2014 15:23:40 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[Amazon]]></category>
		<category><![CDATA[app submission]]></category>
		<category><![CDATA[Application Assets]]></category>
		<category><![CDATA[Fire phone]]></category>
		<category><![CDATA[Fire tablet]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1599</guid>
		<description><![CDATA[Are you curious about the process of submitting an app to Amazon? These are the steps I took. According to Amazon&#8217;s developer page at https://developer.amazon.com/public/solutions/devices/fire-tablets, you develop Amazon apps with Android Studio Beta, and your project should build by Gradle. My project was neither of these and it still was accepted. I chose an app [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1599&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>Are you curious about the process of submitting an app to Amazon? These are the steps I took.</p>
<p>According to Amazon&#8217;s developer page at <a title="https://developer.amazon.com/public/solutions/devices/fire-tablets " href="https://developer.amazon.com/public/solutions/devices/fire-tablets" target="_blank">https://developer.amazon.com/public/solutions/devices/fire-tablets</a>, you develop Amazon apps with Android Studio Beta, and your project should build by Gradle. My project was neither of these and it still was accepted. I chose an app already made with Cordova CLI, proofed by Eclipse, signed and zipaligned via CLI, and successfully uploaded to Google Play, and uploaded it to Amazon with just a few graphic asset size changes. Here are the steps I took.<span id="more-1599"></span></p>
<p>These steps assume you already have an app that was successfully uploaded to Google Play, and you&#8217;ve already set up a developer account with Amazon. Those steps are not covered here. A sample workflow of using Cordova CLI is here: <a title="https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/" href="https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/" target="_blank">https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/</a></p>
<p>You&#8217;ll need to remove references to the iTunes and Google Play stores or it will be rejected.</p>
<h2>Submitting an updated app</h2>
<p>The process for submitting an updated app is slightly different than for new apps. Here is the sequence of steps needed. For submitting a new app, skip this section.</p>
<p>Reference: <a title="https://developer.amazon.com/public/support/submitting-your-app/tech-docs/device-targeting" href="https://developer.amazon.com/public/support/submitting-your-app/tech-docs/device-targeting" target="_blank">https://developer.amazon.com/public/support/submitting-your-app/tech-docs/device-targeting</a></p>
<p class="p1">1. Remember to remove links to app stores other than Amazon in your app. Linking to iTunes or Google Play will be cause for app rejection.</p>
<p class="p1">2. Sign in: <a title="https://developer.amazon.com/home.html" href="https://developer.amazon.com/home.html" target="_blank">https://developer.amazon.com/home.html</a></p>
<p class="p1">3. Test your apk first to see if it passes muster. Open the following page and drag your apk to the drop location:<br />
<a title="https://developer.amazon.com/public/resources/development-tools/app-testing-service/dashboard.html" href="https://developer.amazon.com/public/resources/development-tools/app-testing-service/dashboard.html" target="_blank">https://developer.amazon.com/public/resources/development-tools/app-testing-service/dashboard.html</a></p>
<p class="p1">4. Drag your app to the area and wait for results.</p>
<p class="p1">5. Click on Submit to Amazon Appstore.</p>
<p class="p1">6. You will be asked if you want to replace the binary. Yes.</p>
<p class="p1">7. On the next page, make sure all info is correct. Scroll down and change the Binary alias, if desired.<span class="Apple-converted-space">  </span>(I update it to reflect the latest version.)</p>
<p class="p1">8. Scroll down and click on Save.</p>
<p class="p1">9. You’ll find “Upcoming Version (Incomplete).” That’s because the “Release Notes” tab does not have a green check circle. Click on that tab then on Edit for the release note section, and give details about the update. Click Save when done.</p>
<p class="p1">10. All of your tab&#8217;s green dots should be lined up in a row, and Upcoming Version (Ready to Submit) should appear. Click on Submit App at bottom.</p>
<p class="p1">11. Upcoming Version (Under Review) now appears. It has been submitted to the Amazon Appstore review team. Wait for an email to tell you of its acceptance status.</p>
<h2>Submitting a new app</h2>
<p>Sign in with your Amazon.com account at:<br />
<a title="https://developer.amazon.com/public/solutions/devices/fire-tablets" href="https://developer.amazon.com/public/solutions/devices/fire-tablets" target="_blank">https://developer.amazon.com/public/solutions/devices/fire-tablets</a></p>
<p>Test your apk first to see if it passes muster. Open the following page and drag your apk to the location and wait while it is tested:<br />
<a title="https://developer.amazon.com/public/resources/development-tools/app-testing-service/dashboard.html" href="https://developer.amazon.com/public/resources/development-tools/app-testing-service/dashboard.html" target="_blank">https://developer.amazon.com/public/resources/development-tools/app-testing-service/dashboard.html</a></p>
<p>I received the notice, &#8220;Compatibility test successfully completed. We did not find any of the common issues that can prevent an app from being published to the Amazon Appstore.&#8221; Also, for the Compatibility Test, for Amazon phone and tablet devices, &#8220;No Issues Found.&#8221; For other Android devices, &#8220;No Issues Found.&#8221; Meanwhile, the test was still in progress for Fire phone and Fire tablets. When finished, the same message was given for both: &#8220;No crash or error detected.&#8221; Good news! (Thank you, Team Cordova!)</p>
<h2>Preparing App Assets</h2>
<p>I clicked through to submit the app to see what happens next. I was presented with the Amazon Developer Console, which had fields to fill out for various app details. Several fields were already filled out through my existing Amazon account and its analysis of the uploaded app. Here are the app assets they require before an app can be submitting and presented to the review team. Use this form to prepare for app submission.</p>
<h3>General Information tab</h3>
<p><strong>App title:</strong><br />
<strong>App SKU:</strong><br />
<strong>version ID:</strong> (generated by Amazon)<br />
<strong>Application Key:</strong> (generated by Amazon)<br />
<strong>Category:</strong><br />
<strong>Developer Select</strong> (view report to see if your qpp qualifies for benefits)<br />
<strong>Customer Support email Address:</strong><br />
<strong>Customer support phone:</strong><br />
<strong> Customer support website:</strong></p>
<h3>Availability and Pricing tab</h3>
<p><strong>Where would you like your app to be sold?</strong><br />
<strong> Are you charging for this app? Base list price and denomination:</strong><br />
<strong> Marketplace list prices:</strong><br />
<strong> Has this app already been released?</strong> (Leaving this field blank will make the app available after it has been approved. Publishing of an approved app will begin at the time entered and will be available on Amazon several hours after. Times are shown and entered in the Pacific Time Zone.)<br />
<strong>When would you like this app to be available on Amazon?</strong> (Leave blank if you want it available immediately after reviewer acceptance.)<br />
<strong>Free App of the Day (FAD) eligibility</strong> (If your app is being considered, we will contact you with more detail about the program and what to expect as your app goes through the approval process.)</p>
<h3>Description tab</h3>
<p><strong>Language:</strong><br />
<strong> Display Title:</strong><br />
<strong> Short description:</strong> (A shorter version of your app description for use on mobile devices.<br />
Maximum characters: 1200.)<br />
<strong>Long Description:</strong> (A description of your app for use on the Amazon.com website.<br />
Maximum characters: 4000.) I notice that line returns are not honored. Everything is in one paragraph. However, after viewing the Amazon.com product page, it honored the line breaks. I went back to the Developer Console and changed it.<br />
Product feature bullets. (Three to five concise app features, each on a new line. These product features will appear on the Amazon.com website.)<br />
<strong>Keywords</strong> (Search terms used to increase the discoverability of your app. Use a comma or white space to separate your terms.)<br />
<strong>Save and add a translation.</strong></p>
<h3>Images &amp; Multimedia tab</h3>
<p>Drag the files into the Upload Image square.</p>
<p><strong>Small icon:</strong> 114 x 114px PNG (with transparency. Must be 24 or 32 bit or it will be rejected). This is the same size as the iPhone icon@2x.png file.</p>
<p><strong>Large icon:</strong> 512 x 512 PNG (with transparency).</p>
<p><strong>Screenshots:</strong><br />
From 3 to 10 PNGs or JPGs 800 x 480px, 1024 x 600px, 1280 x 720px, 1280 x 800px, 1920 x 1080px, 1920 x 1200px, or 2560 x 1600px (portrait or landscape).</p>
<p><strong>Optional assets:</strong></p>
<p><strong>Amazon Fire TV Screenshots:</strong><br />
Between 3 and 10 PNGs or JPGs 800 x 480px, 1024 x 600px, 1280 x 720px, 1280 x 800px, 1920 x 1080px, 1920 x 1200px, or 2560 x 1600px (portrait or landscape)</p>
<p><strong>Promotional image</strong> (recommended):<br />
1024 x 500px (landscape only) PNG or JPG</p>
<p><strong>Upload Video(s):</strong><br />
Up to 5 MPEG-2, WMV, MOV, FLV, AVI, or H.264 MPEG-4 720 &#8211; 1080px wide (4:3 or 16:9); 1200 kbps or higher.<br />
Please SFTP files larger than 150 MB (link to instructions provided).</p>
<h3>Content Rating tab</h3>
<h3>Binary Files tab</h3>
<p><strong>Apply Amazon DRM?</strong> (yes or no)<br />
<strong>Binary file</strong> (file details already given)<br />
<strong>Device support</strong> (list of devices Amazon says is supported. In my case almost all of them were pre-seleted except for Amazon Fire TV and Amazon Fire TV Stick.) From the resource link: &#8220;Select which devices are supported by this APK. For the first binary, support is turned on by default for all Amazon Fire phone and tablet devices, and all non-Amazon Android devices, including BlackBerry 10 devices. You must explicitly turn on support for Amazon Fire TV devices. If you turn on support for a Fire TV device, you must also indicate which types of controllers are supported.</p>
<p>&#8220;For subsequent binaries, previously selected devices will be unavailable. Also, you may only target one binary for all non-Amazon Android devices, including BlackBerry 10 devices. This means that if you select only some of the non-Amazon Android devices, only those devices will be targeted and you will not be able to target the remaining non-Amazon devices with a subsequent APK. Amazon devices may be targeted individually, meaning that you may provide as many binaries as there are Amazon devices.&#8221;<br />
<strong>Language Support:</strong><br />
<strong> Export Compliance</strong> (checkbox) I certify this App may be imported to and exported from the United States and all other countries and regions in which we operate our program or in which you&#8217;ve authorized sales to end users (without the need for us to obtain any license or clearance or take any other action) and is in full compliance with all applicable laws and regulations governing imports and exports, including those applicable to software that makes use of encryption technology.<br />
<strong>Use Amazon Maps Redirection:</strong> (checkbox) Amazon devices do not support the Google Maps API. However, the Amazon Maps API provides interface parity with the Google Maps v1 API. By using Amazon Maps Redirection, you can automatically redirect Google Maps v1 API calls from your app to the Amazon Maps API, providing a seamless maps experience in your app with no coding changes. The redirection occurs ONLY on Amazon devices.</p>
<p>Portions of the Amazon Maps API are provided by HERE North America, LLC (“HERE”). Your use of Amazon Maps Redirection is subject to the terms of the Amazon Maps Schedule, including the HERE Materials Terms and Conditions (links given).</p>
<p><strong>Binary alias.</strong> (This name is used to distinguish between multiple binary files. Alphanumeric characters, dots (.), and underscores (_) only.):<br />
<strong>Testing instructions.</strong> (Please detail any special requirements to test your app. Maximum characters: 4000.)</p>
<h2>Submitting new app</h2>
<p>When all these were taken care of, I clicked on Submit App. (Each tab has a checkmark to indicate that that section was completed.) The following screen indicated that it was &#8220;Under Review.&#8221; That was Fri. 1:30pm. I received an email that evening at 9:41 to inform me that it passed all tests and was available in the store. 8-hour service! Not bad.</p>
<p>Unlike the Apple store and Google Play, you cannot outright remove an app from the store through the Developer Console; you notify Amazon and they will do it for you.</p>
<p>If you are curious about an app layout in Amazon.com, my app is located here:<br />
<a title="http://www.amazon.com/Steve-Husting-Pocket-Hymnal/dp/B00QB3D084/ref=sr_1_1?ie=UTF8&amp;qid=1417273958&amp;sr=8-1&amp;keywords=husting+pocket+hymnal" href="http://www.amazon.com/Steve-Husting-Pocket-Hymnal/dp/B00QB3D084/ref=sr_1_1?ie=UTF8&amp;qid=1417273958&amp;sr=8-1&amp;keywords=husting+pocket+hymnal" target="_blank">http://www.amazon.com/Steve-Husting-Pocket-Hymnal/dp/B00QB3D084/ref=sr_1_1?ie=UTF8&amp;qid=1417273958&amp;sr=8-1&amp;keywords=husting+pocket+hymnal</a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/amazon/'>Amazon</a>, <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/app-submission/'>app submission</a>, <a href='https://iphonedevlog.wordpress.com/tag/application-assets/'>Application Assets</a>, <a href='https://iphonedevlog.wordpress.com/tag/fire-phone/'>Fire phone</a>, <a href='https://iphonedevlog.wordpress.com/tag/fire-tablet/'>Fire tablet</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1599/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1599/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1599/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1599/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1599/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1599/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1599/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1599/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1599/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1599/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1599/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1599/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1599&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/11/29/submitting-an-android-app-to-amazon/feed/</wfw:commentRss>
		<slash:comments>3</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Setting Up Your Development Environment for Cordova/PhoneGap Android projects</title>
		<link>https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/#comments</comments>
		<pubDate>Thu, 30 Oct 2014 18:40:09 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[ADT]]></category>
		<category><![CDATA[Android debugging]]></category>
		<category><![CDATA[Android SDK]]></category>
		<category><![CDATA[Android SDK Manager]]></category>
		<category><![CDATA[ant]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[jre]]></category>
		<category><![CDATA[node]]></category>
		<category><![CDATA[npm]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1528</guid>
		<description><![CDATA[Updated 8/2/2015 to include Windows 7 setup. Adobe PhoneGap/Apache Cordova CLI quickly sets up your project files for the mobile environment. However, it requires a hefty setup of your development environment before you can begin making Android apps. If you are a working developer, all these tools are par for the course and you&#8217;ll have [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1528&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p><span style="color:#ff0000;">Updated 8/2/2015 to include Windows 7 setup.</span> Adobe PhoneGap/Apache Cordova CLI quickly sets up your project files for the mobile environment. However, it requires a hefty setup of your development environment before you can begin making Android apps. If you are a working developer, all these tools are par for the course and you&#8217;ll have them already installed. If you are trying out Cordova/PhoneGap for the first time, and you are new to the programming world &#8211; welcome! &#8211; you need to install all the &#8220;dependencies&#8221; that Cordova/PhoneGap assumes are already resident on your system. Follow all these steps to make your Cordova/PhoneGap work go smoothly. Of course, these steps need to be done just once.<span id="more-1528"></span></p>
<h2>Install ADT + Eclipse</h2>
<blockquote><p><span style="color:#ff0000;">I no longer use this step of installing Eclipse.</span> Install <a title="https://developer.android.com/sdk/index.html#top" href="https://developer.android.com/sdk/index.html#top" target="_blank">Android Studio</a> instead.</p>
<p>a. After the AS installer starts, it will ask you to link to the JDK location. If you can&#8217;t do that, then click on the link the installer gives. (In my case, I clicked through and selected Java SE Development Kit for Windows X64. It installed the jdk1.7.0_79 files in C:\Program Files\Java\.</p>
<p>b. Navigating to this folder in the AS installer, I was met with rejection of the folder, even though it met the requirements of housing /bin/java.exe and being 1.7 or higher. I simply deleted the URL in the box and clicked on Next to continue and install AS. At this point, about 60 min. have elapsed.)</p>
<p>c. Then jump down to <strong>Install Node and npm </strong>below.</p></blockquote>
<p>1. Users often use Eclipse with Cordova/PhoneGap projects. To download, hit the &#8220;Download Eclipse ADT with the Android SDK for xxx&#8221; button from <a title="http://developer.android.com/sdk/index.html" href="http://developer.android.com/sdk/index.html" target="_blank">http://developer.android.com/sdk/index.html</a> (ADT = Android Development Tools.)<br />
2. I uncompressed and moved the /adt-bundle-mac-x86_64 folder to /Developers. This page gave a little more information on setting up the files, which we will follow next: <a title="http://developer.android.com/sdk/installing/installing-adt.html" href="http://developer.android.com/sdk/installing/installing-adt.html" target="_blank">http://developer.android.com/sdk/installing/installing-adt.html</a><br />
3. Start Eclipse, then select Help &gt; Install New Software. (To start Eclipse, click on the Spotlight icon in the upper right of your desktop and type in eclipse to find it.)<br />
4. In Eclipse, click on Add in the top-right corner.<br />
5, In the Add Repository dialog that appears, enter &#8220;ADT Plugin&#8221; for the Name and enter the following URL for the Location: <a href="https://dl-ssl.google.com/android/eclipse/" rel="nofollow">https://dl-ssl.google.com/android/eclipse/</a><br />
6. Click OK. If you have trouble acquiring the plugin, try using &#8220;http&#8221; in the Location URL, instead of &#8220;https&#8221; (https is preferred for security reasons).<br />
7. In the Available Software dialog, select the checkbox next to Developer Tools and click Next.<br />
8. In the next window, you&#8217;ll see a list of the tools to be downloaded. Click Next.<br />
9. Read and accept the license agreements, then click Finish. If, during the install process, you get a security warning saying that the authenticity or validity of the software can&#8217;t be established, click OK.<br />
10. When the installation completes, restart Eclipse.</p>
<p><strong>Install the Android SDK </strong></p>
<p>Android provides its own SDK to help us build applications that run in the Android environment. (SDK = Software Development Kit.)</p>
<p>1. When I restarted Eclipse in the last section, a dialog box popped up telling me that the &#8220;Location of the Android SDK has not been setup in the preferences.&#8221; I clicked on the Open Preferences button in that dialog.<br />
2. In the Preferences dialog, Hit the Browse button to navigate to the /adt-bundle-mac-x86_64/sdk folder and clicked Open.<br />
3. Click on Apply. An SDK Target will appear in the panel for the Android Preferences. In my case, Android 4.4W, API level 20. (The W means it&#8217;s for Android Wear projects. API = Application Programming Interface.)<br />
4. Click on Apply again, then OK.<br />
5. There was a Welcome to Android Development window waiting for me, requesting the SDK location. I chose to &#8220;Install new SDK&#8221; and checked both boxes under that heading. Click Finish.<br />
6. Select Accept All and Install to begin the long download. Whew! Almost done.<br />
7. You might get an alert in Eclipse informing you that an update was available. Click on the notice and answer positive to the next few prompts.<br />
8. After the install, a dialog tells me to open the SDK Manager, so I chose that button. The Android SDK Manager window opens.</p>
<p><strong>Android SDK Manager </strong></p>
<p>Android SDK allows us to choose which level of API we want to develop for and preview in a emulator. So in its on-screen emulator, it will show you what parts of your app work well and which parts don&#8217;t. So choose several different APIs. Each time Android comes out with an update, it receives a new API number. The latest at this writing is 23. Do not choose an API below 11. You&#8217;ll want to choose an API level that you know you&#8217;ll be coding for specifically, if you know it. (I believe that choosing the latest API makes it backwards-compatible.)</p>
<p>To get the Android SDK Manager running, open Terminal or Command Prompt and type:</p>
<pre>android</pre>
<p>1. I selected all files for API 19, the number for my device. (To find this number, I open Settings in my Nexus 7 and choose About tablet. Android version is noted as 4.4.2. That corresponds to API 19 in the SDK Manager. You want to choose an API no lower than that number &#8211; later APIs are backwards-compatible.) To choose the lowest number, read this: <a href="http://developer.android.com/about/dashboards/index.html" target="_blank">http://developer.android.com/about/dashboards/index.html</a> I clicked on Android 4.4.2 (API 19). (API = Application Programming Interface.) Go ahead and select any other packages you know you&#8217;ll need. Also review the package &#8220;Extras&#8221; to see if you need any of those.<br />
2. I clicked on the button saying, &#8220;Install xx packages..&#8221;<br />
3. I clicked on each of the package names at left and its Accept License button, then on Install. The installation may take 15-60 minutes, depending on which packages you chose and the speed of your computer. Don&#8217;t be fooled by the progress in percentages &#8211; that is per file, not for the complete download!<br />
4. Exit the SDK Manager (click on the red light at upper left) and click on Help &gt; Check for Updates to look for updates to the the software you just downloaded. This process will take several minutes.</p>
<p>Anytime you want to open Android SDK Manager later, go to Window &gt; Android SDK Manager.</p>
<h2>Install Node and npm</h2>
<p>1. Cordova uses Nodejs and npm to install its software on your system. I downloaded both from <a title="http://nodejs.org/" href="http://nodejs.org/" target="_blank">http://nodejs.org/</a>. It downloaded in my <strong>Mac</strong> as node-v0.10.13.pkg in /Downloads. I double-clicked its icon to start the installation. (npm = Node Package Manager.)</p>
<p>2. An installer appeared saying, “This package will install node and npm into /usr/local/bin.” I hit Continue and followed the prompts. The final Mac screen said,</p>
<pre>Node was installed at 
/usr/local/bin/node
npm was installed at 
/usr/local/bin/npm</pre>
<p>(usr = User. bin = binary.)</p>
<p><strong>In Windows,</strong> Node and npm were installed at C:\Program Files\nodejs.</p>
<h2>Install Ant</h2>
<p>Apache Ant is needed. Download it from <a title="http://ant.apache.org/bindownload.cgi" href="http://ant.apache.org/bindownload.cgi" target="_blank">http://ant.apache.org/bindownload.cgi</a>. I downloaded the zip version, right-clicked and selected Uncompress <strong>in Mac</strong>. I dragged the /apache-ant-1.9.3 folder to the /Developer folder. (Ant = Another Neat Tool.) <strong>In Windows</strong> I downloaded the zip version to Downloads, then dragged the apache-ant-1.9.6 folder to C:\Program Files.</p>
<h2>Install JRE</h2>
<p>Oracle JRE is needed. Download it from: <a title="http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1880261.html" href="http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1880261.html" target="_blank">http://www.oracle.com/technetwork/java/javase/downloads/jre7-downloads-1880261.html</a>. I chose the .tar.gz download for <strong>Mac OS X x64</strong> (Do you have a 32-bit processor or 64-bit? Find out here: <a title="http://32or64.com" href="http://32or64.com" target="_blank">http://32or64.com</a>). <strong>In Mac,</strong> right-click and Uncompress. I moved the /jre1.7.0_51.jre folder to /Developer. (JRE = Java Runtime Environment.) <strong>In Windows,</strong> move the file to C:\Program Files\.</p>
<h2>Set up the PATH statements in Mac</h2>
<p>We need to let the system know where our program files are so that the <strong>Mac</strong> Terminal or <strong>Windows</strong> Command Prompt will be able to find and run them. To do that, we&#8217;ll modify our <strong>Mac&#8217;s</strong> hidden .bash_profile file with a text editor and <strong>Window&#8217;s</strong> Environment Variables dialog box. The console will look up this file and apply the shortcuts to the commands. (If you can&#8217;t see your Mac&#8217;s hidden files, read further down for instructions on showing them.)</p>
<p>1. Get the path to your <strong>Mac&#8217;s</strong> adt-bundle-mac-x86_64 folder, in my case: ~/Developer/adt-bundle-mac-x86_64/. (The ~ is a shortcut for /Users/&lt;name&gt;.)</p>
<p>2. If you can see your hidden files, go to /Users/&lt;name&gt;/.bash_profile and open it in a text editor. Check to see if the following lines are there, but check each line and modify to match your own system&#8217;s setup.</p>
<pre>#tools
export PATH=${PATH}:~/Developer/adt-bundle-mac-x86_64/sdk/platforms
export PATH=${PATH}:~/Developer/adt-bundle-mac-x86_64/sdk/platform-tools
export PATH=${PATH}:~/Developer/adt-bundle-mac-x86_64/sdk/tools</pre>
<pre>#ant
export ANT_HOME=~/Developer/apache-ant-1.9.3/bin
export PATH=${PATH}:${ANT_HOME}/bin</pre>
<pre>#bin path
export PATH=${PATH}:~/bin
export PATH=${PATH}:~/usr/local/bin</pre>
<pre>#JRE
export PATH=${PATH}:~/Developer/jre1.7.0_51.jre/Contents/Home/bin</pre>
<pre>#Java
export JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home
export PATH=${PATH}:${JAVA_HOME}/bin</pre>
<p><span style="color:#ff0000;">Update!</span> When I installed Android Studio in the Mac, the Android SDK Manager displayed an address in the SDK Path field at top with this address: /Users/Steve/Library/Android/sdk. So Android Studio&#8217;s files will be put tehre by default. So the above <strong>#tools</strong> PATH statements will need to be changed to (&#8220;~&#8221; = /Users/Steve) :</p>
<pre>#tools: android, draw9patch, zipalign, etc.  
# "~" = /Users/Steve</pre>
<pre>export PATH=${PATH}:~/Library/Android/sdk
export PATH=${PATH}:~/Library/Android/sdk/platforms 
export PATH=${PATH}:~/Library/Android/sdkplatform-tools 
export PATH=${PATH}:~/Library/Android/sdk/tools</pre>
<p><strong>Test the PATH Statements</strong></p>
<p>Let&#8217;s test that the .bash_profile entries are correct. In the Terminal first type <strong>. .bash_profile</strong> (that&#8217;s a space between the two periods) to reset the file so Terminal knows it&#8217;s been updated.</p>
<p>a. Type <strong>java -version</strong> then tap Enter. You should get information about about Java. I got:</p>
<pre>java version "1.6.0_65"</pre>
<p>b. Type <strong>ant -version</strong> then tap Enter. You should get information about about Ant. If not (&#8220;command not found&#8221;), check your .bash_profile for a typo in the path. I got:</p>
<pre>Apache Ant(TM) version 1.9.3 compiled on December 23 2013</pre>
<p>c. Type <strong>android -h</strong> then tap Enter. The help for android commands should appear. If you get:</p>
<pre>can't find sdkmanager.jar</pre>
<p>&#8230; then complete quit Terminal and open it again, and type it again.</p>
<p><strong>Show Hidden Files in Mac</strong></p>
<p>To show the system&#8217;s hidden files which begin with a period, such as .bash_profile, type in Terminal:</p>
<pre>defaults write com.apple.finder AppleShowAllFiles TRUE</pre>
<p>. . . and hit Return. When the prompt returns type in Terminal:</p>
<pre>killall Finder</pre>
<p>. . . and hit Return. The desktop will go blank, then after a while will refresh. Open the Documents folder, then in Finder, Go &gt; Enclosing Folder, and see the hidden files in gray with a dot before their filename.</p>
<p>To hide the hidden files, repeat both commands, but substitute FALSE in place of TRUE for the first command.</p>
<h2>Set up the PATH statements in Windows</h2>
<p><strong>In Windows,</strong> you put all this PATH information in another place.</p>
<p>1. Click Start then Computer. Right-click on Computer in the left folder menu and select Properties then on Advanced system settings. Click on Environment Variables&#8230; Note that there are two main text areas. We are only going to fill in the lower section.</p>
<p>2. Scroll down until you come to Path. Double-click to open it. I have the following added to the end:</p>
<pre>C:\Program Files\Java\jre7\bin;

C:\Program Files\nodejs;

C:\Program Files\apache-ant-1.9.6\bin;

C:\Program Files\Java\jdk1.7.0_79\bin;

C:\Users\Our Computer\AppData\Local\Android\sdk;

C:\Users\Our Computer\AppData\Local\Android\sdk\build-tools;

C:\Users\Our Computer\AppData\Local\Android\sdk\platform-tools;

C:\Users\Our Computer\AppData\Local\Android\sdk\tools;</pre>
<p>It&#8217;s a good idea to find and open these folders to make sure they are all on your system. (This is Windows 7.) I couldn&#8217;t find the \AppData folder right away. To find it, I first had to click on Tools &gt; Folder Options in the file manager window, click on the View tab, and under <em>Hidden files and folders,</em> check the box for <em>Show hidden files, folders, and drives,</em> then OK.</p>
<p>In the environment variables box, the listing above is all on one line like this:</p>
<pre>C:\Program Files\Java\jre7\bin;C:\Program Files\nodejs;C:\Program Files\apache-ant-1.9.6\bin;C:\Program Files\Java\jdk1.7.0_79\bin;C:\Users\Our Computer\AppData\Local\Android\sdk;C:\Users\Our Computer\AppData\Local\Android\sdk\build-tools;C:\Users\Our Computer\AppData\Local\Android\sdk\platform-tools;C:\Users\Our Computer\AppData\Local\Android\sdk\tools</pre>
<p>3. Click OK to close the environment variables dialog. Shut down the other windows that led you there.</p>
<p>4. To get the console to recognize the changes, shut down the command prompt and open it again, then follow the next steps. If they don&#8217;t work, save your work, log out of Windows, log back in, then try the steps again.</p>
<p><strong>Test the PATH Statements</strong></p>
<p>Let&#8217;s test that the environment variables entries are correct. Open the Command Prompt if it isn&#8217;t already.</p>
<p>1. Type <strong>java -version</strong> then tap Enter. You should get information about about Java. I got:</p>
<pre>java version "1.8.0_25" 
Java(TM) SE Runtime Environment (build 1.8.0_25-b18)</pre>
<p>2. Type <strong>ant -v</strong> then tap Enter. You should get some scary-looking information, but look for this line:</p>
<pre>Apache Ant(TM) version 1.9.6 compiled on June 29 2015</pre>
<p>(If you get <span class="s1"><strong>Buildfile: build.xml does not exist!</strong> then try <strong>ant -version</strong> instead.)</span></p>
<p>3. Type <strong>npm</strong> then Enter. You should get an overview of available npm commands.</p>
<p>4. Type <strong>android</strong> then Enter. The SDK Manager window should come up. Let&#8217;s take care of that now:</p>
<p>5. Click on the check boxes for your device&#8217;s API. (To find this number, I open Settings in my Nexus 7 and choose About tablet. Android version is noted as 4.4.2. That corresponds to API 19 in the SDK Manager.) To choose the lowest number, read this: <a href="http://developer.android.com/about/dashboards/index.html" target="_blank">http://developer.android.com/about/dashboards/index.html</a> I clicked on Android 4.4.2 (API 19). (API = Application Programming Interface.) Click on as many APIs as on the devices with which you will test the app. You want to select the API with its Platform-tools and Build-tools selections.</p>
<p>6. When all the selections have been made, click on the Install xx packages button, click on each package and accept the license, then Install. Exit when done.</p>
<h2>Install Cordova or PhoneGap (Mac and Windows)</h2>
<p>Download Apache Cordova or Adobe PhoneGap from <a title="http://www.phonegap.com" href="http://www.phonegap.com" target="_blank">http://www.phonegap.com</a>. (Use phonegap if you expect to use the PhoneGap Build service &#8211; <a title="https://iphonedevlog.wordpress.com/2014/06/10/notes-about-using-phonegap-build/" href="https://iphonedevlog.wordpress.com/2014/06/10/notes-about-using-phonegap-build/" target="_blank">https://iphonedevlog.wordpress.com/2014/06/10/notes-about-using-phonegap-build/</a>.) <strong>In the Mac</strong> Terminal, type the following and hit Enter:</p>
<pre>sudo npm install -g cordova</pre>
<p>or</p>
<pre>sudo npm install -g phonegap</pre>
<p>(<strong>sudo</strong> info: <a title="http://www.courtesan.com/sudo/intro.html" href="http://www.courtesan.com/sudo/intro.html" target="_blank">http://www.courtesan.com/sudo/intro.html</a>. -g = global, which means you&#8217;ll be able to use the command no matter which folder the command started from.)</p>
<p>Test the install. Type <strong>cordova -v</strong>. I got:</p>
<pre>4.0.0</pre>
<p><strong>In Windows,</strong> open the Command Prompt window (Start button &gt; All Programs &gt; Accessories)  and type the following, and hit Enter:</p>
<pre>npm install -g cordova</pre>
<p>Test the install: type <strong>cordova -v</strong>. I got:</p>
<pre>5.1.1</pre>
<p>(These Windows instructions were added at a much later date, so I show a later version.)</p>
<h2>Download a Cordova/PhoneGap debugging system (optional)</h2>
<p>You&#8217;ll need to test your app during formation. Choose from one of these debugging tools:</p>
<p><strong>A. PhoneGap Developer App</strong></p>
<p>Cordova released the Developer App, in which you download their app onto your device, run a cordova server in the terminal, and view your app on the device without having to download and install it to the device. You can make changes to your app and instantly see them in the device. For more information on this, see my steps (although this is for an early version &#8211; it is being aggressively updated): <a title="https://iphonedevlog.wordpress.com/2014/05/02/app-testing-with-the-phonegap-app-see-your-changes-instantly-without-re-building/" href="https://iphonedevlog.wordpress.com/2014/05/02/app-testing-with-the-phonegap-app-see-your-changes-instantly-without-re-building/" target="_blank">https://iphonedevlog.wordpress.com/2014/05/02/app-testing-with-the-phonegap-app-see-your-changes-instantly-without-re-building/</a></p>
<p><strong>B. Genuitec&#8217;s GapDebug</strong></p>
<p>You can debug your device with GapDebug if it has Android 4.4 or later.</p>
<p>In your device, check Settings &gt; About to see if you have 4.4 or later. (My device had 4.3, so I could not complete these steps.) If so, do the following.</p>
<p>1. Download GapDebug from <a title="https://www.genuitec.com/products/gapdebug/" href="https://www.genuitec.com/products/gapdebug/" target="_blank">https://www.genuitec.com/products/gapdebug/</a> to debug your app. It downloads a .dmg file. (dmg = disc image.)  I clicked on the button in the browser after it downloaded and a window opened with the installer app icon showing. Double-clicked on that to install.<br />
2. In your /myApp/platforms/android/AndroidManifest.xml file, include:</p>
<pre>&lt;application android:debuggable="true"</pre>
<p>3. In your device, open Settings &gt; Developer Options and enable USB Debugging. (If Developer Options is not listed, open the About details, tap the Build Number field 7 times, and then select Back to view Developer Options.)</p>
<p>Check the Learning Center for all the steps: <a title="https://www.genuitec.com/products/gapdebug/learning-center/" href="https://www.genuitec.com/products/gapdebug/learning-center/" target="_blank">https://www.genuitec.com/products/gapdebug/learning-center/</a></p>
<p><strong>C. Apache Ripple</strong></p>
<p>Ripple displays its business in the Chrome browser, so you need Chrome downloaded to use it.</p>
<p>Install Ripple with npm installed via the Terminal with:</p>
<pre>npm install -g ripple-emulator</pre>
<p>Then run the following from the root folder of your app:<br />
ripple emulate</p>
<p>For more: <a title="http://www.raymondcamden.com/2013/11/5/Ripple-is-Reborn" href="http://www.raymondcamden.com/2013/11/5/Ripple-is-Reborn" target="_blank">http://www.raymondcamden.com/2013/11/5/Ripple-is-Reborn</a></p>
<p><strong>D. Weinre</strong></p>
<p>Instructions on use this debugger is here: <a href="https://iphonedevlog.wordpress.com/2012/07/24/installing-weinre-remote-debugger-on-the-mac-osx-lion/" target="_blank">https://iphonedevlog.wordpress.com/2012/07/24/installing-weinre-remote-debugger-on-the-mac-osx-lion/</a></p>
<h2>Setup Complete</h2>
<p>At long last your system is now set up to start building your first basic Apache Cordova or Adobe PhoneGap project! Some projects are more involved and will require more software dependencies to run. Check your software requirements carefully &#8212; it&#8217;s your responsibility to read the docs on the <a href="http://phonegap.com/developer/" target="_blank">phonegap.com site.</a></p>
<p>Go to <a href="https://iphonedevlog.wordpress.com/workflow/" target="_blank">https://iphonedevlog.wordpress.com/workflow/</a> and check out New App to start creating a Cordova app. It assumes you already have your basic HTML/CSS/JS code ready to go. If you don&#8217;t know about this, then you need to learn more, so read: <a href="https://iphonedevlog.wordpress.com/explanation-of-phonegapcordova-for-the-layman/" target="_blank">https://iphonedevlog.wordpress.com/explanation-of-phonegapcordova-for-the-layman/</a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/adt/'>ADT</a>, <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/android-debugging/'>Android debugging</a>, <a href='https://iphonedevlog.wordpress.com/tag/android-sdk/'>Android SDK</a>, <a href='https://iphonedevlog.wordpress.com/tag/android-sdk-manager/'>Android SDK Manager</a>, <a href='https://iphonedevlog.wordpress.com/tag/ant/'>ant</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/jre/'>jre</a>, <a href='https://iphonedevlog.wordpress.com/tag/node/'>node</a>, <a href='https://iphonedevlog.wordpress.com/tag/npm/'>npm</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1528/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1528/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1528/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1528/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1528/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1528/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1528/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1528/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1528/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1528/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1528/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1528/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1528&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Signing an Android Apk Without Eclipse</title>
		<link>https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/#comments</comments>
		<pubDate>Wed, 29 Oct 2014 22:40:25 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[jarsigner]]></category>
		<category><![CDATA[keystore]]></category>
		<category><![CDATA[keytool]]></category>
		<category><![CDATA[zipalign]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1513</guid>
		<description><![CDATA[From time to time I get frustrated with Eclipse. For those who have buggy software or other problems that hinder you from creating an apk file, you can follow these steps apart from opening Eclipse. The information is divided into two sections. The first section is for new, version 1 apps in which a private [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1513&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>From time to time I get frustrated with Eclipse. For those who have buggy software or other problems that hinder you from creating an apk file, you can follow these steps apart from opening Eclipse.</p>
<p>The information is divided into two sections. The first section is for new, version 1 apps in which a private key and keystore need to be generated. The second section is for version 2+ apps, in which the keystore is already present and needs to be applied to the apk to sign it. Just follow all these steps in the Terminal app &#8211; you need open no other software. <span id="more-1513"></span></p>
<p>If you have Eclipse installed, you already have the tools you need, such as the following.</p>
<p>The Java Development Kit (JDK) uses jarsigner, and should already be installed.</p>
<p>Apache ant is needed. Download it from <a title="http://ant.apache.org/bindownload.cgi" href="http://ant.apache.org/bindownload.cgi" target="_blank">http://ant.apache.org/bindownload.cgi</a> if you don&#8217;t have it. I downloaded the zip version, right-clicked and selected Uncompress. I dragged the /apache-ant-1.9.3 folder to the /Developer folder.</p>
<p>The zipalign tool is found in the Android SDK, so you already have it. If not, download at <a title="http://developer.android.com/sdk/index.html" href="http://developer.android.com/sdk/index.html" target="_blank">http://developer.android.com/sdk/index.html</a>. I dragged the uncompressed /android-sdk-mac_x86 folder to the /Developer folder.</p>
<p>Your .bash_profile hidden file at /Users/&lt;name&gt;/.bash_profile should have the path to the zipalign file like this (though you would change it to match your own zipalign path):</p>
<pre>export PATH=${PATH}:~/Developer/android-sdk-mac_x86/build-tools/21.0.2</pre>
<p><strong>My environment:</strong><br />
Mac OS X 10.9.5 Mavericks on 2010 Mac Mini<br />
cordova -v = 4.0.0 (using cordova, not phonegap)<br />
Installed: cordova, node, npm<br />
Installed: ADT, Eclipse Juno</p>
<p><strong>Resources: </strong><br />
<a title="http://developer.android.com/tools/publishing/app-signing.html" href="http://developer.android.com/tools/publishing/app-signing.html" target="_blank">http://developer.android.com/tools/publishing/app-signing.html</a><br />
<a title="http://developer.android.com/tools/help/zipalign.html" href="http://developer.android.com/tools/help/zipalign.html" target="_blank">http://developer.android.com/tools/help/zipalign.html</a></p>
<h2>Signing a First Version Apk Apart from Eclipse</h2>
<p>1. Update the AndroidManifest. Open /myApp/platforms/android/AndroidManifest.xml and update. VersionCode is what will display in the store; versionName is for your internal use and won’t be shown: android:versionCode=&#8221;10000&#8243; android:versionName=&#8221;1.0.0&#8243; (Note on format: &#8220;10000&#8221; = 1.00.00.)</p>
<p>Make sure the following is accurate (change com.developerName.myApp to your own information here and throughout this page):</p>
<pre>package="com.developerName.myApp"</pre>
<p>Make sure the following is 11 or higher (I choose 19.):</p>
<pre>android:minSdkVersion="11"</pre>
<p>Open /myApp/config.xml and make sure the widget id and version are the same as in AndroidManifest.xml.</p>
<p>2. The following steps create your private key and the keystore file in which to store it. In Terminal, make sure your starting position is within your app’s root folder of /myApp and run the following. (To start commands from your app root folder in Terminal, open the Terminal app, type cd and a space, drag the /myApp folder to Terminal, tap in Terminal to activate its window, then hit Enter.)</p>
<pre>keytool -genkey -v -keystore myapp.keystore -alias myapp -keyalg RSA -keysize 2048 -validity 10000</pre>
<p>You&#8217;ll be prompted to answer several questions. Use only legal characters like letters and numbers, not punctuation. For 2-letter country code, look up this list: <a title="http://www.worldatlas.com/aatlas/ctycodes.htm" href="http://www.worldatlas.com/aatlas/ctycodes.htm" target="_blank">http://www.worldatlas.com/aatlas/ctycodes.htm</a></p>
<p>3. You will then review the data presented. At that point, if any of the information is wrong, type the two letters to re-enter that information. For instance, type cn to change your first and last name. Otherwise, confirm the information by typing &#8220;yes.&#8221; Then just hit Enter if the password for the following Terminal information will be the same as the previous.</p>
<p>Your keystore file will be located at /myApp/myapp.keystore. <strong>This needs to be copied to a safe place ASAP. Your customers will not be able to update to the next version without this file. </strong></p>
<p>4. Copy myapp.keystore to /platforms/android.</p>
<p>Now it&#8217;s time to sign the app with the key and create the release version.</p>
<p>5. Open /platforms/android/local.properties (or project.properties) in a text editor.</p>
<p>6. Add these two lines at the end and save, even though it says, &#8220;Do not modify this file &#8212; YOUR CHANGES WILL BE ERASED!&#8221;</p>
<pre>key.store=myapp.keystore 
key.alias=myapp</pre>
<p>7. Still in your /myApp folder in Terminal, run:</p>
<pre>cordova build android --release</pre>
<p>You&#8217;ll be asked for your password twice and it won&#8217;t be obfuscated.</p>
<p>8. Your myApp.apk file is put in /myApp/platforms/android/ant-build/CordovaApp-release.apk. (If not there, it may be in /myApp/platforms/android/build/outputs/apk.) This is the file you rename and upload to Google Play.</p>
<h2>Signing an Update Version Apk Without Eclipse</h2>
<p>This section assumes you&#8217;ve already created your keytool and keystore file from your first version, and have the keystore file in a safe place. You won&#8217;t follow those steps again.</p>
<p>1.Open /myApp/config.xml and update. Increment the version number.</p>
<p>2. In Terminal, make sure your starting position is within your app’s root folder of /myApp and run the following. (To start commands from your app root folder in Terminal, open the Terminal app, type cd and a space, drag the /myApp folder to Terminal, tap in Terminal to activate its window, then hit Enter.)</p>
<p>3. From your app&#8217;s root folder in Terminal:</p>
<pre>cordova build android --release</pre>
<blockquote>
<ul>
<li>I once got the error:</li>
</ul>
<pre>Error: ENOENT, no such file or directory
'/Users/&lt;name&gt;/Documents/AndroidApps/myApp/platforms/android/src/com/developername/myapp'</pre>
<ul>
<li>I once got the error:</li>
</ul>
<pre>Error code 1 for command: ant with args: ... command failed with exit code 8</pre>
<p>Solution: remove the android platform and add it back in. Copy your platforms/android/res/drawable folders to a safe location if the icons and splash screens are not already backed up, for the following command will erase that folder.</p>
<pre>cordova platform remove android 
cordova platform add android</pre>
<p>Now copy back the /res/drawable folder contents and remove the /drawable folders that don&#8217;t apply to your app. Go ahead and follow step 3 again.</p>
<p>Another solution I found was to correct my /platforms/android/AndroidManifest.xml file. I had &#8220;23&#8221; instead of &#8220;22&#8221; in this line: android:targetSdkVersion=&#8221;22.&#8221; It was wrong because I did not have he v23SDK installed, but did have the v22 SDK. That resolved the error.</p>
<ul>
<li>I once got the error:</li>
</ul>
<pre>BUILD FAILED
/Users/&lt;name&gt;/Documents/iPhone_Apps/from_Steve/Hymnal/&lt;app-name&gt;/platforms/android/build.xml:90: Cannot find /Users/&lt;name&gt;/android-sdks/tools/ant/build.xml imported from /Users/&lt;name&gt;/Documents/iPhone_Apps/from_Steve/Hymnal/&lt;app-name&gt;/platforms/android/build.xml</pre>
<p>Solution: In console, run <strong>cordova platform rm android</strong> then <strong>cordova platform add android</strong> and run the command again.</p></blockquote>
<p>4. Change your /platforms/android/ant-build/CordovaApp-release-unsigned.apk to the final app name by clicking on its name and overwriting it when it gets highlighted. (If not there, it may be in /myApp/platforms/android/build/outputs/apk.)</p>
<p>If that path does not exist, try /platforms/android/build/outputs/apk/android-release-unsigned.apk and change that filename.</p>
<p>5. <span style="text-decoration:underline;">Move</span> the myApp.apk file and <span style="text-decoration:underline;">copy</span> the myapp.keystore file to project&#8217;s root folder.</p>
<p>6. Change the Terminal prompt to start at your app&#8217;s root directory.</p>
<p>7. Run the following in Terminal and follow the prompts to enter your passphrase (the password you used to sign the first apk). myapp.keystore is your keystore name, myApp.apk is the name you put in step 4, and myapp is the alias of your app (see step 6 of the previous section).</p>
<pre>jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore myapp.keystore myApp.apk myapp</pre>
<p>You&#8217;ll be asked for your passphrase.</p>
<blockquote>
<ul>
<li>I once got the error:</li>
</ul>
<pre>jarsigner: unable to open jar file: myApp.apk</pre>
<p>Solution: move the myApp.apk file to same location as myapp.keystore.</p>
<ul>
<li>I once got the error:</li>
</ul>
<pre>Error: /Users/&lt;name&gt;/Documents/AndroidApps/myApp/platforms/android/cordova/build: Command failed with exit code 8</pre>
<p>Solution: copy your myapp.keystore file to your project&#8217;s root directory.</p>
<ul>
<li>I once got the error:</li>
</ul>
<pre>jarsigner: Certificate chain not found for: myapp-12.0.0.  myapp-12.0.0 must reference a valid KeyStore key entry containing a private key and corresponding public key certificate chain.</pre>
<p>Solution: I did not have the alias correct (that last “myapp” in the command). I removed the extraneous text from the alias and tried again and it worked.</p></blockquote>
<p>8. If there were no error messages, verify that it has been signed:</p>
<pre>jarsigner -verify -verbose -certs myApp.apk</pre>
<p>Output should end with &#8220;jar verified.&#8221;</p>
<blockquote>
<ul>
<li>I once uploaded an apk to the Google Play Developer Console and was warned: &#8220;Upload failed. You uploaded an APK that is signed with a different certificate to your previous APKs.&#8221; Then it showed the SHA1 number series it should have. I had several versions of the keystore file &#8211; so which one was the correct one to use?</li>
</ul>
<p>Solution: I applied the following script to each one to reveal the SHA1 numbers so I could compare them against the ones in the Console window which I had left open. Just run this command from your keystore file&#8217;s folder and change the keystore name here to the real keystore file name:</p>
<pre class="p1"><span class="s1">keytool -keystore myApp.keystore -list -v
</span></pre>
<ul>
<li class="p1">I received the error:</li>
</ul>
<pre>jarsigner: Certificate chain not found for: &lt;app name&gt;.  &lt;app name&gt; must reference a valid KeyStore key entry containing a private key and corresponding public key certificate chain.</pre>
<p>Solution: I looked carefully and found that my alias did not match the alias revealed in the script above. Once I changed it, it worked fine.</p></blockquote>
<p>9. Complete your final apk by running zipalign. This script will take your myApp.apk and output the final version, renamed myApp-final.apk:</p>
<pre>zipalign -v 4 myApp.apk myApp-final.apk</pre>
<p>It should end with &#8220;Verification succesful.&#8221; [sic] near the end.</p>
<blockquote><p>I once got the error:</p>
<pre>-bash: zipalign: command not found</pre>
<p>Solution  is to download the “19.1.0” SDK, and copy the &#8220;zipalign&#8221; file to /Developer/adt-bundle-mac-x86_64/sdk/tools. In Eclipse: Windows &gt; Android SDK Manager. Select “Android SDK Build-tools” for “19.1.0” and continue the install process. Shut down Eclipse. The file should be written to /Developer/adt-bundle-mac-x86_64/sdk/build-tools/19.1.0. Copy and paste that file to/Developer/adt-bundle-mac-x86_64/sdk/tools, then run the above zipalign command again.</p></blockquote>
<p>Your app, myApp-final.apk, is ready to upload. <strong>Remember to remove the keystore file from the root directory.  </strong></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/jarsigner/'>jarsigner</a>, <a href='https://iphonedevlog.wordpress.com/tag/keystore/'>keystore</a>, <a href='https://iphonedevlog.wordpress.com/tag/keytool/'>keytool</a>, <a href='https://iphonedevlog.wordpress.com/tag/zipalign/'>zipalign</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1513/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1513/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1513/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1513/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1513/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1513/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1513/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1513/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1513/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1513/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1513/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1513/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1513&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using Android Studio Beta with Cordova PhoneGap</title>
		<link>https://iphonedevlog.wordpress.com/2014/10/10/using-android-studio-beta-with-cordova-phonegap/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/10/10/using-android-studio-beta-with-cordova-phonegap/#comments</comments>
		<pubDate>Fri, 10 Oct 2014 21:08:42 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Android Studio Beta]]></category>
		<category><![CDATA[Cordova]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1441</guid>
		<description><![CDATA[I installed Android Studio Beta to see how it currently stacks up against Eclipse. It&#8217;s apparent that Android Development Tools for Eclipse is going the way of the dodo and will no longer be updated as vigorously. It&#8217;s my impression that Android Studio Beta (AS) is Google&#8217;s new SDK to replace Eclipse. We&#8217;ll need to [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1441&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I installed Android Studio Beta to see how it currently stacks up against Eclipse. It&#8217;s apparent that Android Development Tools for Eclipse is going the way of the dodo and will no longer be updated as vigorously. It&#8217;s my impression that Android Studio Beta (AS) is Google&#8217;s new SDK to replace Eclipse. We&#8217;ll need to learn it sooner or later, so why not now? Here are my notes as I set up the environment and discover the path to creating an apk. These steps track the install and setup of Android Studio down to outputting a signed apk for Google Play upload. <span id="more-1441"></span></p>
<p><em>THIS IS BETA SOFTWARE. Steps you see in this article may not be relevant in later versions.<br />
</em></p>
<p>This article assumes that you will use the default Cordova Android HelloCordova project for the Android platform. It assumes you are already familiar with uploading apps to Google Play (if not, read here for a fuller account of app creation, and add the extra steps as necessary, such as debugging, icons and splash screens: <a title="https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/" href="https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/" target="_blank">https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/</a>).</p>
<p>AS has instructions for migrating an Eclipse project to AS here: <a title="https://developer.android.com/sdk/installing/migrate.html" href="https://developer.android.com/sdk/installing/migrate.html" target="_blank">https://developer.android.com/sdk/installing/migrate.html</a>  This article does not follow these steps. These instructions are for a new project that hasn&#8217;t been opened in Eclipse.</p>
<pre>npm update -g cordova
cordova -v [I got 3.6.3]
cordova create helloCordova
cd helloCordova
cordova platform add android</pre>
<blockquote><p>(When I followed the above steps in the Mac, an error was thrown in the last step above, telling me I need &#8220;android-17.&#8221; I had to run &#8220;android&#8221; to open the Eclipse SDK and download those packages. So although we are using Android Studio Beta, Cordova is still wedded to Eclipse for some tasks.)</p></blockquote>
<p>The steps below chronicles the setup of the above stock Cordova build on Windows and Mac machines. Differences between the two OSs are prefaced in boldface with <strong>Windows:</strong> and <strong>Mac:</strong>.</p>
<p><strong>Environments:</strong><br />
Windows 7 Pro, Mac OS 10.9.5<br />
Cordova v3.6.3<br />
Android platform</p>
<h2>I. Install Android Studio Beta</h2>
<p>1. Download the Android Software Development Kit here: <a title="http://developer.android.com/sdk/installing/studio.html" href="http://developer.android.com/sdk/installing/studio.html" target="_blank">http://developer.android.com/sdk/installing/studio.html</a> The page will detect whether you are using the Windows or Mac OS and present the correct download button.<br />
My initial Windows version included Beta v0.8.6. It was later updated to 0.8.9.</p>
<blockquote><p>From Android page for Windows users:<br />
&#8220;On some Windows systems, the launcher script does not find where Java is installed. If you encounter this problem, you need to set an environment variable indicating the correct location. Select Start menu &gt; Computer &gt; System Properties &gt; Advanced System Properties. Then open Advanced tab &gt; Environment Variables and add a new system variable JAVA_HOME that points to your JDK folder, for example C:\Program Files\Java\jdk1.7.0_21. The individual tools and other SDK packages are saved within the Android Studio application directory. If you need to access the tools directly, use a terminal to navigate into the application and locate the sdk/ directory. For example: \Users\&lt;user&gt;\AppData\Local\Android\android-studio\sdk\&#8221;</p></blockquote>
<p>2. <strong>Windows:</strong> program files are set up in C:/Users/&lt;name&gt;/.AndroidStudioBeta and C:/Users/&lt;name&gt;/.android  Space required: 686.2MB for the .exe download.<br />
<strong>Mac:</strong> after you click on the download file in your browser to open the dmg containing folder, you drag Android Studio.app into /Applications (646.3MB).</p>
<p>3. AS asks if you want to import settings from a previous version. I chose the second option, to not import, as this was a new install.</p>
<h2>II. Android Studio Beta startup</h2>
<p>1. On startup, AS shows a Welcome screen with several choices. Click on <strong>Open Project,</strong> select the root folder of your Cordova PhoneGap project, then OK.</p>
<blockquote><p>What happens if you choose Import Project or New Project instead of Open Project? You won&#8217;t get the menu items that let you build a final apk or choose an AVD or SDK; specifically, Generate Signed APK and Build &gt; Android. My notes below:</p>
<p>Choosing Opening Screen&#8217;s <strong>Import Project&#8230;</strong> (same as File &gt; Import Project&#8230;) for a Cordova project which has never been opened in AS before does not display these menu items. It preserves the Cordova folder structure.</p>
<p>Choosing Opening Screen&#8217;s <strong>New Project&#8230;</strong> (same as File &gt; New Project&#8230;) DOES display these menu items. (It creates a Gradle folder structure &#8211; not useful for cross-platform use.)</p>
<p>Choosing Opening Screen&#8217;s <strong>Open Project&#8230;</strong> (same as File &gt; Open) for a Cordova project which has never been opened in AS before DOES display these menu items. It preserves the Cordova folder structure. A message says that a framework was detected. Click on Configure then OK in the Setup Framework popup. Then the missing menu items display.</p></blockquote>
<p>2. A message says that a framework was detected. Click on Configure then OK in the Setup Framework popup. <em>If you do not click on Configure then OK, you won&#8217;t be able to generate a signed apk from with AS. Important menu items will not be made available.</em> If this message disappears before you can click on it, go to View &gt; Tool Windows &gt; Event Log to select it.</p>
<p>3. AS shows a blank gray screen with text tips in the middle, then opens the left Project panel where our imported project is listed. We are also greeted with a Tip of the Day. (The text tips don&#8217;t all work. For instance, tap on Shift twice, and an input box appears. Type &#8220;avd&#8221; and AVD Manager appears as a result. But nothing happens when you click on it.)</p>
<p>In some cases, with a fully developed project imported, AS presents an import-summary.txt showing what was NOT imported, asking whether they need to be imported manually. That listing was composed of various txt, jar, and bat files.</p>
<p>4. <strong>Windows:</strong> through a popup at the lower left AS screen, we are told to hover our mouse over the icon; doing so brings up a menu. You can find this same listing under View &gt; Tool Windows. To return to the Projects listing, click on Projects in that menu or press the Alt + 1 keys together.</p>
<p>Our Windows project files are set up in C:/Users/&lt;name&gt;/AndroidstudioProjects</p>
<p><strong>Mac:</strong> Hover over the extreme lower left icon and click on each of the menu items in the list that pops up. End on the Projects link. You can find this same listing under View &gt; Tool Windows.</p>
<p>Our Mac project files are probably set up in the helloCordova project folder in the hidden folder, .idea. You can see the folder in AS&#8217;s Projects window.</p>
<h2>III. Update and install packages: SDK Manager</h2>
<p>1. In the lower band of the screen was a notice that a new version of AS is available. Let&#8217;s take care of that before going further.<br />
<strong>Windows:</strong> go to Help &gt; Check for Update&#8230; in the menubar above. Click on Update and Restart.<br />
<strong>Mac:</strong> go to Android Studio &gt; Check for Updates&#8230; in the menubar above. Click on Update and Restart.</p>
<p>2. We need to download and install several packages to make the download complete.<br />
<strong>Windows:</strong> in AS, click on Tools &gt; Android &gt; SDK Manager in the menubar. (In my later version, the Android menu item went missing.)<br />
<strong>Mac:</strong> in AS, click on the upper left red Exit button. The Welcome screen shows. Click on Configure &gt; SDK Manager.</p>
<p>3. Keep the default selections checked. Make sure the following are checked in Tools: Android SDK Tools, Android SDK Platform-Tools, Android SDK Build-tool (highest version).</p>
<p>Make sure the following are checked in Android x.x (latest version): SDK Platform, ARM EABI v7a System Image.</p>
<p>In the Extras directory, check: Android Support Library. The Repository might already be installed; if not, check it.</p>
<p>To develop with Google APIs, Google Repository and Google Play service should be checked under Extras.</p>
<p>Check this line in your /platforms/android/AndroidManifest.xml: &lt;uses-sdk android:minSdkVersion=&#8221;19&#8243; android:targetSdkVersion=&#8221;22&#8243; /&gt; and download the &#8220;target&#8221; packages as well, in this case 19 (Android 4.4.2) and 22 in the SDK. Choose whatever packages you will be testing with.</p>
<p>Click on the Install X packages&#8230; button. Click on each main folder and accept the licenses to continue.</p>
<p>Go ahead and get a refill. Installing those packages will probably produce another list of packages to install just when you thought you were finished!</p>
<p>You may receive a message in the upper right asking if you want Google to gather usage stats and how often. You can go to File &gt; Settings&#8230; &gt; Usage Statistics to update this.</p>
<p>3. If you want to change the default SDK, you now can. <span style="color:#000000;"><em> </em></span></p>
<p><strong>Windows:</strong> Go to File &gt; Project Structure&#8230;, SDKs. Click on the Build Target, navigate to C:/Users/&lt;name&gt;AppData/Local/Android/android-studio/sdk/platforms, and choose the SDK you want to be the default. Change the name to update it. Then click Apply and OK.</p>
<p><strong>Mac:</strong> Go to File &gt; Project Structure&#8230;, SDKs. Click on the Build Target, navigate to Macintosh HD/Applications/Android Studio.app/sdk.build-tools, and choose the SDK you want to be the default. Change the name to update it. Then click Apply and OK.</p>
<h2>IV. Explore the Program</h2>
<p>1. To do a code lint on your project, select the project name and Analyze &gt; Inspect Code. Select Whole Project and click OK. Results will appear below neatly categorized. Clicking on exclamation point symbols will show more information and links about it. Drill down to Spelling &gt; www and see if any spelling errors are critical in your own files.</p>
<p>2. Want to change to a darker color scheme? Click on View &gt; Quick Switch Scheme&#8230; &gt; Switch Look and Feel&#8230; &gt; Darkula.</p>
<p>3. To update the files in AS after you made changes to the original files, right-click on the project name, then on  Synchronize &#8216;&lt;helloCordova&gt;&#8217;. However, you shouldn&#8217;t have to do this, as AS syncs on the fly. You can check this by opening the /www/index.html in AS to view it, then open the original file and delete all the comments at top. Save, then review the updated file in AS.</p>
<p>4. You can change the styling of your HTML in AS.<br />
<strong>Windows:</strong> File &gt; Settings &gt; Code Style &gt; HTML. See also Preferences &gt; Editor.<br />
<strong>Mac:</strong> Android Studio &gt; Preferences &gt; Code Style &gt; HTML. See also Preferences &gt; Editor.</p>
<p>5. You can decide what aspects of your files AS should or should check with Inspections.<br />
<strong>Windows:</strong> File &gt; Settings &gt; Inpsections, Android, Android Lint.<br />
<strong>Mac:</strong> Android Studio &gt; Preferences &gt; Inpsections, Android, Android Lint.</p>
<p>6. Register your version control system.<br />
<strong>Windows:</strong> File &gt; Settings &gt; Version Control<br />
<strong>Mac:</strong> Android Studio &gt; Preferences &gt; Version Control</p>
<p>7. Set up your external image editor.<br />
<strong>Windows:</strong> File &gt; Settings &gt; Images.<br />
<strong>Mac:</strong> Android Studio &gt; Preferences &gt; Images.</p>
<p>If you double-click on an image in your project (such as /www/img/logo.png) it will open in the Editor pane. Right-click on the image and select Jump to External Editor to open it in the editor you specified.</p>
<p>8. Improve startup speed by disabling plugins you won&#8217;t use or need. Restart AS to enable changes.<br />
File &gt; Other Settings&#8230; &gt; Configure Plugins&#8230;</p>
<p>9. Show line numbers in Editor.<br />
<strong>Windows:</strong> File &gt; Settings &gt; Editor &gt; Appearance, Show line numbers.<br />
<strong>Mac:</strong> Android Studio &gt; Preferences &gt; Editor &gt; Appearance, Show line numbers.</p>
<p>10. If you navigate to /www/index.html and double-click on the file, it&#8217;ll open in AS&#8217;s Editor pane. Move your cursor over the page and icons of installed browsers will appear in the upper right of the pane. Clicking on one will open the page in that browser. View &gt; Open in Browser&#8230; will do the same thing.</p>
<p>11.  Create a 9-Patch file from within AS. Navigate to your .png image (already saved to your project) in the Project window, right-click and choose Create 9-patch file&#8230;, and rename extension as .9.png. Double-click on a 9.png file in the Project window to open it in the 9-Patch editor within AS and add your marks around the edge. Saving is automatic. (<a title="https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/" href="https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/" target="_blank">https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/</a>)</p>
<p>If you open a finished project and your 9-patch file is faulty, Code &gt; Analyze will point this out as one of your errors/warnings. Double-clicking on the image, you&#8217;ll be able to fix it right in AS.</p>
<p>12. You can use the terminal from within AS. View &gt; Tool Windows &gt; Terminal. You can perform Cordova and Phonegap commands on your project there.</p>
<p>13. Google wants your feedback on bugs found in the program: Help &gt; Submit Feedback. This takes you to a web site. On that site, it&#8217;s wise to do a search of keywords related to the problem first.</p>
<p>14. Occasionally you&#8217;ll get a popup asking if you want to convert the project to Gradle. (Gradle is a build and automation system. Automates the building, testing, publishing, deployment, etc., of software packages or other types of projects.) A benefit of using Gradle is making multiple build versions in a project. You create several versions, but build each one separately.</p>
<p>15. Create your own keyboard shortcuts.<br />
<strong>Windows:</strong> File &gt; Settings &gt; Editor &gt; Keymap.<br />
<strong>Mac:</strong> Android Studio &gt; Preferences &gt; Editor &gt; Keymap. For Mac OS X keymap: Help &gt; Default Keymap Reference (displays a PDF in the browser).</p>
<p>16. Quickly create a new file. In AS Project view, click on the /www directory, then <strong>Windows</strong> Alt + Insert or <strong>Mac</strong> Command + N to choose the file type and type the filename.</p>
<h2>V. Create an Unsigned Apk</h2>
<p>To build a debug apk (the file we use to test with) or a signed apk (what is uploaded to Google Play), we need Ant installed and in the PATH statement. If you already have that, then in Android Studio do the following steps.</p>
<p>1. Make sure the code is correct before making an apk file:</p>
<p>Analyze &gt; Inspect Code&#8230;</p>
<p>(When running this command on a previously created app for an update to an app, this step resulted in 5 errors I&#8217;ve never encountered before.)</p>
<p>2. To create the unsigned apk in AS: View &gt; Tool Windows &gt; Terminal.</p>
<p>3. Make sure your starting position is within your project&#8217;s root folder of /helloCordova and run:</p>
<pre>cordova build android</pre>
<p>This creates the familiar debug apk files in /helloCordova/platforms/android/ant-build (check your Projects view window). I successfully installed helloCordova-debug.apk on my device and it displayed PhoneGap&#8217;s icon and Device Is Ready message.</p>
<h2>VI.a Create a Signed Apk (Android Studio)</h2>
<p>1. To create the signed apk for upload to Google Play:</p>
<p>Build &gt; Generate Signed APK&#8230; . The module should be Android. Next.</p>
<p>2. Choose Create New&#8230; and fill out the Generate Signed APK Wizard form. Do not use illegal characters in the code, such as a comma, semi-colon, colon, quote marks, plus, or slash.</p>
<p><strong>Key store path:</strong> click on the dropdown button and choose a location for the keystore file, then type in the filename for the keystore file. (The keystore file needs to be backed up and kept safe &#8211; it&#8217;s required to have on hand to make new versions of the same app.) I usually make the filename the same name of my app, without spaces. For some reason, this file ends in .jks and not the familiar .keystore.</p>
<p><strong>Alias:</strong> use the name of the app, without spaces, if you wish.</p>
<p><strong>Password, Confirm:</strong> create a password and note it carefully so you&#8217;ll use it and the jks keystore file together at a later date.</p>
<p><strong>Validity (years):</strong> overwrite the 25 with 50.</p>
<p>Fill out the rest of the fields. For 2-letter <strong>country code,</strong> look up this list: <a title="http://www.worldatlas.com/aatlas/ctycodes.htm" href="http://www.worldatlas.com/aatlas/ctycodes.htm" target="_blank">http://www.worldatlas.com/aatlas/ctycodes.htm</a></p>
<p>3. Choose Next in the  next dialog.</p>
<p>4. In the next dialog, choose where you want your signed apk file to be saved. Default is /HelloCordova/platforms/android/android.apk. It will be saved with the filename android.apk; to change the name and location, click the dropdown button and choose the location at top and name at bottom. Clicking OK will bring you to the previous dialog with the updated information.</p>
<p>5. Check the Run ProGuard checkbox, then Finish. Your signed apk file should be in the location you specified.</p>
<h2>VI.b Create a Signed Apk (CLI)</h2>
<p>Follow these steps if the above VI.a does not work for you. I had problems with the Build &gt; Generate Signed APK&#8230;  menu item being grayed out or not appearing in my earlier efforts. These steps will remain for the record.</p>
<p>Resource: <a title="http://www.intown.biz/2014/07/15/signing-your-cordova-android-app/" href="http://www.intown.biz/2014/07/15/signing-your-cordova-android-app/" target="_blank">http://www.intown.biz/2014/07/15/signing-your-cordova-android-app/</a></p>
<p>1. To create the signed apk in AS via CLI: View &gt; Tool Windows &gt; Terminal.</p>
<p>2. Make sure your starting position is within your project’s root folder of /helloCordova and run:</p>
<pre>keytool -genkey -v -keystore hellocordova.keystore -alias hellocordova -keyalg RSA -keysize 2048 -validity 10000</pre>
<p>Answer the questions at each prompt. For 2-letter country code, look up this list: <a title="http://www.worldatlas.com/aatlas/ctycodes.htm" href="http://www.worldatlas.com/aatlas/ctycodes.htm" target="_blank">http://www.worldatlas.com/aatlas/ctycodes.htm</a></p>
<p>3. If any of the information is wrong, type the two letters to re-enter that information. For instance, cn to change your first and last name. Confirm the information by typing &#8220;yes&#8221;.</p>
<p>4. Return if the password for the following information will be the same as the previous info (hit enter).</p>
<p>Your keystore file is saved at /helloCordova/hellocordova.keystore. Get the full path for use later: /Users/path/helloCordova/hellocordova.keystore (I grabbed my path by dragging the hellocordova.keystore file from the Finder window into the Terminal app.)</p>
<p>5. In Android Studio, Project view, double-click on hellocordova.properties.</p>
<p>6. Add two lines at the end (the file will be saved automatically):</p>
<pre>key.store=hellocordova.keystore
key.alias=hellocordova</pre>
<p>7. In AS, Project view, double-click on helloCordova/platforms/local.properties.</p>
<p>8. Add two lines to this file, even though it says, &#8220;This file is automatically generated. Do not modify this file &#8211; YOUR CHANGES WILL BE ERASED!&#8221;</p>
<pre>key.store=&lt;path to keystore file&gt;/hellocordova.keystore
key.alias=hellocordova</pre>
<p>The script will pause and you&#8217;ll be prompted for the password twice and it will not be obfuscated.</p>
<p>9. In AS, View &gt; Tool Windows &gt; Terminal, run:</p>
<pre>cordova build android --release</pre>
<p>10. Your hellocordova-release.apk file, signed and zip-aligned, is put in /helloCordova/platforms/android/ant-build (check your Projects view window). This is the file you upload to Google Play.</p>
<blockquote><p>Observations on opening an app previously released to Google Play and updating it in AS:</p>
<p>When I opened an app in AS to update it to a new version, then Analyze &gt; Inspect Code generated several errors. I was not able to resolve all of them. (For instance, it complained in the AndroidManifest.xml that it could not find the resource for @drawable/icon. I tried several permutations of the path to no effect.) When I have resolved this to my satisfaction, I&#8217;ll include a workflow in this spot for updating a current app. That would make the article more complete. I&#8217;m surprised at the number of things I had to change to make it work this far. Stay tuned. (Long-time readers know that I update my articles rather than post mini-blogs about updates. I don&#8217;t want to hunt all over the blog to find out how to do something and neither do you. Unfortunately, I don&#8217;t think you&#8217;ll get email updates for these little additions.)</p></blockquote>
<h2>VII. Configure an emulator: AVD Manager</h2>
<p>I recommend using a real device for checking your work rather than using the onscreen device emulator &#8211; it&#8217;s way faster and more accurate.</p>
<p>1. We&#8217;ll configure a sluggish emulator called an AVD, or Android Virtual Device.<br />
<strong>Windows:</strong> Tools &gt; Android &gt; AVD Manager.</p>
<p><em>Sometimes the menu item Android in Tools &gt; Android appears, sometimes it doesn&#8217;t; I suspect it is a contextual issue, but haven&#8217;t found out what triggers it on and off. </em></p>
<blockquote><p><strong>Windows:</strong> when I did my first project, I needed only to open Tools &gt; Android &gt; AVD Manager. But for this stock Cordova project, the Tools menu did not include an Android menu item in its list &#8212; I assume it was removed when updating to 0.8.9. I clicked on Help &gt; Find Action&#8230; and typed in &#8220;avd,&#8221; then &#8220;AVD Manager&#8221; appeared as a result. Double-clicking on it resulted in nothing happening. A bug for sure.</p></blockquote>
<p><strong>Mac:</strong> click on the red Exit button in the upper left to return to the Welcome screen (it doesn&#8217;t shut down AS). Click on Project Defaults &gt; Run Configurations. Click on Defaults to open the folder, then Android Application. Under Target Device, click on the &#8220;&#8230;&#8221; button next to Prefer Android Virtual Device. That will start the AVD Manager. (I&#8217;ve never gotten the selected AVD to appear in the Prefer Android Virtual Device drop-down.)</p>
<p>2. Click on the Device Definitions tab to see the preformatted AVDs. Choose the ones you are interested in. For our purposes, and to keep the download times short, we&#8217;ll just choose Nexus 7 (2012), then click on the Create AVD&#8230; button.</p>
<p>3. The Create new AVD dialog appears. The lower edge cut off the rest of the information and there are no scrollbars, so grab the lower edge and extend until you see the Cancel button.</p>
<p>4. For Target: choose Google API 17.<br />
For CPU/ABI: choose ARM (not sure if this is best).<br />
For Back Camera: Emulated.<br />
For Skin: No skin.<br />
Click OK, OK.</p>
<p>5. The AVD Manager displays the device we just set up. Close the dialog/window.</p>
<p><strong>Windows:</strong> the AVD device info is added to C:/Users/&lt;name&gt;/.android/avd<br />
<strong>Mac:</strong> the AVD device info is added to /Users/&lt;name&gt;/.android/avd</p>
<p><em>You&#8217;ll notice I don&#8217;t give instructions for the use of the emulator. That&#8217;s because although I configured an AVD, the emulator never showed the app. It only showed the home screen of the device. (&#8220;Unfortunately, Launcher has stopped.&#8221;) Perhaps my above AVD settings are wrong. An earlier version gave device startup and logcat information &#8212; then the upgrade left these out! When I have it working properly, I&#8217;ll update this page. </em></p>
<h2>New terms I came across as I was learning about Android Studio</h2>
<p><strong>DSL</strong> (Domain Specific Language)<br />
<a title="http://en.wikipedia.org/wiki/Domain-specific_language" href="http://en.wikipedia.org/wiki/Domain-specific_language" target="_blank">http://en.wikipedia.org/wiki/Domain-specific_language</a></p>
<p><strong>Gradle</strong> (Gradle is a build and automation system. Automates the building, testing, publishing, deployment, etc., of software packages or other types of projects. This build language is based on Groovy, with some additions to make it easier to describe a build.)<br />
<a title="http://www.gradleware.com/android/gradle-the-new-android-build-system/" href="http://www.gradleware.com/android/gradle-the-new-android-build-system/" target="_blank">http://www.gradleware.com/android/gradle-the-new-android-build-system/</a><br />
<a title="http://www.gradle.org/docs/current/userguide/userguide_single.html" href="http://www.gradle.org/docs/current/userguide/userguide_single.html" target="_blank">http://www.gradle.org/docs/current/userguide/userguide_single.html</a><br />
<a title="http://en.wikipedia.org/wiki/Gradle " href="http://en.wikipedia.org/wiki/Gradle%20" target="_blank">http://en.wikipedia.org/wiki/Gradle </a><br />
<a title="http://developer.android.com/sdk/installing/studio-build.html" href="http://developer.android.com/sdk/installing/studio-build.html" target="_blank">http://developer.android.com/sdk/installing/studio-build.html</a></p>
<p><strong>Groovy</strong> (dynamic language for the Java Virtual Machine; a plugin that compiles projects)<br />
<a title="http://groovy.codehaus.org/" href="http://groovy.codehaus.org/" target="_blank">http://groovy.codehaus.org/</a></p>
<p><strong>IntelliJ IDEA</strong> (Java IDE that AS uses)<br />
<a title="http://en.wikipedia.org/wiki/IntelliJ_IDEA" href="http://en.wikipedia.org/wiki/IntelliJ_IDEA" target="_blank">http://en.wikipedia.org/wiki/IntelliJ_IDEA</a></p>
<p><strong>JetBrains</strong> (created IntelliJ)<br />
<a title="https://www.jetbrains.com/" href="https://www.jetbrains.com/" target="_blank">https://www.jetbrains.com/</a></p>
<p><strong>Maven</strong> (packages dependencies; better than ant)<br />
<a title="http://maven.apache.org/" href="http://maven.apache.org/" target="_blank">http://maven.apache.org/</a><br />
<a title="http://search.maven.org/" href="http://search.maven.org/" target="_blank">http://search.maven.org/</a><br />
<a title="http://spring.io/guides/gs/maven-android/" href="http://spring.io/guides/gs/maven-android/" target="_blank">http://spring.io/guides/gs/maven-android/</a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android-studio-beta/'>Android Studio Beta</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1441/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1441/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1441/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1441/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1441/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1441/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1441/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1441/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1441/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1441/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1441/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1441/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1441&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/10/10/using-android-studio-beta-with-cordova-phonegap/feed/</wfw:commentRss>
		<slash:comments>9</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>News: Cordova, iPhone 6, and iOS 8</title>
		<link>https://iphonedevlog.wordpress.com/2014/09/19/cordova-and-ios-8/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/09/19/cordova-and-ios-8/#respond</comments>
		<pubDate>Fri, 19 Sep 2014 15:46:59 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Xcode Tips]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1399</guid>
		<description><![CDATA[Shazron of Adobe System&#8217;s Inc. gives us the latest news about Cordova and Apple&#8217;s release of iOS 8. Here&#8217;s what we need to change to get our apps ready for iOS 8: http://shazronatadobe.wordpress.com/2014/09/18/cordova-ios-and-ios-8/ More news: http://sdtimes.com/guest-view-hybrid-app-developers-love-new-ios-8/ http://www.sitepoint.com/getting-app-ready-ios-8/ Nov. 25, 2014 Need to upgrade iOS apps with Cordova older than 3.4.1 before Feb. 2015: http://cordova.apache.org/announcements/2014/11/25/ios-64bit.html iOS [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1399&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>Shazron of Adobe System&#8217;s Inc. gives us the latest news about Cordova and Apple&#8217;s release of iOS 8. Here&#8217;s what we need to change to get our apps ready for iOS 8:</p>
<p><a title="http://shazronatadobe.wordpress.com/2014/09/18/cordova-ios-and-ios-8/" href="http://shazronatadobe.wordpress.com/2014/09/18/cordova-ios-and-ios-8/" target="_blank">http://shazronatadobe.wordpress.com/2014/09/18/cordova-ios-and-ios-8/</a></p>
<p>More news:<br />
<a title="http://sdtimes.com/guest-view-hybrid-app-developers-love-new-ios-8/" href="http://sdtimes.com/guest-view-hybrid-app-developers-love-new-ios-8/" target="_blank">http://sdtimes.com/guest-view-hybrid-app-developers-love-new-ios-8/</a><br />
<a title="http://www.sitepoint.com/getting-app-ready-ios-8/" href="http://www.sitepoint.com/getting-app-ready-ios-8/" target="_blank">http://www.sitepoint.com/getting-app-ready-ios-8/ </a></p>
<p>Nov. 25, 2014 Need to upgrade iOS apps with Cordova older than 3.4.1 before Feb. 2015: <a title="http://cordova.apache.org/announcements/2014/11/25/ios-64bit.html" href="http://cordova.apache.org/announcements/2014/11/25/ios-64bit.html" target="_blank">http://cordova.apache.org/announcements/2014/11/25/ios-64bit.html </a></p>
<p><span id="more-1399"></span></p>
<p>iOS 8 Release Notes:<br />
<a title="https://developer.apple.com/library/ios/releasenotes/General/RN-iOSSDK-8.0/index.html " href="https://developer.apple.com/library/ios/releasenotes/General/RN-iOSSDK-8.0/index.html%20" target="_blank">https://developer.apple.com/library/ios/releasenotes/General/RN-iOSSDK-8.0/index.html </a></p>
<p>iOS 8 Support Issues:<br />
<a title="https://issues.apache.org/jira/browse/CB-7043" href="https://issues.apache.org/jira/browse/CB-7043" target="_blank">https://issues.apache.org/jira/browse/CB-7043 </a><br />
<a title="http://www.raymondcamden.com/2014/9/25/IndexedDB-on-iOS-8--Broken-Bad" href="http://www.raymondcamden.com/2014/9/25/IndexedDB-on-iOS-8--Broken-Bad" target="_blank">http://www.raymondcamden.com/2014/9/25/IndexedDB-on-iOS-8&#8211;Broken-Bad </a></p>
<p>A drop-in replacement of UIWebView &#8211; useful until Apple release a bug-free iOS8 WKWebView:<br />
<a title="https://github.com/Telerik-Verified-Plugins/WKWebView" href="https://github.com/Telerik-Verified-Plugins/WKWebView" target="_blank">https://github.com/Telerik-Verified-Plugins/WKWebView</a><br />
<a title="http://devgirl.org/2014/11/10/boost-your-ios-8-mobile-app-performance-with-wkwebview/" href="http://devgirl.org/2014/11/10/boost-your-ios-8-mobile-app-performance-with-wkwebview/" target="_blank">http://devgirl.org/2014/11/10/boost-your-ios-8-mobile-app-performance-with-wkwebview/ </a></p>
<p>For users:<br />
<a title="http://www.cnet.com/how-to/the-complete-guide-to-ios-8/" href="http://www.cnet.com/how-to/the-complete-guide-to-ios-8/" target="_blank">http://www.cnet.com/how-to/the-complete-guide-to-ios-8/ </a><br />
<a title="http://mashable.com/2014/09/25/apple-fixes-ios-8-update/" href="http://mashable.com/2014/09/25/apple-fixes-ios-8-update/" target="_blank">http://mashable.com/2014/09/25/apple-fixes-ios-8-update/ </a></p>
<p>Apache Cordova 3.6:<br />
<a title="http://phonegap.com/blog/2014/10/01/upcoming-deprecations/" href="http://phonegap.com/blog/2014/10/01/upcoming-deprecations/" target="_blank">http://phonegap.com/blog/2014/10/01/upcoming-deprecations/</a><br />
<a title="https://issues.apache.org/jira/browse/CB-7043" href="https://issues.apache.org/jira/browse/CB-7043" target="_blank">https://issues.apache.org/jira/browse/CB-7043</a><br />
<a title="http://cordova.apache.org/announcements/2014/09/08/cordova-361.html" href="http://cordova.apache.org/announcements/2014/09/08/cordova-361.html" target="_blank">http://cordova.apache.org/announcements/2014/09/08/cordova-361.html  </a><br />
<a title="http://www.raymondcamden.com/2014/9/24/Browser-as-a-platform-for-your-PhoneGapCordova-apps" href="http://www.raymondcamden.com/2014/9/24/Browser-as-a-platform-for-your-PhoneGapCordova-apps" target="_blank">http://www.raymondcamden.com/2014/9/24/Browser-as-a-platform-for-your-PhoneGapCordova-apps </a><br />
<a title="http://devgirl.org/2014/09/29/new-icons-and-splash-screen-help-for-cordovaphonegap/" href="http://devgirl.org/2014/09/29/new-icons-and-splash-screen-help-for-cordovaphonegap/" target="_blank">http://devgirl.org/2014/09/29/new-icons-and-splash-screen-help-for-cordovaphonegap/</a></p>
<p>PhoneGap update:<br />
11/14/2014 <a title="http://phonegap.com/blog/2014/11/13/phonegap-cli-3-6-3/ " href="http://phonegap.com/blog/2014/11/13/phonegap-cli-3-6-3/%20" target="_blank">http://phonegap.com/blog/2014/11/13/phonegap-cli-3-6-3/ </a></p>
<p>iPhone 6:<br />
ios-sim: <a title="https://www.npmjs.org/package/ios-sim" href="https://www.npmjs.org/package/ios-sim" target="_blank">https://www.npmjs.org/package/ios-sim</a><br />
new image sizes: <a title="https://iphonedevlog.wordpress.com/application-assets-ios-1152012/" href="https://iphonedevlog.wordpress.com/application-assets-ios-1152012/" target="_blank">https://iphonedevlog.wordpress.com/application-assets-ios-1152012/ </a><br />
news: <a title="http://www.mobilexweb.com/blog/safari-ios8-iphone6-web-developers-designers" href="http://www.mobilexweb.com/blog/safari-ios8-iphone6-web-developers-designers" target="_blank">http://www.mobilexweb.com/blog/safari-ios8-iphone6-web-developers-designers </a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/category/xcode-tips/'>Xcode Tips</a>  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1399/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1399/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1399/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1399/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1399/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1399/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1399/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1399/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1399/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1399/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1399/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1399/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1399&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/09/19/cordova-and-ios-8/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Book Review: PhoneGap 3.x Mobile Application Development</title>
		<link>https://iphonedevlog.wordpress.com/2014/09/18/book-review-phonegap-3-x-mobile-application-development/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/09/18/book-review-phonegap-3-x-mobile-application-development/#respond</comments>
		<pubDate>Thu, 18 Sep 2014 20:22:17 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Book Reviews]]></category>
		<category><![CDATA[Camera]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[development books]]></category>
		<category><![CDATA[File API]]></category>
		<category><![CDATA[localStorage]]></category>
		<category><![CDATA[PhoneGap]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1375</guid>
		<description><![CDATA[PhoneGap 3.x Mobile Application Development Kerri Shotts &#8220;Create useful and exciting real-world apps for iOS and Android devices with 12 fantastic projects&#8221; Packt Publishers https://www.packtpub.com/application-development/phonegap-3x-mobile-application-development-hotshot Disclaimer: I was one of the reviewers for the book before publication. This review is based on the finished version of the book. Kerri&#8217;s book helps us to incorporate several [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1375&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p><strong>PhoneGap 3.x Mobile Application Development</strong><br />
Kerri Shotts<br />
&#8220;Create useful and exciting real-world apps for iOS and Android devices with 12 fantastic projects&#8221;<br />
Packt Publishers<br />
<a title="https://www.packtpub.com/application-development/phonegap-3x-mobile-application-development-hotshot" href="https://www.packtpub.com/application-development/phonegap-3x-mobile-application-development-hotshot" target="_blank">https://www.packtpub.com/application-development/phonegap-3x-mobile-application-development-hotshot</a></p>
<div data-shortcode="caption" id="attachment_1377" style="width: 316px" class="wp-caption aligncenter"><a href="https://iphonedevlog.files.wordpress.com/2014/09/7925os.jpg"><img class=" wp-image-1377" src="https://iphonedevlog.files.wordpress.com/2014/09/7925os.jpg?w=306&#038;h=378" alt="Book Cover: PhoneGap 3.x Mobile Application Development" width="306" height="378" /></a><p class="wp-caption-text">Book Cover: PhoneGap 3.x Mobile Application Development</p></div>
<p><span id="more-1375"></span></p>
<p><em>Disclaimer: I was one of the reviewers for the book before publication. This review is based on the finished version of the book.</em></p>
<p>Kerri&#8217;s book helps us to incorporate several different features into our iOS and Android apps with PhoneGap and HTML/CSS/JS. The book begins by introducing us to PhoneGap and gives us careful steps on how to set it up for development, for Windows and Mac, for iOS and Android. We install node.js, set up the PATH statements and platform SDKs (XCode for iOS development, and Android SDK), install PhoneGap, and download plugins. With the setup out of the way, and the HelloWorld project under our belts, we&#8217;re ready to build our projects.</p>
<p>Kerri shows us how to include many of the basic add-ons for a mobile app, including localization (translating text), globalization (determine a users&#8217; location), local storage, File API, audio, video, Camera API, Google Maps API, and more.</p>
<p>Along the way to building a basic note-taking app and integrating all these features, Kerry familiarizes us with require.js, Promises, yasmf, Hammer.js, and gives us all the code needed to build apps with this added functionality.</p>
<p>What good is a note-taking app if you can&#8217;t share it with the world? Kerri shows us exactly how to do that, along with incorporating maps and GPS.</p>
<p>If that weren&#8217;t enough, we do an about-face and create a game to learn about the Canvas API, both touch-based and acceleration-based. Then we use Parse to hook it up to a back end.</p>
<p>Kerri is a careful teacher, going over the code to help us understand its place in the app. Her workflow experience shines here as she first diagrams her data model, giving us a guide to where she&#8217;s going. Drawings, some of which were in color in the PDF ebook I viewed, helped us stay on track. Complete code is available to download from the Github site.</p>
<p>If you don&#8217;t know HTML, CSS, or JavaScript, then you&#8217;ll need to learn these aspects of web design before you can use this book. If you know HTML and CSS reasonably well, but have little familiarity with JavaScript (like me), you&#8217;ll find the JavaScript concepts difficult to follow. However, I also got a better appreciation for what JavaScript can do, and the code helped me to research and learn more about how to use it. If you want a crash course on what PhoneGap Cordova can provide, this is a great book to learn from.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/book-reviews/'>Book Reviews</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/camera/'>Camera</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/development-books/'>development books</a>, <a href='https://iphonedevlog.wordpress.com/tag/file-api/'>File API</a>, <a href='https://iphonedevlog.wordpress.com/tag/localstorage/'>localStorage</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1375/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1375/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1375/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1375/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1375/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1375/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1375/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1375/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1375/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1375/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1375/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1375/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1375&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/09/18/book-review-phonegap-3-x-mobile-application-development/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/09/7925os.jpg" medium="image">
			<media:title type="html">Book Cover: PhoneGap 3.x Mobile Application Development</media:title>
		</media:content>
	</item>
		<item>
		<title>Using the Ionic Framework UI Elements</title>
		<link>https://iphonedevlog.wordpress.com/2014/07/17/using-the-ionic-framework-ui-elements/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/07/17/using-the-ionic-framework-ui-elements/#comments</comments>
		<pubDate>Thu, 17 Jul 2014 16:39:19 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Ionic]]></category>
		<category><![CDATA[UI]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1350</guid>
		<description><![CDATA[Ionic has many useable UI elements, including lists, buttons, forms and form elements, and so on. Ionic is both a CSS framework and a Javascript UI library. You can use them as is in your HTML. In this article, I&#8217;ll show you how to incorporate these elements as straight HTML code. I won&#8217;t be going [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1350&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>Ionic has many useable UI elements, including lists, buttons, forms and form elements, and so on. Ionic is both a CSS framework and a Javascript UI library. You can use them as is in your HTML. In this article, I&#8217;ll show you how to incorporate these elements as straight HTML code. I won&#8217;t be going into the more high-end, dynamic aspects of the Ionic framework in this article.</p>
<p><strong>This tutorial assumes you already have installed:</strong><br />
node.js (<a title="http://nodejs.org/" href="http://nodejs.org/" target="_blank">http://nodejs.org/</a>)<br />
Cordova PhoneGap (<a title="http://www.phonegap.com" href="http://www.phonegap.com" target="_blank">http://www.phonegap.com</a>)</p>
<p><strong>This tutorial assumes you:</strong><br />
1. Know how to set up Android and iOS SDKs for development, and setting PATH statements. See my other articles on how to do this.<br />
2. Have created several basic Cordova PhoneGap projects, including adding InAppBrowser plugin and making config.xml changes for it.<span id="more-1350"></span></p>
<p><strong>Ionic resources:</strong><br />
<a title="http://ionicframework.com/getting-started/" href="http://ionicframework.com/getting-started/" target="_blank">http://ionicframework.com/getting-started/</a><br />
<a title="http://forum.ionicframework.com/" href="http://forum.ionicframework.com/" target="_blank">http://forum.ionicframework.com/</a><br />
<a title="http://ionicframework.com/docs/api/" href="http://ionicframework.com/docs/api/" target="_blank">http://ionicframework.com/docs/api/</a><br />
<a title="http://learn.ionicframework.com/" href="http://learn.ionicframework.com/" target="_blank">http://learn.ionicframework.com/</a></p>
<p><strong>Angularjs resources:</strong><br />
<a title="http://www.thinkster.io/angularjs/GtaQ0oMGIl" href="http://www.thinkster.io/angularjs/GtaQ0oMGIl" target="_blank">http://www.thinkster.io/angularjs/GtaQ0oMGIl</a><br />
<a title="https://angularjs.org/" href="https://angularjs.org/" target="_blank">https://angularjs.org/</a></p>
<h2>Set Up the Environment</h2>
<p>1. Visit <a title="http://ionicframework.com" href="http://ionicframework.com" target="_blank">http://ionicframework.com</a> and download the beta.</p>
<p>2. Open the Terminal app. Install Ionic in Terminal with:</p>
<pre>npm install -g cordova ionic</pre>
<p>3. Starting from within the folder which will host the files (such as /IonicApps), type the following to create an app called myApp:</p>
<pre>ionic start myApp blank</pre>
<p>/IonicApps/myApp folder has been created. Double-click to open the readme file. It&#8217;ll tell you how to update the framework, and includes a tip on using Sass.</p>
<p>4. Ionic apps are based on Cordova, so we can use the familiar Cordova commands to build, test, and deploy our apps. So, cd to your app folder then create one or two platforms:</p>
<pre>cd myApp</pre>
<pre>ionic platform add ios</pre>
<pre>ionic platform add android</pre>
<p>5. Open the Ionic folder in /Downloads. Copy the /css, /fonts, and /js folders over to the /myApp/www folder, overwriting the existing folders of the same name.</p>
<p>6. Open /myApp/www/index.html and replace it with the following. This references the ionicicons.min.css, cordova.js, ionic.bundle.js files, which you incorporated in step 5:</p>
<pre>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Ionic Framework&lt;/title&gt;
&lt;link rel="stylesheet" href="css/ionicons.min.css" /&gt;
 &lt;link rel="stylesheet" href="css/ionic.css" /&gt;
&lt;script type="text/javascript" charset="utf-8" src="cordova.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
 }
&lt;/script&gt;
&lt;script src="js/ionic.bundle.js"&gt;&lt;/script&gt;
 &lt;script&gt; 
 
&lt;!-- more Ionic code will go here --&gt;
 
 &lt;/script&gt;
 
&lt;/head&gt;
&lt;body ng-app="ionicApp"&gt;
&lt;!-- your header and footer will go here --&gt;
 
 &lt;script&gt; 
 
&lt;!-- your page states will go here --&gt;
 
 &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<p>The bottom of this article gives the entire index.html contents for this tutorial. However, it won&#8217;t display correctly on your web browser unless the above steps have been implemented first. The following are screen grabs of what the index.html will display.</p>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/07/myapp-buttons.jpg"><img class="aligncenter size-full wp-image-1351" src="https://iphonedevlog.files.wordpress.com/2014/07/myapp-buttons.jpg?w=660" alt="myApp-buttons"   /></a> <a href="https://iphonedevlog.files.wordpress.com/2014/07/myapp-grids.jpg"><img class="aligncenter size-large wp-image-1352" src="https://iphonedevlog.files.wordpress.com/2014/07/myapp-grids.jpg?w=659&#038;h=1024" alt="myApp-grids"   /></a> <a href="https://iphonedevlog.files.wordpress.com/2014/07/myapp-home.jpg"><img class="aligncenter size-large wp-image-1353" src="https://iphonedevlog.files.wordpress.com/2014/07/myapp-home.jpg?w=656&#038;h=1024" alt="myApp-home"   /></a> <a href="https://iphonedevlog.files.wordpress.com/2014/07/myapp-lists.jpg"><img class="aligncenter size-large wp-image-1354" src="https://iphonedevlog.files.wordpress.com/2014/07/myapp-lists.jpg?w=660&#038;h=1022" alt="myApp-lists"   /></a></p>
<h2>Set Up for Single-Page Architecture</h2>
<p>1. Ionic uses the single-page architecture (SPA) format. All HTML content, therefore, will be on one page: index.html. In the &lt;script&gt; tags in the &lt;head&gt; will be placed the router that processes the page architecture. Add the router script:</p>
<pre>&lt;!-- more Ionic code will go here --&gt;
 var app = angular.module('ionicApp', ['ionic'])
 
// set up the default router and load the template
 app.config(function($stateProvider, $urlRouterProvider) {
 $urlRouterProvider.otherwise('/')</pre>
<p>2. Each page is a &#8220;state&#8221; with its own html name, in my case, home.html, button.html, list.html, and grid.html. I&#8217;m using four &#8220;pages&#8221; for this app to demonstrate the various features one can use from Ionic. Here are is how the states are coded, right after the lines in step 1:</p>
<pre>$stateProvider
 .state('home', { 
 url: '/',
 templateUrl: 'home.html'
 })
 .state('button', { 
 url: '/',
 templateUrl: 'button.html'
 })
 .state('list', { 
 url: '/',
 templateUrl: 'list.html'
 })
 .state('grid', { 
 url: '/',
 templateUrl: 'grid.html'
 })
 })
 &lt;/script&gt;</pre>
<p>Whenever I reference &#8220;home.html&#8221; in an internal link, the above scripting will know to display the id=&#8221;home&#8221; page state content. More on this in &#8220;Create a Page State&#8221; below.</p>
<p>3. Ionic considers this collection of page states to be an app, so it designates it as &#8220;ng-app&#8221; for the body. We&#8217;ll use a top navigation bar, which will be seen across all pages, with a title area and Home and Back buttons. We&#8217;ll place it outside any of the states so they&#8217;ll appear across all pages. The title will change to reflect that page&#8217;s title. The Back button will appear only on pages other than the Home page. I included a few comments for the lines.</p>
<p>Start the &lt;body&gt; content like this:</p>
<pre>&lt;body ng-app="ionicApp"&gt;
&lt;!--navigation bar --&gt;
 &lt;ion-nav-bar class="bar-dark nav-title-slide-ios7"&gt; &lt;!-- works across pages --&gt;
 &lt;a ui-sref="home"&gt; &lt;button class="button icon-left ion-home"&gt;Home&lt;/button&gt;&lt;/a&gt;
 &lt;ion-nav-back-button class="button-clear"&gt;&lt;!-- provides back button only where needed --&gt;
 &amp;nbsp;&lt;i class="ion-arrow-left-c"&gt;&lt;/i&gt; Back &lt;!-- back button with left arrow --&gt;
 &lt;/ion-nav-back-button&gt;
 &lt;/ion-nav-bar&gt;</pre>
<p>4. Now let&#8217;s do the sticky footer. It will include three grouped buttons that will link to the interior page states. They are enclosed in a div with the &#8220;button-bar&#8221; class. They will stretch responsively across the bottom of the screen.</p>
<p>To style the buttons when they link to interior pages, this syntax is used: &lt;a ui-sref=&#8221;button&#8221;, where we&#8217;ve already set the state&#8217;s name as button.html in the .state scripting above in &#8220;Setting Up.&#8221; Again, this is outside all the state coding so it appears across all pages. Place it immediately after the above nav bar code of step 3.</p>
<pre>&lt;!-- Footer --&gt;
 &lt;div class="bar bar-footer bar-dark"&gt;&lt;!-- placed here, footer sticks to all pages --&gt;
&lt;!-- three grouped buttons --&gt; 
 &lt;div class="button-bar" style="padding-bottom: 4em;"&gt;
 &lt;a ui-sref="button" class="button"&gt;Cards &amp; Buttons&lt;/a&gt;
 &lt;a ui-sref="list" class="button"&gt;List&lt;/a&gt;
 &lt;a ui-sref="grid" class="button"&gt;Grid&lt;/a&gt;
 &lt;/div&gt;
 &lt;/div&gt;
&lt;ion-nav-view&gt;&lt;/ion-nav-view&gt;</pre>
<p>I am using the footer to navigate among three pages and the top nav bar to bring us back to the home page and to display each page&#8217;s title. With more pages, though, we would use a button list, perhaps with icons or thumbnails instead.</p>
<h2>Create a Page State</h2>
<p>Now let&#8217;s start setting up a page state. We&#8217;ll start by delineating the page between two &lt;script&gt; tags, identifying the state name (home.html), and that it is an ng-template. We&#8217;ll set up the page as a view with ion-view, and place our content within ion-content. We&#8217;ll want padding around the screen for our content, so we need to manually add padding=&#8221;true&#8221; to the ion-content tag.</p>
<p>1. Add this content for the page state after the footer code in the earlier section:</p>
<pre>&lt;script id='home.html' type='text/ng-template'&gt; &lt;!-- start of page state --&gt;
 &lt;ion-view title="Forms &amp; Inputs"&gt; &lt;!-- title in nav bar --&gt;
 &lt;ion-content padding="true"&gt; &lt;!-- Adds default padding. Must add manually. --&gt;
&lt;div class="spacer"&gt;&lt;/div&gt;&lt;!-- I added this because the footer covers up the lower part of the view. --&gt;
 &lt;/ion-content&gt;
 &lt;/ion-view&gt;
 &lt;/script&gt; &lt;!-- end of page state --&gt;</pre>
<p>2. I noticed that the bottom content in the views were covered by the footer, so I added a div spacer to add space and push the content higher. Add this styling to the div spacer above the &lt;/head&gt; line:</p>
<pre>&lt;style type="text/css"&gt;
 .spacer {padding-top:3em;}
.col {margin:2px; background-color:#ddd;}
 &lt;/style&gt;</pre>
<p>3. You can go ahead and double-click on /www/index.html to view the app so far.</p>
<p>From this point on:<br />
a) We duplicate step 2 for each page we want to link to.<br />
b) We change &#8220;home.html&#8221; to the new page name.<br />
c) We update the .state scripting at top so that every time we apply the internal link of &lt;a ui-sref=name.html our scripting at top will know to show the correct page state.</p>
<p>You&#8217;ll want to incorporate the InAppBrowser if you want to keep the external links in-app. This means styling the button for the IAB, such as:</p>
<pre>&lt;button class="button button-block button-stable" onclick="window.open('http://ionicframework.com/docs/components/#forms','_blank');"&gt;Button Text Goes Here&lt;/button&gt;</pre>
<p>Buttons that link to internal page states are coded as:</p>
<pre>&lt;button class="button button-block button-stable" onclick='window.open('ui-sref="home")'&gt;Button Text Goes Here&lt;/button&gt;</pre>
<p>You&#8217;ll use the familiar <strong>cordova plugin add org.apache.cordova.inappbrowser</strong> in Terminal and add the appropriate lines for your platform in config.xml.</p>
<p>Ionic has an entire coding section using Angularjs that makes the pages dynamic and prevents code repetition. (See some tutorials here: <a title="http://learn.ionicframework.com/formulas/" href="http://learn.ionicframework.com/formulas/" target="_blank">http://learn.ionicframework.com/formulas/</a> .) We haven&#8217;t implemented any of that here, nor have we set up any of the form elements for working. This is just to show off the UI of the Ionic Framework. The following components were copied/pasted from <a title="http://ionicframework.com/docs/components/" href="http://ionicframework.com/docs/components/" target="_blank">http://ionicframework.com/docs/components/</a> and put in their proper arrangement for showing off. Each page will give the URL of the section so you can explore more of the options available.</p>
<p>Here is the full and complete scripting for the entire index.html page with several different components already added. I&#8217;ve included comments throughout to help you understand what&#8217;s happening under the hood. View this in your browser and click the buttons at the top of each page state to read more about the options for that section. If you make changes to the code, the browser needs to be refreshed to see them.</p>
<pre>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Ionic Framework&lt;/title&gt;
&lt;link rel="stylesheet" href="css/ionicons.min.css" /&gt;
 &lt;link rel="stylesheet" href="css/ionic.css" /&gt;
&lt;script type="text/javascript" charset="utf-8" src="cordova.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
 }
&lt;/script&gt;
&lt;!-- IAB syntax: &lt;button&gt;&lt;a href="#" onclick="window.open('https://iphonedevlog.wordpress.com','_blank');"&gt;IAB with location bar (showing URL)&lt;/a&gt; 
 &lt;/button&gt; --&gt;
 &lt;script src="js/ionic.bundle.js"&gt;&lt;/script&gt;
 &lt;script&gt;
 var app = angular.module('ionicApp', ['ionic'])
 
// set up the default router and load the template
 app.config(function($stateProvider, $urlRouterProvider) {
 $urlRouterProvider.otherwise('/')
 
// Each $stateProvider sets up a single page with its own URL in a single-page arch. layout.
 $stateProvider
 .state('home', { 
 url: '/',
 templateUrl: 'home.html'
 })
 .state('button', { 
 url: '/',
 templateUrl: 'button.html'
 })
 .state('list', { 
 url: '/',
 templateUrl: 'list.html'
 })
 .state('grid', { 
 url: '/',
 templateUrl: 'grid.html'
 })
 })
 &lt;/script&gt;
 &lt;style type="text/css"&gt;
 .spacer {padding-top:3em;}
 .col {margin:2px; background-color:#ddd;}
 &lt;/style&gt;
 
&lt;/head&gt;
&lt;body ng-app="ionicApp"&gt;
&lt;!--navigation bar --&gt;
 &lt;ion-nav-bar class="bar-dark nav-title-slide-ios7"&gt; &lt;!-- works across pages --&gt;
 &lt;a ui-sref="home"&gt; &lt;button class="button icon-left ion-home"&gt;Home&lt;/button&gt;&lt;/a&gt;
 &lt;ion-nav-back-button class="button-clear"&gt;&lt;!-- provides back button only where needed --&gt;
 &amp;nbsp;&lt;i class="ion-arrow-left-c"&gt;&lt;/i&gt; Back
 &lt;/ion-nav-back-button&gt;
 &lt;/ion-nav-bar&gt;
&lt;!-- Footer --&gt;
 &lt;div class="bar bar-footer bar-dark"&gt;&lt;!-- placed here, footer sticks to all pages --&gt;
&lt;!-- three grouped buttons --&gt; 
 &lt;div class="button-bar" style="padding-bottom: 4em;"&gt;
 &lt;a ui-sref="button" class="button"&gt;Cards &amp; Buttons&lt;/a&gt;
 &lt;a ui-sref="list" class="button"&gt;List&lt;/a&gt;
 &lt;a ui-sref="grid" class="button"&gt;Grid&lt;/a&gt;
 &lt;/div&gt;
 &lt;/div&gt;
&lt;ion-nav-view&gt;&lt;/ion-nav-view&gt;

&lt;script id='home.html' type='text/ng-template'&gt;&lt;!-- forms a single-page architecture page called home.html. So all internal links to home.html will end here. --&gt;
 &lt;ion-view title="Home Page"&gt; &lt;!-- title of nav bar --&gt;
 &lt;ion-content padding="true"&gt; &lt;!-- Adds default padding. Must add manually. --&gt;
 &lt;h3&gt;Forms &amp; Inputs&lt;/h3&gt; 
&lt;button class="button button-block button-stable" onclick="window.open('http://ionicframework.com/docs/components/#forms','_blank');"&gt;More about Ionic Form &amp; Inputs&lt;/button&gt;
&lt;button class="button button-block button-stable" onclick="window.open('http://www.javaworld.com/article/2077176/scripting-jvm-languages/using-javascript-and-forms.html','_blank');"&gt;Processing Forms with JavaScript&lt;/button&gt; 
 
 &lt;ul class="list"&gt;
 &lt;li class="item item-toggle"&gt;
 Toggle On or Off &lt;!-- text goes OUTSIDE the label div --&gt;
 &lt;label class="toggle toggle-assertive"&gt; 
 &lt;input type="checkbox" id="toggleOn" value="toggleOn"&gt;
 &lt;div class="track"&gt;
 &lt;div class="handle"&gt;&lt;/div&gt;
 &lt;/div&gt;
 &lt;/label&gt;
 &lt;/li&gt;
 &lt;/ul&gt;
 
 &lt;ul class="list"&gt;
 &lt;li class="item item-checkbox"&gt;
 &lt;label class="checkbox"&gt;
 &lt;input type="checkbox" value="checkbox1"&gt;
 &lt;/label&gt;
 Checkbox 1 &lt;!-- text goes OUTSIDE the label div --&gt;
 &lt;/li&gt;
&lt;/label&gt; 
 &lt;li class="item item-checkbox"&gt;
 &lt;label class="checkbox"&gt;
 &lt;input type="checkbox" value="checkbox2"&gt;
 &lt;/label&gt;
 Checkbox 2 &lt;!-- text goes OUTSIDE the label div --&gt;
 &lt;/li&gt;
 &lt;/ul&gt;
&lt;div class="list"&gt;
 &lt;label class="item item-radio"&gt;
 &lt;input type="radio" name="group1" value="radio1"&gt;
 &lt;div class="item-content"&gt;
 Radio Button 1
 &lt;/div&gt;
 &lt;i class="radio-icon ion-checkmark"&gt;&lt;/i&gt;
 &lt;/label&gt;
&lt;label class="item item-radio"&gt;
 &lt;input type="radio" name="group1" value="radio2"&gt;
 &lt;div class="item-content"&gt;
 Radio Button 2
 &lt;/div&gt;
 &lt;i class="radio-icon ion-checkmark"&gt;&lt;/i&gt;
 &lt;/label&gt;
&lt;/div&gt;
&lt;/form&gt;
&lt;h3&gt;Range Elements&lt;/h3&gt;
&lt;div class="range"&gt;
 &lt;i class="icon ion-volume-low"&gt;&lt;/i&gt;
 &lt;input type="range" name="volume"&gt;
 &lt;i class="icon ion-volume-high"&gt;&lt;/i&gt;
&lt;/div&gt;
&lt;div class="list"&gt;
 &lt;div class="item range range-positive"&gt;
 &lt;i class="icon ion-ios7-sunny-outline"&gt;&lt;/i&gt;
 &lt;input type="range" name="volume" min="0" max="100" value="33"&gt;
 &lt;i class="icon ion-ios7-sunny"&gt;&lt;/i&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Drop-down Select List&lt;/h3&gt;
&lt;div class="list"&gt;
 &lt;label class="item item-input item-select"&gt;
 &lt;div class="input-label"&gt;
 Color Scheme - Select
 &lt;/div&gt;
 &lt;select id="select"&gt;
 &lt;option value="blue"&gt;Blue&lt;/option&gt;
 &lt;option value="green" selected&gt;Green&lt;/option&gt;
 &lt;option value="red"&gt;Red&lt;/option&gt;
 &lt;/select&gt;
 &lt;/label&gt;
&lt;/div&gt;
&lt;h3&gt;Forms&lt;/h3&gt;
&lt;form name="myForm" method="POST"&gt;
&lt;div class="list"&gt;
 &lt;label class="item item-input"&gt;
 &lt;input type="text" name="myFormFirstName" placeholder="First Name"&gt;
 &lt;/label&gt;
 &lt;label class="item item-input"&gt;
 &lt;input type="text" name="myFormLastName" placeholder="Last Name"&gt;
 &lt;/label&gt;
 &lt;label class="item item-input"&gt;
 &lt;textarea name="myFormComments" placeholder="Comments - see source for other ways to style forms"&gt;&lt;/textarea&gt;
 &lt;/label&gt;
&lt;/div&gt;
&lt;h3&gt;Add Input to a Header&lt;/h3&gt;
&lt;div class="bar bar-header item-input-inset"&gt;
 &lt;label class="item-input-wrapper"&gt;
 &lt;i class="icon ion-ios7-search placeholder-icon"&gt;&lt;/i&gt;
 &lt;input type="search" name="search" placeholder="Search"&gt;
 &lt;/label&gt;
 &lt;button class="button button-clear"&gt;
 Cancel
 &lt;/button&gt;
&lt;/div&gt;
&lt;div class="spacer"&gt;&lt;/div&gt;&lt;!-- I added this because the footer covers up the lower part of the view. --&gt;
 &lt;/ion-content&gt;
 &lt;/ion-view&gt;
 &lt;/script&gt;

&lt;!-- ************************************ --&gt;

&lt;script id='button.html' type='text/ng-template'&gt;&lt;!-- forms a single-page architecture page called button.html. --&gt;
 &lt;ion-view title="Buttons and Cards"&gt;&lt;!-- name in header for this page --&gt;
 &lt;ion-content padding="true"&gt;
 &lt;h2&gt;Cards&lt;/h2&gt;
&lt;button class="button button-block button-stable" onclick="window.open('http://ionicframework.com/docs/components/#cards','_blank');"&gt;More about Ionic Cards&lt;/button&gt;
 
 &lt;div class="card"&gt;
 &lt;div class="item item-divider"&gt;
 I'm a Header in a Card!
 &lt;/div&gt;
 &lt;div class="item item-text-wrap"&gt;
 This is a basic Card which contains an item that has wrapping text. This is a basic Card which contains an item that has wrapping text. This is a basic Card which contains an item that has wrapping text. This is a basic Card which contains an item that has wrapping text. This is a basic Card which contains an item that has wrapping text. This is a basic Card which contains an item that has wrapping text. 
 &lt;/div&gt;
&lt;/div&gt;
&lt;div class="list card"&gt;
&lt;div class="item item-divider"&gt;
 I'm a Header in a Card!
 &lt;/div&gt;
 &lt;div class="item item-avatar"&gt;
 &lt;img src="http://www.teamassociated.com/pictures/cars_and_trucks/RC10B5/Team/RC10B5_TK_2560x2048_md.jpg"&gt;
 &lt;h2&gt;RC10B5&lt;/h2&gt;
 &lt;p&gt;Great 1:10 buggy kit&lt;/p&gt;
 &lt;/div&gt;
&lt;div class="item item-image"&gt;
 &lt;img src="http://www.teamassociated.com/pictures/cars_and_trucks/RC10B5/Team/RC10B5_TK_2560x2048_md.jpg" style="max-width:350px;"&gt;
 &lt;/div&gt;
&lt;!-- Icon doesn't show: Need to first download icons at http://ionicons.com/ --&gt;
 &lt;a class="item item-icon-left assertive" href="#"&gt;
 &lt;i class="icon ion-ios-heart"&gt;&lt;/i&gt;
 Go get one!
 &lt;/a&gt;
&lt;/div&gt;

&lt;h2&gt;Buttons&lt;/h2&gt;
&lt;p&gt;Format a working button like this for external links that open in the InAppBrowser (must install IAB with &lt;span style="font-family:Courier;color:#666"&gt;cordova plugin add org.apache.cordova.inappbrowser&lt;/span&gt; and update config.xml): 
 &lt;span style="font-family:Courier;color:#666"&gt;&amp;lt;button class="button" onclick="window.open('http://www.rc10.com/','_blank');"&gt;Button Text Goes Here&amp;lt;/button&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p&gt;For internal links: &lt;span style="font-family:Courier;color:#666"&gt;&amp;lt;button class="button button-block button-stable" onclick='window.open('ui-sref="home")'&gt;Button Text Goes Here&amp;lt;/button&gt;&lt;/span&gt;&lt;/p&gt;
&lt;button class="button button-stable button-block" onclick="window.open('http://ionicframework.com/docs/components/#buttons','_blank');"&gt;More about Ionic Buttons&lt;/button&gt;
&lt;br&gt;&lt;button class="button button-positive"&gt;
 Different colored buttons
 &lt;/button&gt;
 &lt;button class="button button-block button-stable" onclick='window.open('ui-sref="home")'&gt;block button&lt;/button&gt;
 &lt;h3&gt;Different Size Buttons&lt;/h3&gt;
 &lt;button class="button button-small button-assertive"&gt;
 Small Button
 &lt;/button&gt;
 &lt;br&gt;&lt;button class="button button-large button-positive"&gt;
 Large Button
 &lt;/button&gt;
 &lt;h3&gt;Buttons with Icons&lt;/h3&gt;
 &lt;button class="button"&gt;
 &lt;i class="icon ion-loading-c"&gt;&lt;/i&gt; Loading...
 &lt;/button&gt;
 &lt;br&gt;&lt;button class="button icon-left ion-home"&gt;Home&lt;/button&gt;
 &lt;br&gt;&lt;button class="button icon-left ion-star button-positive"&gt;Favorites&lt;/button&gt;
 &lt;br&gt;&lt;a class="button icon-right ion-chevron-right button-calm"&gt;Learn More&lt;/a&gt;
 &lt;br&gt;&lt;a class="button icon-left ion-chevron-left button-clear button-dark"&gt;Back&lt;/a&gt;
 &lt;br&gt;&lt;button class="button icon ion-gear-a"&gt;&lt;/button&gt;
 &lt;br&gt;&lt;a class="button button-icon icon ion-settings"&gt;&lt;/a&gt;
 &lt;br&gt;&lt;a class="button button-outline icon-right ion-navicon button-balanced"&gt;Reorder&lt;/a&gt;
 &lt;h3&gt;Button Bar&lt;/h3&gt;
 &lt;div class="button-bar"&gt;
 &lt;a ui-sref="home" class="button"&gt;First&lt;/a&gt;
 &lt;a ui-sref="list" class="button"&gt;Second&lt;/a&gt;
 &lt;a ui-sref="grid" class="button"&gt;Third&lt;/a&gt;
 &lt;/div&gt;
 &lt;div class="spacer"&gt;&lt;/div&gt;&lt;!-- I added this because the footer covers up the lower part of the view. --&gt;
 &lt;/ion-content&gt;
 &lt;/ion-view&gt;
 &lt;/script&gt;&lt;
&lt;!-- ************************************ --&gt;
&lt;script id='list.html' type='text/ng-template'&gt;&lt;!-- forms a single-page architecture page --&gt;
 &lt;ion-view title="List Page"&gt;&lt;!-- name in header for this page --&gt;
 &lt;ion-content padding="true"&gt;&lt;!-- manually add padding to view --&gt;
 &lt;h3&gt;Here's a list page&lt;/h3&gt;
&lt;button class="button button-stable button-block" onclick="window.open('http://ionicframework.com/docs/components/#list','_blank');"&gt;More about Ionic Lists&lt;/button&gt;
 &lt;div class="item item-divider"&gt;Timothy Zahn Star Wars books&lt;/div&gt;
 &lt;ul class="list"&gt;
 &lt;li class="item"&gt;Heir to the Empire (Thrawn trilogy), vol 1&lt;/li&gt;
 &lt;li class="item"&gt;Dark Force Rising (Thrawn trilogy), vol 2&lt;/li&gt;
 &lt;li class="item"&gt;The Last Command (Thrawn trilogy), vol 3&lt;/li&gt;
 &lt;li class="item"&gt;Vision of the Future (duology), vol 1&lt;/li&gt;
 &lt;li class="item"&gt;Specter of the Past (duology), vol 2&lt;/li&gt;
 &lt;/ul&gt;
 &lt;/div&gt;
 &lt;h3&gt; Add Icons&lt;/h3&gt;
 &lt;div class="list"&gt;
 &lt;a class="item item-icon-left" href="#"&gt;
 &lt;i class="icon ion-email"&gt;&lt;/i&gt;
 Check mail
 &lt;/a&gt;
 &lt;a class="item item-icon-left item-icon-right" href="#"&gt;
 &lt;i class="icon ion-chatbubble-working"&gt;&lt;/i&gt;
 Call Ma
 &lt;i class="icon ion-ios7-telephone-outline"&gt;&lt;/i&gt;
 &lt;/a&gt;
 &lt;a class="item item-icon-left" href="#"&gt;
 &lt;i class="icon ion-mic-a"&gt;&lt;/i&gt;
 Record album
 &lt;span class="item-note"&gt;
 Grammy
 &lt;/span&gt;
 &lt;/a&gt;
 &lt;a class="item item-icon-left" href="#"&gt;
 &lt;i class="icon ion-person-stalker"&gt;&lt;/i&gt;
 Friends
 &lt;span class="badge badge-assertive"&gt;0&lt;/span&gt;
 &lt;/a&gt;
 &lt;/div&gt;
 &lt;h3&gt; Add thumbnails&lt;/h3&gt;
 &lt;div class="list"&gt;
 &lt;a class="item item-thumbnail-left" href="#"&gt;
 &lt;img src="http://www.teamassociated.com/pictures/cars_and_trucks/RC10B5/Team/RC10B5_TK_2560x2048_md.jpg"&gt;
 &lt;h2&gt;1:10 Electric Buggy Kit&lt;/h2&gt;
 &lt;p&gt;RC10B5&lt;/p&gt;
 &lt;/a&gt;
 &lt;a class="item item-thumbnail-left" href="#"&gt;
 &lt;img src="http://www.teamassociated.com/pictures/cars_and_trucks/SC10.2/Factory_Team/7038_md.jpg"&gt;
 &lt;h2&gt;1:10 Electric Truck Kit&lt;/h2&gt;
 &lt;p&gt;SC10.2&lt;/p&gt;
 &lt;/a&gt;
 &lt;a class="item item-thumbnail-left" href="#"&gt;
 &lt;img src="http://www.teamassociated.com/pictures/cars_and_trucks/Pro_Rally_4WD/RTR/ProRally_3Q_hero_md.jpg"&gt;
 &lt;h2&gt;1:10 Electric Rally RTR&lt;/h2&gt;
 &lt;p&gt;ProRally&lt;/p&gt;
 &lt;/a&gt;
 &lt;/div&gt;
 &lt;div class="spacer"&gt;&lt;/div&gt;&lt;!-- I added this because the footer covers up the lower part of the view. --&gt;
 &lt;/ion-content&gt;
 &lt;/ion-view&gt;
 &lt;/script&gt;
&lt;script id='grid.html' type='text/ng-template'&gt;&lt;!-- forms a single-page architecture page --&gt;
 &lt;ion-view title="Grid Page"&gt;&lt;!-- name in header for this page --&gt;
 &lt;ion-content padding="true"&gt;
 &lt;h2&gt;Grids&lt;/h2&gt;
 &lt;p&gt;Note: Actual grids do not come styled.&lt;/p&gt;
 &lt;h3&gt;Make these rows responsive&lt;/h3&gt;
 &lt;div class="row responsive-md"&gt;
 &lt;div class="col"&gt;.col 1&lt;/div&gt;
 &lt;div class="col"&gt;.col 2&lt;/div&gt;
 &lt;div class="col"&gt;.col 3&lt;/div&gt;
 &lt;div class="col"&gt;.col 4&lt;/div&gt;
 &lt;div class="col"&gt;.col 5&lt;/div&gt;
 &lt;/div&gt;
 &lt;h3&gt;Specify by percentage&lt;/h3&gt;
 &lt;div class="row" responsive-md&gt;
 &lt;div class="col col-50"&gt;specify 50%&lt;/div&gt;&lt;!-- 50 = 50&amp; --&gt;
 &lt;div class="col"&gt;not specified&lt;/div&gt;
 &lt;div class="col"&gt;not specified&lt;/div&gt;
 &lt;/div&gt;
 &lt;div class="row" responsive-md&gt;
 &lt;div class="col col-75"&gt;.col.col-75&lt;/div&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;/div&gt;
 &lt;div class="row" responsive-md&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col col-75"&gt;.col.col-75&lt;/div&gt;
 &lt;/div&gt;
 &lt;h3&gt; Align rows at top&lt;/h3&gt;
 &lt;div class="row row-top"&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col"&gt;1&lt;br&gt;2&lt;br&gt;3&lt;br&gt;4&lt;/div&gt;
 &lt;/div&gt;
 &lt;h3&gt; Align rows at center&lt;/h3&gt;
 &lt;div class="row row-center"&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col"&gt;1&lt;br&gt;2&lt;br&gt;3&lt;br&gt;4&lt;/div&gt;
 &lt;/div&gt;
 &lt;h3&gt; Align rows at bottom&lt;/h3&gt;
 &lt;div class="row row-bottom"&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col"&gt;.col&lt;/div&gt;
 &lt;div class="col"&gt;1&lt;br&gt;2&lt;br&gt;3&lt;br&gt;4&lt;/div&gt;
 &lt;/div&gt;
 &lt;div class="spacer"&gt;&lt;/div&gt;&lt;!-- I added this because the footer covers up the lower part of the view. --&gt;
 &lt;/ion-content&gt;
 &lt;/ion-view&gt;
 &lt;/script&gt;
 &lt;/body&gt;
 lt;/html&gt;</pre><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/ionic/'>Ionic</a>, <a href='https://iphonedevlog.wordpress.com/tag/ui/'>UI</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1350/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1350/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1350/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1350/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1350/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1350/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1350/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1350/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1350/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1350/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1350/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1350/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1350&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/07/17/using-the-ionic-framework-ui-elements/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/07/myapp-buttons.jpg" medium="image">
			<media:title type="html">myApp-buttons</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/07/myapp-grids.jpg?w=350" medium="image">
			<media:title type="html">myApp-grids</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/07/myapp-home.jpg?w=350" medium="image">
			<media:title type="html">myApp-home</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/07/myapp-lists.jpg?w=350" medium="image">
			<media:title type="html">myApp-lists</media:title>
		</media:content>
	</item>
		<item>
		<title>Updating and Reverting to Different Cordova PhoneGap Versions</title>
		<link>https://iphonedevlog.wordpress.com/2014/06/25/updating-and-reverting-to-different-cordova-phonegap-versions/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/06/25/updating-and-reverting-to-different-cordova-phonegap-versions/#comments</comments>
		<pubDate>Wed, 25 Jun 2014 16:35:29 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[revert PhoneGap]]></category>
		<category><![CDATA[revert to earlier phonegap version]]></category>
		<category><![CDATA[update PhoneGap]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1279</guid>
		<description><![CDATA[If you want to update your version of Cordova PhoneGap to the latest version, or you want to revert to an earlier version (to test or debug), here are the steps to follow. I also have instructions on updating the plugins and platform versions here. Resource: https://github.com/apache/cordova-docs/blob/master/docs/en/5.0.0/guide/cli/index.md Holly Schinsky wrote an article that explains more [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1279&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>If you want to update your version of Cordova PhoneGap to the latest version, or you want to revert to an earlier version (to test or debug), here are the steps to follow. I also have instructions on updating the plugins and platform versions here.</p>
<p>Resource:<br />
<a title="https://github.com/apache/cordova-docs/blob/master/docs/en/5.0.0/guide/cli/index.md" href="https://github.com/apache/cordova-docs/blob/master/docs/en/5.0.0/guide/cli/index.md" target="_blank">https://github.com/apache/cordova-docs/blob/master/docs/en/5.0.0/guide/cli/index.md</a></p>
<p>Holly Schinsky wrote an article that explains more about versions:<br />
<a href="http://devgirl.org/2014/11/07/cordovaphonegap-version-confusion/" target="_blank">http://devgirl.org/2014/11/07/cordovaphonegap-version-confusion/</a></p>
<p><span id="more-1279"></span></p>
<h2>Updating Cordova</h2>
<p>First check what version you are running. Run Terminal and type the following. (You don&#8217;t have to be within a project folder to do any of the steps in this article.)</p>
<pre>cordova -v</pre>
<p>If my output was:</p>
<pre>3.4.0</pre>
<p>. . . I could update to the latest version of Cordova PhoneGap via CLI by typing:</p>
<pre>npm update -g cordova</pre>
<p>(Or replace <strong>cordova</strong> with <strong>phonegap</strong>, whichever one you started out with.)</p>
<blockquote><p>If you get this output:</p>
<pre>npm http GET https://registry.npmjs.org/cordova
npm http 304 https://registry.npmjs.org/cordova</pre>
<p>. . . there was no update available.</p>
<p>If you get this error output:</p>
<pre class="p1">Please try running this command again as root/Administrator.</pre>
<p class="p1"> . . . try this in Terminal instead:</p>
<pre class="p1">sudo npm install -g cordova</pre>
</blockquote>
<p>(Updating cordova also updates its tools: cordova-libs, plugman, and cordova-js.)</p>
<p>Is it possible to revert to an earlier version? Yes. We can learn what versions we can update to (or revert to) with:</p>
<pre>npm info cordova</pre>
<p>To revert from 3.5.0 to 3.4.0, I would first type in the terminal:</p>
<pre>npm install -g cordova</pre>
<p>. . . then highlight an earlier version in the list:</p>
<pre>@3.4.1-0.1.0</pre>
<p>. . . and paste it at the end so it reads like the following, and hit Enter:</p>
<pre>npm install -g cordova@3.4.1-0.1.0</pre>
<p>Then verify the current install with:</p>
<pre>cordova -v</pre>
<blockquote><p>A. At one point I got the error in the console:</p>
<pre>4<span class="s1">04 Not Found: 5.0.0 </span></pre>
<pre class="p1"><span class="s1">'5.0.0' is not in the npm registry.</span></pre>
<p class="p1">My mistake was leaving out the &#8220;@&#8221; symbol in the command: cordova@3.4.1-0.1.0</p>
<p class="p1">B. Another time I got the error:</p>
<pre class="p1"><span class="s1">Error: EACCES, unlink '/usr/local/lib/node_modules/cordova/.npmignore'</span></pre>
<pre class="p1"><span class="s1">Please try running this command again as root/Administrator.</span></pre>
<p class="p1">So I ran the code with &#8220;sudo&#8221; in front like this, entered the unit&#8217;s Admin password, and it ran successfully:</p>
<pre class="p1">sudo npm install -g cordova@5.0.0</pre>
</blockquote>
<h2>Updating Plugins</h2>
<p>If you encounter issues with an individual plugin, by all means let your debugging include removing the plugin and adding it again. To do that, follow these steps:</p>
<p>a. In terminal, type the following to see the plugins installed.</p>
<pre>cordova plugin ls</pre>
<p>I got:</p>
<pre class="p1"><span class="s1">cordova-plugin-inappbrowser 1.1.1 "InAppBrowser"</span></pre>
<pre class="p1"><span class="s1">cordova-plugin-splashscreen 3.0.0 "Splashscreen"</span></pre>
<pre class="p1"><span class="s1">cordova-plugin-whitelist 1.2.0 "Whitelist"</span></pre>
<p class="p1">b. Highlight the plugin you want to remove, and copy it.</p>
<p>c. In terminal, type in the remove command and paste in the copied plugin (like this: <strong>cordova plugin rm org.apache.cordova.inappbrowser</strong>).</p>
<pre>cordova plugin rm</pre>
<p>d. To install again, type in the add command in the terminal, and paste in the copied plugin (like this: <strong>cordova plugin rm org.apache.cordova.inappbrowser</strong>).</p>
<pre>cordova plugin add</pre>
<p>Note that Cordova does not have a way to update plugins. If you know of an updated plugin, then you simply following the a, b, c steps above to install the new plugin version.</p>
<p>You can batch update plugins with rm and add like so:</p>
<pre>cordova plugin rm cordova-plugin-inappbrowser cordova-plugin-camera</pre>
<p>You can check which plugins are available with a search. For instance, to search for a bar code plugin:</p>
<pre>cordova plugin search bar code</pre>
<h2>Updating a Platform</h2>
<p>To update a particular platform (perform this command one at a time for each platform), do the following command. However, this will remove the entire /android folder, so <strong>all your images in /platforms/android/res/drawable* will be lost.</strong> Make sure you have backups of these images first, or simply copy the /res folder to your root directory.</p>
<p>To see what version of platform is installed, type:</p>
<pre class="p1"><span class="s1">cordova platform ?</span></pre>
<p class="p1">I got:</p>
<pre class="p1"><span class="s1">Installed platforms: android 4.1.1, ios 3.9.2</span></pre>
<pre class="p1"><span class="s1">Available platforms: amazon-fireos, blackberry10, browser, firefoxos, osx, webos</span></pre>
<p>To update the platform:</p>
<pre>cordova platform update android</pre>
<p>Also see <a href="http://cordova.apache.org/announcements/2015/08/04/cordova-ios-3.9.0.html" target="_blank">http://cordova.apache.org/announcements/2015/08/04/cordova-ios-3.9.0.html</a></p>
<pre>cordova platform update ios@3.9.0</pre>
<p>or:</p>
<pre>cordova platform add ios@3.9.0 --save</pre>
<h2>Updating Node and npm</h2>
<p>You&#8217;ll need to update Node and npm occasionally, especially if you are getting console errors that don&#8217;t seem to make sense.</p>
<p>In the console, check the version:</p>
<pre>node -v</pre>
<p>Visit the Nodejs site to check it against the latest stable version: <a href="https://nodejs.org/en/" target="_blank">https://nodejs.org/en/</a> Install the latest version; it will be a pkg file. Double-click on it to start the install process. It might require password access to your computer (Mac), so stick around to enter it.  When the process is done, it will tell  you (Mac):</p>
<pre class="p1">Node.js was installed at</pre>
<pre class="p1"><span class="Apple-converted-space">   </span>/usr/local/bin/node</pre>
<pre class="p1">npm was installed at</pre>
<pre class="p1"><span class="Apple-converted-space">   </span>/usr/local/bin/npm</pre>
<pre class="p1">Make sure that /usr/local/bin is in your $PATH.</pre>
<p class="p1">(This will also update npm.) Start a new console session and check the version as above.</p>
<p class="p1">If you get errors that are related to npm (such as <strong>Error: Cannot find module &#8216;semver&#8217;</strong>), then upgrade npm by itself:</p>
<pre class="p1"><span class="s1">sudo npm update -g</span></pre>
<p class="p1">This will require that you enter your password.</p>
<p>&nbsp;</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/revert-phonegap/'>revert PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/revert-to-earlier-phonegap-version/'>revert to earlier phonegap version</a>, <a href='https://iphonedevlog.wordpress.com/tag/update-phonegap/'>update PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1279/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1279/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1279/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1279/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1279/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1279/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1279/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1279/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1279/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1279/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1279/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1279/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1279&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/06/25/updating-and-reverting-to-different-cordova-phonegap-versions/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using Cordova CLI on Mac OS X to build iOS apps</title>
		<link>https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/#comments</comments>
		<pubDate>Tue, 24 Jun 2014 22:09:54 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[App Store]]></category>
		<category><![CDATA[app submission]]></category>
		<category><![CDATA[app transport security]]></category>
		<category><![CDATA[ATS]]></category>
		<category><![CDATA[copyPNGFile Error]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[dialogs plugin]]></category>
		<category><![CDATA[fastclick]]></category>
		<category><![CDATA[iap]]></category>
		<category><![CDATA[inAppBrowser]]></category>
		<category><![CDATA[Splashscreen API]]></category>
		<category><![CDATA[whitelist]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1273</guid>
		<description><![CDATA[This article gets you up to speed on how to integrate your HTML/CSS/JS app with PhoneGap/Cordova into an iOS app using a Mac and prepare it for App Store submission. Updated January 2016 for cordova 5.4.1. This article assumes you’ve already followed the steps on https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/ to: Download Node.js Add PATH statements to .profile In [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1273&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>This article gets you up to speed on how to integrate your HTML/CSS/JS app with PhoneGap/Cordova into an iOS app using a Mac and prepare it for App Store submission. <span style="color:#ff0000;">Updated January 2016 for cordova 5.4.1.</span> This article assumes you’ve already followed the steps on <a title="https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/" href="https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/" target="_blank">https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/</a> to:</p>
<p><strong>Download Node.js<br />
</strong><strong>Add PATH statements to .profile</strong></p>
<p>In this article, I am referencing Mac OS X Yosemite 10.10.5 and Xcode 6.3.1 on a Mac Mini. Cordova CLI 5.4.1 was installed. I am referencing “cordova” in the command-line interface, not “phonegap.” This project will not use the PhoneGap Build service. <em>Any updates to these programs may affect the following instructions.</em></p>
<p>Download Apple&#8217;s latest OS  and Xcode if you haven&#8217;t already:<br />
<a title="http://www.apple.com/osx/apps/app-store.html" href="http://www.apple.com/osx/apps/app-store.html" target="_blank">http://www.apple.com/osx/apps/app-store.html</a> <span id="more-1273"></span></p>
<p>Before you can install the app you create with PhoneGap on your device, you need to sign up as a Developer with Apple and go through the business documentation, Certificate Signing, Developer Certificate process, and more, all of which are detailed on Apple’s web site (<a title="https://developer.apple.com/programs/ios/" href="https://developer.apple.com/programs/ios/" target="_blank">https://developer.apple.com/programs/ios/</a>), under Prepare for App Submission. Nevertheless, you can skip all those steps and still see your work in the the iOS Simulator included with Xcode — you just won’t be able to view the app in your device or App Store. Xcode is a free download you can download now, but the Developer status comes at $99 a year.</p>
<p>Although you can develop the HTML/CSS/JS portion of an iPhone app on a Windows machine, you’ll still need a Mac with Xcode to convert the code to the binary that is uploaded to the App Store. You need a Mac to make iPhone apps. (PhoneGap Build can create this binary for you from your files, but you still need a Mac to download and install certain certificate files.)</p>
<p>If you are new to creating apps for the App Store, you’ll want to peruse the App Store Review and other Guidelines to make sure your app meets the rules: <a title="https://developer.apple.com/app-store/review/" href="https://developer.apple.com/app-store/review/" target="_blank">https://developer.apple.com/app-store/review/</a> You are strongly encouraged to make use of these documents before you start your project, lest you run afoul of Apple’s rules for what apps they will and will not allow in the App Store.</p>
<p>Cordova uses the command-line interface (CLI) to generate the files needed to start the project.  This article covers the creation of an app from CLI creation to upload binary to Apple.</p>
<ul>
<li>It&#8217;s a good idea to read the Cordova blog to see what updates may have come after I wrote this article: <a href="http://cordova.apache.org/blog/" target="_blank">http://cordova.apache.org/blog/</a></li>
<li>In addition, Jesse&#8217;s page may help with problems: <a href="https://github.com/jessemonroy650/top-phonegap-mistakes/blob/master/new-to-Phonegap.md" target="_blank">https://github.com/jessemonroy650/top-phonegap-mistakes/blob/master/new-to-Phonegap.md</a></li>
</ul>
<h2>Install Cordova CLI</h2>
<p>1. With Node.js installed, open the Terminal app by clicking on it in the dock at bottom and issue the following command:</p>
<pre>sudo npm install -g cordova</pre>
<p>Or update your installation with this article: <a href="https://iphonedevlog.wordpress.com/2014/06/25/updating-and-reverting-to-different-cordova-phonegap-versions/" target="_blank">https://iphonedevlog.wordpress.com/2014/06/25/updating-and-reverting-to-different-cordova-phonegap-versions/</a></p>
<blockquote><p>Pay attention to the inconsistencies in the early PhoneGap documentation between the use of “phonegap” and “cordova” in the command line. For instance, the Command-line Interface online page uses “phonegap” while the InAppBrowser API online page uses “cordova.” They are not interchangeable when using CLI. As seen in the above command, we are asking to download “cordova.” So we would replace all instances of “phonegap” in the documentation with “cordova,” or the command will generate a “not found”-type error.</p></blockquote>
<p>2. Give the root password and hit Enter. I got a series of ERR lines, ending with:</p>
<pre>npm ERR! not ok code 0</pre>
<p>I kept pasting the command and hitting Enter over and over until it completed (maybe three times). When successful, you should get a long list of lines beginning with “npm http,” then finally ending with a series of words containing the @ symbol and digit/dot pairings, terminating with your username at the end.</p>
<h2>Create Cordova Project Files with CLI</h2>
<p>1. Open a Finder window and select the folder you want to create your project’s folder inside of, such as /PhonegapApps<br />
2. Open the Terminal app (click on its icon in the dock below, or click on the magnifying glass at top right and type in “terminal”), type cd and a space (for “change directory”), drag the selected folder to the Terminal screen, let go, click on the Terminal to select it, then hit Return. This will orient all commands to that folder.</p>
<p>For this project, all of your commands will always begin with “cordova.” Some online tutorials and PhoneGap documentation will tell you to use “phonegap;” in that case, change it to “cordova” and it should work fine.</p>
<p>3. Type the following in the terminal:</p>
<pre>cordova create myApp</pre>
<p>Basic files are generated in the /myApp folder.</p>
<p>4. Enter the new folder you created in Terminal with the cd (change directory) command:</p>
<pre>cd myApp</pre>
<p>5. CLI only downloaded the skeleton files needed for all platforms. Now you need to download the specific files for iOS:</p>
<pre>cordova platform add ios</pre>
<p>6. Open the /myApp/platforms folder to see a new folder, /ios.</p>
<p>7. Cordova included several files for a default one-screen app, complete with splashscreen and icon. To build the default Cordova app, type:</p>
<pre>cordova build ios</pre>
<p>8. After a time, the Xcode file was built and saved as: myApp/platforms/ios/HelloWorld.xcodeproj. Double-click on this file to open it in Xcode.</p>
<blockquote><p>If you&#8217;re unfamiliar with the Xcode environment, read this paragraph. Otherwise, skip to the next one. When the Xcode screen comes on, look at the top and see a progress bar showing you the progress of the Open process. You&#8217;ll see a familiar Play triangle near the top left, a square Stop button, and to the right, the app name &gt; iPhone 6s Plus (which is the clickable name of the simulator or device &#8212; if you click on it you&#8217;ll get a list of devices to choose from). Below that at left is a string of small icons. You should click on all of them to get an idea of what information they hold. (Don&#8217;t worry &#8212; you won&#8217;t break anything doing so!) The far left icon is a file folder icon; click on it to see the app directory. If the app files are not showing, there is a drop-down triangle to the left of an icon that represents your Xcode app. You can click on the small triangle to view the project contents.</p></blockquote>
<p>9. Click on the Play triangle to view the project in the device simulator. The progress indicator at top keeps you apprised of the status. If you see a warning symbol with a number at right, it indicates potential problems. In that case, you may want to review this page to see if you missed something: <a href="https://github.com/jessemonroy650/top-phonegap-mistakes/blob/master/new-to-Phonegap.md" target="_blank">https://github.com/jessemonroy650/top-phonegap-mistakes/blob/master/new-to-Phonegap.md</a></p>
<p>An iPhone screen appears, showing a white Apple logo on a black screen. If it is too large to fit in your screen, click on Window &gt; Scale and an appropriate number, like 33%.  Below it is the progress bar. When it turns all white, you see the home screen. If the app does not launch automatically, then swipe the screen with your mouse until you see you app&#8217;s icon, then click on it.</p>
<p>If this is the default Cordova app, you&#8217;ll see a logo above the words APACHE CORDOVA with “Device is Ready” pulsing. This shows that the project is successfully showing the default index.html screen. Or if you had already replaced the default Cordova page with your own, your page would be seen.</p>
<p>10. Experiment. Try this with the iPhone simulator:<br />
a) Click on the simulator then on Hardware &gt; Device and choose among the available devices (they did not all work when I tried it).<br />
b) Click on Window &gt; Scale and resize the simulator (important if the entire simulator doesn&#8217;t fit in your window).<br />
c) With Edit &gt; Copy Screen you can grab it and possibly save for uploading as screenshots, if your screen and simulator sizes are large enough.<br />
d) Click on Debug &gt; Open System Log… to view the console output in separate windows. I personally did not find this information helpful.</p>
<p>11. In Xcode, click on the square Stop icon. The Simulator screen reverts to the device home screen with its icons. Click and hold on the app icon until it quivers, and an X appears. Confirm, then Hardware &gt; Home. I recommend you delete the icon before creating a new build lest errors pile up. Sometimes the old code is not fully overwritten with a new cordova build process.</p>
<p>12. When you make changes to the app and open it in Xcode, you&#8217;ll want to make sure to click on your app name in the left column, then check in the middle pane under Deployment Info &gt; Device Orientation that all relevant orientations have been checked. Also make sure that Devices shows iPhone, iPad, or Universal (for both device types).</p>
<blockquote><p><span style="color:#ff0000;">Dec. 2015:</span> There were many warnings in Xcode for CordovaLibs regarding stuff being deprecated in Cordova 3.9.2, including &#8216;whitelist&#8217; code. Am investigating this now&#8230;</p></blockquote>
<h2>Add the Whitelist Plugin</h2>
<p>This has been deprecated for platform ios 3.9.2. We don&#8217;t include the Cordova whitelist plugin for iOS9.</p>
<p>However, Apple is incorporating strict security protocols for iOS9 and beyond with their new Application Transport Security. They require that our app&#8217;s external connections go only to servers incorporating HTTPS and other security measures. If your app already connects only to URLs that begin with HTTPS, you are probably good to go (though there is more to it than that &#8212; see the resource link following).</p>
<p>But what if your connections go to HTTP and not HTTPS? What if you don&#8217;t have access to the HTTP servers to upgrade them to HTTPS? Then you&#8217;ll need to opt out of ATS by allowing all connections (or all connections with some exceptions; see the resource below).</p>
<p>In Xcode, open /Resources/xxx-info.plist. Click on the arrow for App Transport Security  Settings. You&#8217;ll see that Allow Arbitrary Loads has been set to YES, which means your app is inherently insecure; it will allow all connections, including HTTP. I believe this was set because in our config.xml we have the line <strong><span class="s1">&lt;access </span><span class="s2">origin</span><span class="s1">=</span><span class="s3">&#8220;*&#8221;</span></strong><span class="s1"><strong> /&gt;</strong>, which allows all connections. (The info.plist is populated by the information in config.xml.)</span></p>
<p>Resource:<br />
<a href="http://code.tutsplus.com/articles/apple-tightens-security-with-app-transport-security--cms-24420" target="_blank">http://code.tutsplus.com/articles/apple-tightens-security-with-app-transport-security&#8211;cms-24420</a></p>
<h2>Add the InAppBrowser Plugin</h2>
<p>Cordova has the ability to add more features to the app via plugins. Cordova does not automatically install every feature and that keeps the code footprint down. Plugins:  <a href="https://www.npmjs.com/search?q=ecosystem%3Acordova" target="_blank">https://www.npmjs.com/search?q=ecosystem%3Acordova</a></p>
<p>We’ll incorporate the InAppBrowser (IAB) API. The IAB allows us to open external URL links from within the app. Some developers would prefer this over the default of leaving the app and opening a web browser, shutting down the web browser when done, then restarting the app again. The IAB opens the link in its own frame, with a Done button bringing the user back into the app.</p>
<p>We first download the IAB as a plugin using CLI.</p>
<p>Resource:<br />
<a href="https://www.npmjs.com/package/cordova-plugin-inappbrowser" target="_blank">https://www.npmjs.com/package/cordova-plugin-inappbrowser</a></p>
<p><strong>Step I: download the plug-in</strong></p>
<p>1. Still in your project’s folder in Terminal, type the <strong>add</strong> command:</p>
<pre>cordova plugin add cordova-plugin-inappbrowser --save</pre>
<p>2. Verify that the plugin is installed with the <strong>ls</strong> (list) command:</p>
<pre>cordova plugin ls</pre>
<p><strong>Step II: add to the config.xml file</strong></p>
<p>1. Open the myApp/www/config.xml file in a text editor (I use TextWrangler). Before Cordova CLI 5.0.0, we had to add lines like the following, but no more:</p>
<pre>&lt;feature name="InAppBrowser"&gt;
 &lt;param name="ios-package" value="CDVInAppBrowser" /&gt;
&lt;/feature&gt;</pre>
<p>The &#8220;&#8211;save&#8221; command in step 1 wrote the Cordova plugin lines for you.</p>
<p>The config.xml page is one of the reasons CLI (command line interface) is so good. We add our platform-related information to that page rather than opening up page after page in the different platform SDKs. The SDKs use the information in config.xml to prepare its own platform version.</p>
<p>2. While we’re on that page, change the other sections:</p>
<p>a. Change the version=”0.0.1″ to the correct version, like version=”1.0.0.″ <em>When you fill out the fields for the app in the Apple dev site, you&#8217;ll put this in the version field, not &#8220;1.0,&#8221; or the app will not pass validation.</em><br />
b. Change the &lt;description&gt; line.<br />
c. Change the &lt;author&gt; section.<br />
d. Make sure the “widget id” is the name of your app in reverse domain style, like com.developername.myApp. <em>It needs to match up with the wording you put in the Apple dev site &#8212; the case must match or it will not pass validation.</em><br />
e. Change the &lt;name&gt; to be what you want under the icon on the device&#8217;s home screen. 11 characters or fewer, because the name won&#8217;t wrap if it&#8217;s too long. This will also change the .xcodeproj filename. Spaces are permitted.</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
<p><strong>Issue found when creating this article</strong></p>
<p>At first, the default project was called HelloCordova by Cordova in the config.xml &lt;name&gt;&lt;/name&gt; section, which I overwrote as myApp. Later I entered &#8220;My App&#8221; in &lt;name&gt;&lt;/name&gt; and later again changed it to &#8220;myApp&#8221; to investigated what changed in the build.</p>
<p>What happened in Xcode is that all those names are being remembered in the Xcode scheme – all except the current myApp. The HelloCordova and My App both default to Mac OS X in the scheme, and the only other selectable scheme is CordovaLib.</p>
<p>If you changed the &lt;name&gt; section and experience this problem, just remove the iOS platform with <strong>cordova platform rm ios</strong> in Terminal and add it back again with <strong>cordova platform add ios</strong> . That removed all the old data and started afresh. Note that this command will also remove all icons and splashscreen files too, and you&#8217;ll need to drag them back into Xcode the next time you do a <strong>cordova prepare ios</strong> or <strong>cordova build ios</strong>.</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
<span style="color:#ff0000;">3. Make sure all pages using a Cordova API reference has the following</span> in the &lt;head&gt; above all other .js references, and references cordova.js as being in the root folder. It needs to be on every page that uses a Cordova plugin. The lack of this part is one of the reasons why plugins fail:</p>
<pre> document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
 }
</pre>
<p>Cordova.js will be added to the /www folder whenever you do a <strong>cordova prepare</strong> or <strong>cordova build.</strong> Make sure your pages access that folder for cordova.js.</p>
<p>The entire top part of the page in my case is:</p>
<pre>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv="Content-Type"&gt;
&lt;meta content="minimum-scale=1.0, width=device-width, maximum-scale=1.0, user-scalable=no" name="viewport"&gt;
&lt;meta http-equiv="Content-Security-Policy" content="default-src 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; media-src *"&gt;
&lt;title&gt;
App Name
&lt;/title&gt;

&lt; script type="text/javascript" charset="utf-8" src="cordova.js"&gt;&lt;/script&gt; 
&lt; script&gt;
// Wait for Cordova to load
document.addEventListener("deviceready", onDeviceReady, false);
// Cordova is ready
function onDeviceReady() {
// navigator.splashscreen.show();
}
</pre>
<p><em>(WordPress no longer retains formatted script tags in the document that contain opening and closing angle brackets, but I was able to include them by inserting a space after an opening bracket like this: &lt; script. If you copy/paste the above, make sure you remove that space from two locations.)</em></p>
<p>Note the reference to cordova.js. This line must point to the www/ folder. If the page is in www/chapters/here.html, then you would add ../ for each folder away from www/; so in this case the line would read:</p>
<pre>&lt; script type="text/javascript" charset="utf-8" src="<span style="color:#ff0000;">../</span>cordova.js"&gt;&lt;/script&gt;</pre>
<blockquote><p>If you have questions about the <strong>&lt;meta http-equiv=&#8221;Content-Security-Policy&#8221; </strong>lines, please read these pages:</p>
<p><a href="http://www.raymondcamden.com/2015/05/25/important-information-about-cordova-5" target="_blank">http://www.raymondcamden.com/2015/05/25/important-information-about-cordova-5</a></p>
<p><a href="http://www.html5rocks.com/en/tutorials/security/content-security-policy/" target="_blank">http://www.html5rocks.com/en/tutorials/security/content-security-policy/</a></p>
<p><a href="http://content-security-policy.com/" target="_blank">http://content-security-policy.com/</a></p></blockquote>
<p>4. Now let’s test it. Open PhoneGap’s /myApp/www/index.html page and replace portions with the following lines in these inAppBrowser instructions: <a href="https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/" target="_blank">https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/</a><em><br />
</em></p>
<p>5. Save the page. Whenever you make a change to a project&#8217;s files, you must do the following steps before opening the project in Xcode. In Terminal:</p>
<pre>cordova prepare ios</pre>
<p>6. Double-click on the/myApp/platforms/ios/myApp.xcodeproj file to open it in Xcode, then Project &gt; Clean. That purges the old files and makes sure you have the current build. Then you Build and Run in the sim of your choice.</p>
<h2>Add the Dialogs Plugin (optional)</h2>
<p>I don&#8217;t like the default JavaScript alerts. The title of the alert gives the filename of the page, like index.html, rather than something nicer (or left empty). The Dialogs plugin gives us a few more options to customize the alert. See the resources for more options than the sample I&#8217;m giving below.</p>
<p>1. Still in your project’s folder in Terminal, type the add command for the plugin:</p>
<pre>cordova plugin add cordova-plugin-dialogs --save</pre>
<p>2. [removed]</p>
<p>3. Enter the following alert code above the &lt;/head&gt; line. The function confirmation() is the code for the alert that the button will pop up; function alertDismissed() is the code that will execute when the user taps the Done button in the alert:</p>
<pre>function alertDismissed() {
 // do something, like redirect to an external page, or do nothing
 window.open('https://iphonedevlog.wordpress.com', '_blank');
}</pre>
<pre>function confirmation() {
navigator.notification.alert(
 'Here is the alert!', // message
 alertDismissed, // callback (execute the above function of this name)
 'Your Title Here', // title
 'Done' // text of the close button
);
}
</pre>
<p>4. Add a button to execute the above confirmation() function. You can put this after the &lt;body&gt; line:</p>
<pre>&lt;button onclick="confirmation(); return false;" style="padding:1em; margin=1em; background-color:#ddd;"&gt;Pop the alert&lt;/button&gt;</pre>
<p>If you want more than one notification dialog on a page, then copy the above over and over for each dialog, but give each one different function and callback names to keep them unique for each one containing its own purpose.</p>
<h2>Add FastClick.js (optional)</h2>
<p>What does FastClick do? When you tap on a button or link, the system waits 300ms to see if you will tap again (a double-tap). If you don&#8217;t tap again within that 300ms period, then it assumes a single-tap and executes. FastClick removes this 300ms delay so your taps execute right away. All my buttons need single-tap only, so this is ideal.</p>
<p>Resource:<br />
<a title="https://github.com/ftlabs/fastclick" href="https://github.com/ftlabs/fastclick" target="_blank">https://github.com/ftlabs/fastclick</a></p>
<blockquote><p><span style="color:#ff0000;">You may not need to add this functionality.</span> See here: <a href="https://webkit.org/blog/5610/more-responsive-tapping-on-ios" target="_blank">https://webkit.org/blog/5610/more-responsive-tapping-on-ios</a> &#8220;&#8230;using meta tags with user-scalable=no or a minimum-scale equal to the maximum-scale, &#8230; WebKit removes the ability to double-tap on elements altogether. &#8230; viewports that have width=device-width will have fast single tapping when the user is at initial scale.&#8221;</p>
<p>&#8220;Putting touch-action: manipulation; on a clickable element makes WebKit consider touches that begin on the element only for the purposes of panning and pinching to zoom. This means WebKit does not consider double-tap gestures on the element, so single taps are dispatched immediately. Single taps on an element become fast when any of the element’s ancestors have the touch-action: manipulation. Note that putting touch-action: manipulation on any node opts all children of the node into the fast-tap optimization.&#8221;</p></blockquote>
<p>1. Go to the resource page above and right-click on the Minified link and save it to the hard drive with Save Link As&#8230; or similar, saving it as fastclick.js.<br />
2. Copy it to your /myApp/www folder.<br />
3. In all your pages where the file needs to be used, add above the &lt;/head&gt; line:</p>
<pre><a href="/path/to/fastclick.js">/path/to/fastclick.js</a></pre>
<p>Change /path/to/fastclick.js per page where needed so it points to the file.<br />
4. In all your pages where the file needs to be used, before the function onDeviceReady() line, add:</p>
<pre>window.addEventListener('load', function() {
 FastClick.attach(document.body);
}, false);</pre>
<p>If onDeviceReady() is not used on the page, enclose the above in tags and put it above the &lt;/head&gt; line. Now all your taps should result in a faster response time.<br />
5. Sometimes you&#8217;ll need FastClick to ignore certain elements. You can do this easily by adding the needsclick class:</p>
<pre>&lt;a href="index.html" class="needsclick"&gt;Ignored by FastClick&lt;/a&gt;</pre>
<p><strong>Please read the section below about the /Merges folder.</strong></p>
<h2>Add Your Icons</h2>
<p>Resources:<br />
<a href="http://cordova.apache.org/docs/en/latest/config_ref/images.html" target="_blank">http://cordova.apache.org/docs/en/latest/config_ref/images.html</a><br />
<a title="https://developer.apple.com/library/iOs/qa/qa1686/_index.html" href="https://developer.apple.com/library/iOs/qa/qa1686/_index.html" target="_blank">https://developer.apple.com/library/iOs/qa/qa1686/_index.html</a></p>
<blockquote><p>Here&#8217;s an automated way to generate your icons and splash screens: <a href="https://github.com/mmacmillan/cordova-imaging" target="_blank">https://github.com/mmacmillan/cordova-imaging</a></p></blockquote>
<p>You may have noticed that the Cordova icon appears on your home screen on your test device. Let’s replace it with your own.</p>
<p>1. Create PNG icons in these sizes and filenames. I suggest making a more detailed 180&#215;180 image and resize it down to 87&#215;87, and a less-detailed image and use that for the smaller sizes. Test and see what works for you. You can also use the free online service at <a title="http://makeappicon.com" href="http://makeappicon.com" target="_blank">http://makeappicon.com</a> to generate most of these sizes. Sizes not generated are the following:</p>
<p>icon-72@2x.png, 144&#215;144<br />
icon-40@3x.png, 120×120<br />
icon-50@2x.png, 100&#215;100<br />
icon-40@2x.png, 80x80px<br />
icon-50.png, 50&#215;50</p>
<p>You can open the icon-76@2x.png image in your image editor to make all the missing images. I used Pixelmater on my Mac mini (Image &gt; Image Size, then File &gt; Export.)</p>
<p><strong>iPhone (iOS 5,6 Spotlight)</strong><strong> (iOS 5-8 Settings)</strong></p>
<p>icon-small.png, 29&#215;29<br />
icon-small@2x.png, 58&#215;58<br />
icon-small@3x.png, 87&#215;87</p>
<p><strong>iPhone (iOS 7,8 Spotlight)</strong></p>
<p>icon-40.png, 40x40px<br />
icon-40@2x.png, 80x80px<br />
icon-40@3x.png, 120&#215;120</p>
<p><strong>iPhone (iOS 5,6)</strong></p>
<p>icon.png, 57&#215;57<br />
icon@2x.png, 114&#215;114</p>
<p><strong>iPhone (iOS 7,8)</strong></p>
<p>icon-60.png, 60&#215;60<br />
icon-60@2x.png, 120&#215;120<br />
icon-60@3x.png, 180&#215;180</p>
<p><strong>iPad (iOS 5-8 Settings)</strong></p>
<p>icon-small.png, 29&#215;29<br />
icon-small@2x.png, 58&#215;58<br />
icon-small@3x.png, 87&#215;87</p>
<p><strong>iPad (iOS 7,8 Spotlight)</strong></p>
<p>icon-40.png, 40x40px<br />
icon-40@2x.png, 80&#215;80<br />
icon-40@3x.png, 120&#215;120</p>
<p><strong>iPad (iOS 5,6 Spotlight)</strong></p>
<p>icon-50.png, 50&#215;50<br />
icon-50@2x.png, 100&#215;100</p>
<p><strong>iPad (iOS 5,6)</strong></p>
<p>icon-72.png, 72&#215;72<br />
icon-72@2x.png, 144&#215;144</p>
<p><strong>iPad (iOS 7,8)</strong></p>
<p>icon-76.png, 76&#215;76<br />
icon-76@2x.png, 152&#215;152</p>
<p>2. Place them in a new folder, /myApp/res/icon/ios.</p>
<p>3. In config.xml, we add the following.</p>
<pre>&lt;platform name="ios"&gt;&lt;!-- iPhone (iOS 5,6 Spotlight) (iOS 5-8 Settings) --&gt;
&lt;icon src="res/icon/ios/icon-small.png" width="29" height="29" /&gt;
&lt;icon src="res/icon/ios/icon-small@2x.png" width="58" height="58" /&gt;
&lt;icon src="res/icon/ios/icon-small@3x.png" width="87" height="87" /&gt;
&lt;!-- iPhone (iOS 7,8 Spotlight) --&gt;
&lt;icon src="res/icon/ios/icon-40@2x.png" width="80" height="80" /&gt;
&lt;icon src="res/icon/ios/icon-40@3x.png" width="120" height="120" /&gt;
&lt;!-- iPhone (iOS 5,6) --&gt;
&lt;icon src="res/icon/ios/icon.png" width="57" height="57" /&gt;
&lt;icon src="res/icon/ios/icon@2x.png" width="114" height="114" /&gt;
&lt;!-- iPhone (iOS 7,8) --&gt;
&lt;icon src="res/icon/ios/icon-60.png" width="60" height="60" /&gt;
&lt;icon src="res/icon/ios/icon-60@2x.png" width="120" height="120" /&gt;
&lt;icon src="res/icon/ios/icon-60@3x.png" width="180" height="180" /&gt;
&lt;!-- iPad (iOS 5-8 Settings) --&gt;
&lt;icon src="res/icon/ios/icon-small.png" width="29" height="29" /&gt;
&lt;icon src="res/icon/ios/icon-small@2x.copng" width="58" height="58" /&gt;
&lt;icon src="res/icon/ios/icon-small@3x.png" width="87" height="87" /&gt;
&lt;!-- iPad (iOS 7,8 Spotlight) --&gt;
&lt;icon src="res/icon/ios/icon-40.png" width="40" height="40" /&gt;
&lt;icon src="res/icon/ios/icon-40@2x.png" width="80" height="80" /&gt;
&lt;!-- iPad (iOS 5,6 Spotlight) --&gt;
&lt;icon src="res/icon/ios/icon-50.png" width="50" height="50" /&gt;
&lt;icon src="res/icon/ios/icon-50@2x.png" width="100" height="100" /&gt;
&lt;!-- iPad (iOS 5,6) --&gt;
&lt;icon src="res/icon/ios/icon-72.png" width="72" height="72" /&gt;
&lt;icon src="res/icon/ios/icon-72@2x.png" width="144" height="144" /&gt;
&lt;!-- iPad (iOS 7,8) --&gt;
&lt;icon src="res/icon/ios/icon-76.png" width="76" height="76" /&gt;
&lt;icon src="res/icon/ios/icon-76@2x.png" width="152" height="152" /&gt;<span style="line-height:1.5;"> &lt;/platform&gt;</span>
</pre>
<p>Remove any lines for sizes you are not providing. The list above matches exactly all the filenames listed above it.</p>
<p>4. Go to /platforms/ios/myApp/Resources/icons and delete all those standard Cordova icons. Replace them with your own. (The reason we make a myApp/res folder for our icons is in case we need to remove the ios platform and add it again. Removing the ios platform will also remove all those resources.)</p>
<p>6. We need to update the Assets Catalog for Xcode. In Terminal:</p>
<pre>cordova prepare ios</pre>
<p>7. Double-click on the /myApp/platforms/ios/myApp.xcodeproj file to open it in Xcode.</p>
<p>6. In Xcode: Product &gt; Clean. If it is grayed out, then got to Product &gt; New scheme&#8230; and call your new scheme myApp. Then it will show up in the scheme section. Now you can Product &gt; Clean.</p>
<p>7. Verify your icons are recognized. Click on the folder icon at upper left, then on myApp, if the myApp file structure is not already showing. Click on /Resources, thenon /icons. Click on a few of the icon filenames and watch as they appear to make sure they are yours.</p>
<h2>Add Your Launch Images (Splash Screens)</h2>
<p>Resources:<br />
<a href="http://cordova.apache.org/docs/en/latest/config_ref/images.html" target="_blank">http://cordova.apache.org/docs/en/latest/config_ref/images.html</a><br />
<a href="https://github.com/apache/cordova-plugin-splashscreen" target="_blank">https://github.com/apache/cordova-plugin-splashscreen</a></p>
<p>1. The splash screen (&#8220;launch screen&#8221; by Apple) is the image loaded before the app&#8217;s home screen appears. We add splash screen functionality with a plugin. In Terminal, making sure it starts within your myApp folder, add the plugin with:</p>
<pre>cordova plugin add cordova-plugin-splashscreen --save</pre>
<p>(To remove a plugin, type <strong>cordova plugin list</strong> and view the list of available plugins, then type <strong>cordova plugin rm</strong> and copy/paste the plugin line at the end ( like <strong>cordova plugin rm cordova-plugin-splashscreen</strong>), then hit Enter.)</p>
<p>2. Create new subfolders (&#8220;res&#8221; = resources): /myApp/res/screen/ios</p>
<p>3. Create your splash screens in the following sizes according to what devices you are supporting and add them to the above folder. I highly recommend using an image compression program on these files to keep the app size down, because all of the images will be ported over. Try <a title="http://compresspng.com" href="http://compresspng.com" target="_blank">http://compresspng.com</a>.</p>
<p>Launch images (portrait only shown):</p>
<p><strong><span style="color:#ff0000;"><a href="http://www.ios-developer.net/iphone-ipad-programmer/icons_and_graphics/default-image" target="_blank">NEW</a></span> iPhone Portrait, iOS 8</strong><br />
Retina HD 5.5 1242 x 2208): Default-414w-736h@3x-iphone.png<br />
Retina HD 4.7 (750 x 1334): Default-375w-667h@2x-iphone.png</p>
<p><strong>iPhone Portrait, iOS 7,8</strong><br />
Default-portrait@2x-iphone2x-640&#215;960.png<br />
Default-568h@2x-portrait-iphone-retina4-640&#215;1136.png</p>
<p><strong>iPad Portrait, iOS 7,8</strong><br />
Default-portrait-ipad1x-768&#215;1024.png<br />
Default-portrait@2x-ipad-1536&#215;2048.png</p>
<p><strong>iPhone Portrait, iOS 5,6</strong><br />
Default-portrait-iphone2x-320&#215;480.png<br />
Default-portrait@2x-iphone2x-640&#215;960.png<br />
Default-568h@2x-portrait-iphone-retina4-640&#215;1136.png</p>
<p><strong>iPad Portrait, iOS 5,6 (without status bar)</strong><br />
Default-portrait-ipad-768&#215;1004.png<br />
Default-portrait@2x-ipad-retina2x-1536&#215;2008.png</p>
<p>In my project, I am not using landscape images.</p>
<p>4. Add the following to our config.xml file above the &lt;/widget&gt; line.</p>
<pre>&lt;platform name="ios"&gt;
&lt;splash src="res/screen/ios/Default-portrait@2x-iphone2x-640x960.png" width="640" height="960"/&gt;
&lt;splash src="res/screen/ios/Default-568h@2x-portrait-iphone-retina4-640x1136.png" width="640" height="1136"/&gt;
&lt;splash src="res/screen/ios/Default-portrait-ipad1x-768x1024.png" width="768" height="1024"/&gt;
&lt;splash src="res/screen/ios/Default-portrait@2x-ipad-1536x2048.png" width="1536" height="2048"/&gt;
&lt;splash src="res/screen/ios/Default-portrait-iphone2x-320x480.png" width="320" height="480"/&gt;
&lt;splash src="res/screen/ios/Default-375w-667h@2x-iphone.png" width="750" height="1334"/&gt;
&lt;splash src="res/screen/ios/Default-414w-736h@3x-iphone.png" width="1242" height="2208"/&gt;
&lt;splash src="res/screen/ios/Default-portrait-ipad-768x1004.png" width="768" height="1004"/&gt;
&lt;splash src="res/screen/ios/Default-portrait@2x-ipad-retina2x-1536x2008.png" width="1536" height="2008"/&gt;
&lt;/platform&gt;</pre>
<p>Remove any lines for sizes you are not providing, such as the landscape images in my case.</p>
<p>4. Open your index.html page and change the <strong>document.addEventListener(&#8220;deviceready&#8221;, onDeviceReady, false);</strong> section so it reads like the following to turn off your splash screen when DeviceReady has fired:</p>
<pre> 
// Wait for device API libraries to load 
document.addEventListener("deviceready", onDeviceReady, false); 
// device APIs are available

function onDeviceReady() {
 navigator.splashscreen.hide();
}
</pre>
<p>5. [removed]</p>
<p>6. Go to /platforms/ios/myApp/Resources/splash and delete all those standard Cordova images. Replace them with your own from myApp/res/screen/ios. (The reason we make a myApp/res/screen/ios folder for our launch images is in case we need to remove the ios platform and add it again. Removing the ios platform will also remove all those resources.)</p>
<p>7. In Terminal:</p>
<pre>cordova prepare ios</pre>
<p>&nbsp;</p>
<p>8. Shut down Xcode if it is open. Double-click on the /myApp/platforms/ios/myApp.xcodeproj file to open it in Xcode.</p>
<p>9. In Xcode: Product &gt; Clean.</p>
<p>10. Verify your launch images are recognized. Click on the folder icon at upper left, then on myApp. click on the /Resources folder, then /splash. I see several files in red in that folder. Right-click on each red filename and Delete.</p>
<p>11. For the non-red files, right-click and Delete, Remove reference.</p>
<p>12. In Xcode, choose Product &gt; Clean.</p>
<p>13. In Xcode right-click on /splash and choose Add files.</p>
<p>14. Navigate to /platforms/ios/myApp/Resources/splash and choose all the images there.</p>
<p>15. Make sure Copy images if needed is checked, the hit Add. In Xcode, look at the contents of /Resources/splash. All your images should be there. Hit Product &gt; Clean again.</p>
<blockquote><p><strong>Images not updating?</strong> In a later update, I completely redid my icons. After following all the above steps, I found all of my <em>older </em>icons and launch images appearing in Xcode! So I performed a <strong>cordova platform rm ios</strong>, then <strong>cordova platform add ios</strong>, copied all the icons and launch images over as instructed above, ran <strong>cordova prepare ios</strong>, and double-clicked on the /myApp/platforms/ios/myApp.xcodeproj file to open it in Xcode. I chose to Use Asset Catalog as instructed above. All the new images appeared.</p></blockquote>
<p>16. Click on the Play triangle to view the project in the device simulator, if you wish.</p>
<h2>Test Your Own App in the Simulator</h2>
<p>Go ahead and replace the Cordova default files in /www with your own app project, if you have one. Remove the default folders CLI had created in the /www folder: /js, /css, /img. Put all your project assets there in /www.</p>
<p>1. In Terminal,</p>
<pre>cordova prepare ios</pre>
<p>2. Double-click on myApp.xcodeproj as before.</p>
<p>3. When Xcode opens, choose the scheme you want (which iPhone or iPad simulator you want to use). Watch carefully. Did you see your splash screen appear? Exit your app in the sim with Hardware &gt; Home. Do you see your myApp icon on the screen? Exit Xcode and the sim.</p>
<h2>Test the App in the Device</h2>
<p>1. To test the app in an iOS device, you have to be a paid Developer, then set up the online certificates for the device. Only after the certificates have been installed will Xcode recognize your device and add it to the scheme. Otherwise, the scheme will only show what&#8217;s available among the simulators.</p>
<p>You connect the device to the Mac and turn the device on; in Xcode, select the scheme for your device, then click on the Play triangle to build and run it. At lower right you can watch the Xcode console update with your app updates. If you don&#8217;t see the console, then go to View &gt; Debug Area &gt; Activate Console.</p>
<blockquote><p>After I clicked on Play, I got a Build Failed message at the top. I clicked on the triangle icon over the app name in the left column. It said, <strong>copyPNGFile Error.</strong> Clicking on that error opened the message more fully in the middle pane. I was complaining about not seeing two landscape launch images: /Default-Landscape@2x~ipad.png /Resources/splash/Default-Landscape@2x~ipad.png. I deliberately did not include these. To get rid of this error, do this.</p>
<p>1. In Xcode, click on the File icon over your app&#8217;s name in the left column.</p>
<p>2. Open Resources &gt; Splash in that column.</p>
<p>3. You should find names in red. Delete all of those files.</p>
<p>4. Right-click on file and select to Add files to the folder.</p>
<p>5. Select your screens from /platforms/ios/appName/Resources/splash. In Xcode, make sure Copy items if needed and your app icon are both checked. Click on Add.</p>
<p>6. Hold down Alt and click on Product &gt; Clean.</p>
<p>7. Click on the Play symbol and run the app in your device again.</p></blockquote>
<p>2. There&#8217;s a second way to run it in your device. When I plug in my device and type:</p>
<pre>cordova run ios</pre>
<p>. . . it creates the .dmg file and loads it onto my device. It leaves it up to me to tap the icon on the screen to start it up, unlike Xcode, which loads the app and opens to the app&#8217;s home page. I could not figure out how to quit the terminal process, so I used command-w to close the window.</p>
<h2>About the /myApp/merges Folder</h2>
<p>What if you need to use different versions of pages for different platforms? I needed the home page of my app to be different on Android and iOS. That’s what the /myApp/merges folder is for. The /myApp/merges/ios folder is the same as your /myApp/www folder, so I moved the index.html file to the /merges/ios folder. When I did a <strong>cordova platform add android,</strong> it created a /merges/android folder. I copied the index.html file there and made the changes for the Android version. So when I do a <strong>cordova build ios </strong>or<strong> cordova build android</strong> it will use the correct file for each build.</p>
<p><strong>FastClick.js is not used in some versions of Android.</strong> For this reason, I moved the fastClick.js file to /merges/ios, then copiedfastClick.js to /merges/android. I opened fastClick.js in /merges/android and deleted the contents, that way all the links in the html pages would not generate errors due to a missing file reference. It will access the file as normal, but being blank, will not actually do anything.</p>
<p>When styling links for YouTube in the InAppBrowser, onclick=&#8221;window.openwindow.open()&#8221; works in iOS to open a YouTube link in IAB but not in Android (it didn&#8217;t work in my Nexus 7). So I put differnt versions of those pages in /merges/android and /merges/ios, each page with its own link style:</p>
<p>iOS:</p>
<pre>&lt;a href="#" ontouchend="window.open('http://www.youtube.com/watch?v=nxP0wgBf6Zk', '_blank');"&gt;link&lt;/a&gt;</pre>
<p>Android:</p>
<pre>&lt;a href="http://www.youtube.com/watch?v=nxP0wgBf6Zk"&gt;link&lt;/a&gt;</pre>
<p>If you want to use the same iOS video code in both, then you&#8217;ll need to install Chromium&#8217;s <a href="https://iphonedevlog.wordpress.com/2015/06/08/implementing-crosswalks-chromium-webview-plugin-in-an-android-app/" target="_blank">Crosswalk</a> in the Android app.</p>
<p>For another use of the /merges folder, if you have a /www/css folder and want different style sheets for each app, just create a /css folder inside each /merges platform folder (like /myApp/merges/android/css) and put the css there instead of in a /myApp/www/css folder. That will style each platform differently according to your CSS files.</p>
<p>To quickly test this, simply move the /www/index.html file to its /merges/ios counterpart. Open the index.html file and add the following right after &lt;body&gt;:</p>
<pre>&lt;p&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2&gt;This index.html page is in the /platforms/merges/ios folder.&lt;/h2&gt;</pre>
<p>Go ahead and test in your device with <strong>cordova build ios</strong>. The above text should appear at the top of the screen.</p>
<h2>About the /myApp/hooks Folder</h2>
<p>If you open /myApp/hooks, you’ll see a readme text file there. That folder is for adding scripts that will execute as part of your CLI operation. For instance, you can add a before_build script which will automatically add all your plugins before the actual build commences. So each time you create a new app, you’ll copy/paste that file into the new app’s /hooks/before_build folder. I’m not familiar enough with this process to explain it here, but if you already know node.js scripting, you might look into it. For instance, this page gives the hooks steps for automatically creating app icons (requires installation of Homebrew and ImageMagick): <a title="https://github.com/AlexDisler/cordova-icon" href="https://github.com/AlexDisler/cordova-icon" target="_blank">https://github.com/AlexDisler/cordova-icon</a>. Other uses would be to add all the usual plugins.</p>
<h2>Test Your Code</h2>
<p>Ideally, you would have finished all these steps before you began testing your app, but I put them all down here so we could get the Cordova project up and running. I&#8217;m putting these steps here for completeness.</p>
<p>1. Double-check that your app meets the HIG (Human Interface Guidelines), the rules Apple uses to determine properly designed apps for the App Store. Link found in the iOS Dev Center online: <a title="https://developer.apple.com/devcenter/ios/index.action" href="https://developer.apple.com/devcenter/ios/index.action" target="_blank">https://developer.apple.com/devcenter/ios/index.action</a></p>
<p>2. Double-check that your app does not go afoul of these App Review Guidelines. Link found in the iOS Dev Center online: <a title="https://developer.apple.com/devcenter/ios/index.action" href="https://developer.apple.com/devcenter/ios/index.action" target="_blank">https://developer.apple.com/devcenter/ios/index.action</a></p>
<p>3. Make sure your HTML is valid. <a title="http://validator.w3.org/" href="http://validator.w3.org/" target="_blank">http://validator.w3.org/</a></p>
<p>4. Validate your Javascript. <a title="http://www.javascriptlint.com/online_lint.php" href="http://www.javascriptlint.com/online_lint.php" target="_blank">http://www.javascriptlint.com/online_lint.php</a></p>
<p>5. You may want to minify your JS. <a title="http://www.minifyjs.com/javascript-compressor/" href="http://www.minifyjs.com/javascript-compressor/" target="_blank">http://www.minifyjs.com/javascript-compressor/</a></p>
<p>6. Do image optimization/compression. <a title="http://imageoptim.com/" href="http://imageoptim.com/" target="_blank">http://imageoptim.com/</a></p>
<p>7. Remove the default folders CLI created in the /www folder: /js, /css, /img if you haven&#8217;t already.</p>
<p>8. Make sure all pages which use a Cordova API references this in the &lt;head&gt;:</p>
<pre>&lt; script type="text/javascript" charset="utf-8" src="cordova.js"&gt;&lt;/script&gt;

 
// Wait for device API libraries to load 
document.addEventListener("deviceready", onDeviceReady, false); 
// device APIs are available

function onDeviceReady() {

}

</pre>
<p>Don’t just copy/paste the above everywhere; change src=”cordova.js” to ../cordova.js or even ../../cordova.js, depending on the folder.</p>
<p>9. [Personal note] Don&#8217;t forget to add the JavaScript search function to the app: <a title="https://iphonedevlog.wordpress.com/2013/09/02/easily-add-search-functions-to-your-app/" href="https://iphonedevlog.wordpress.com/2013/09/02/easily-add-search-functions-to-your-app/" target="_blank">https://iphonedevlog.wordpress.com/2013/09/02/easily-add-search-functions-to-your-app/</a></p>
<h2>Update Cordova</h2>
<p>1. If you encounter issues with an individual plugin, by all means let your debugging include removing the plugin and adding it again. To do that, follow these steps:</p>
<p>a. In terminal: <strong>cordova plugin ls</strong> to see the plugins installed. Highlight the plugin you want to remove, and copy it.</p>
<p>b. In terminal: <strong>cordova plugin rm</strong> and paste in the copied plugin (like this: <strong>cordova plugin rm cordova-plugin-inappbrowser</strong>). Hit Enter.</p>
<p>c. To install again, in terminal: <strong>cordova plugin add</strong> and paste in the copied plugin (like this: <strong>cordova plugin rm <strong>cordova-plugin-</strong>inappbrowser</strong>). Hit Enter.</p>
<p>Note that Cordova does not have a way to update plugins. If you know of an updated plugin, then you simply following the a, b, c steps above to install the new plugin version.</p>
<p>2. If you need to update Cordova, then do this way:</p>
<pre class="prettyprint"><code><span class="pln">npm update </span><span class="pun">-</span><span class="pln">g cordova</span></code></pre>
<p>3. To update a particular platform (perform this command one at a time for each platform):</p>
<pre class="prettyprint"><code><span class="pln">cordova platform update ios</span></code></pre>
<h2>Add Screenshots for App Store</h2>
<p>The App Store requires a screenshot for each size of device your app supports. Images must be at least 72 dpi, in the RGB color space, and the file must be .jpeg, .jpg, .tif, .tiff, or .png. Choose up to 5.</p>
<p>iPhone 3+4 (3.5 Inch)<br />
640 x 960</p>
<p>iPhone 5 (4 Inch)<br />
640 x 1136</p>
<p>iPhone 6 (4.7 Inch)<br />
750 x 1334</p>
<p>iPhone 6 Plus (5.5 Inch)<br />
1242 x 2208</p>
<p>iPad (Air and Mini Retina)<br />
1536 x 2048</p>
<p>Here are a few ways to get screengrabs of your app.</p>
<p>I.<br />
1. Connect the device to your Mac.<br />
2. On the device, go to the screen you want to capture.<br />
3. In Xcode, choose Window &gt; Organizer, and click Devices to display the Devices organizer.<br />
4. In the Devices organizer, select Screenshots under the device.<br />
5. Click New Screenshot for each screen you want.</p>
<p>II.<br />
Or, to capture a screenshot on your device, you press the Lock and Home buttons simultaneously. Your screenshot is saved in the Saved Photos album in the iPhoto app.</p>
<p>III.<br />
If you don’t have a device, then you’ll need to do a screen grab of the pages in a browser and knit them together in an image editor. In the Mac, I use a combination of Chrome with Window Resizer extension, Grab screenshot maker app, and Pixelmater app.</p>
<p>1. I display a page in Chrome and zoom twice to enlarge the text</p>
<p>2. size the width correctly with Window Resizer</p>
<p>3. use Grab to get the &#8220;window&#8221; and then copy it</p>
<p>4. switch to Pixelmater and create a new file of the correct screengrab dimensions</p>
<p>5. paste the Grab view into Pixelmater</p>
<p>6. delete the unwanted top Chrome browser tab section</p>
<p>7. return to Chrome to scroll up and grab another screen to add to Pixelmater until the screen is filled up.</p>
<p>8. I export as png, saving the filename like screen4.7a-750&#215;1334.png so I know which screengrab goes where in iTunes Connect and what dimensions I made it, incrementing the &#8220;a&#8221; for separate screenshots. This is tedious work; do as many as you can, though, because this is what sells your work. Choose those screens that show off your app to its fullest!</p>
<h2>More about testing</h2>
<p><strong>iExplorer App</strong></p>
<p>This app lets you navigate your device&#8217;s folder on the desktop. This was good when I wanted to check if the camera shot a picture and what image name it was given. Good also to check the contents of a database. It&#8217;s free to use as a demo.</p>
<p>Resource:<br />
<a title="http://www.macroplant.com/iexplorer/" href="http://www.macroplant.com/iexplorer/" target="_blank">http://www.macroplant.com/iexplorer/</a></p>
<p class="entry-title"><strong>Desktop Safari Web Inspector</strong></p>
<p>Using the Safari browser, you can install your app on your iOS device and monitor its usage on your desktop monitor, including console feedback.</p>
<p>Resource:<br />
<a title="https://iphonedevlog.wordpress.com/2014/05/02/using-the-desktop-safari-web-inspector-to-debug-your-installed-app/" href="https://iphonedevlog.wordpress.com/2014/05/02/using-the-desktop-safari-web-inspector-to-debug-your-installed-app/" target="_blank">https://iphonedevlog.wordpress.com/2014/05/02/using-the-desktop-safari-web-inspector-to-debug-your-installed-app/</a></p>
<p><strong>Google Chrome Dev Tools</strong></p>
<p>Open Google Chrome, hit the hamburger options icon &gt; Tools &gt; Developer tools, and click on the mobile device icon. Select various devices from the drop-down menu to see your app in different device configurations.</p>
<p>Resource:<br />
<a title="http://blog.chromium.org/2014/09/responsive-web-design-with-devtools.html" href="http://blog.chromium.org/2014/09/responsive-web-design-with-devtools.html" target="_blank">http://blog.chromium.org/2014/09/responsive-web-design-with-devtools.html </a></p>
<p><strong>Other Ways to Test</strong></p>
<p>1. You can run the project in a web server via CLI (although you can’t test all the plugins this way):</p>
<pre>cordova prepare ios
cordova serve ios</pre>
<p>Open a web browser like Chrome or Firefox and paste the following into the URL field:</p>
<pre>http://localhost:8000</pre>
<p>Open Firebug or Developer tools, then click on the ios link. Run your code thoroughly to look for problems. When finished, click on the Terminal screen to select it, then on Control + C keys to terminate the server.</p>
<p>I noticed that Developer Tools could not find cordova.js using the cordova serve method. That file is created in the /platforms folder. So you can open platforms/ios/www/index.html in a browser to test.</p>
<p>2. For more testing possibilities, use the weinre (Web Inspector Remote) software at <a title="http://people.apache.org/~pmuellr/weinre/docs/latest/" href="http://people.apache.org/~pmuellr/weinre/docs/latest/" target="_blank">http://people.apache.org/~pmuellr/weinre/docs/latest/</a></p>
<p>3. Nice article: <a title="http://www.smashingmagazine.com/2014/09/03/testing-mobile-emulators-simulators-remote-debugging/" href="http://www.smashingmagazine.com/2014/09/03/testing-mobile-emulators-simulators-remote-debugging/" target="_blank">http://www.smashingmagazine.com/2014/09/03/testing-mobile-emulators-simulators-remote-debugging/ </a></p>
<h2>Xcode Settings for Deployment to App Store</h2>
<p>These are the settings to change in Xcode to produce the file you&#8217;ll upload to the App Store. You do these steps after setting up Development and Distribution provisional files online.</p>
<p>1. Double-click on your .xcodeproj file to open in Xcode.</p>
<blockquote><p>When double-clicking on xcodeproj name, I got this error: &#8220;Project /Users/Steve/Documents/app Name/platforms/ios/app Name.xcodeproj <strong>cannot be opened because the project file cannot be parsed.&#8221;</strong> Xcode did not like the space in the name where I put it in config.xml.<br />
<strong>a.</strong> I removed space in &lt;name&gt;&lt;/name&gt; in config.xml.<br />
<strong>b.</strong> cordova platform rm ios<br />
<strong>c.</strong> cordova platform add ios<br />
<strong>d.</strong> cordova prepare ios.<br />
<strong>e.</strong> Double-clicking on file opened it in Xcode normally.</p></blockquote>
<p>Click on the filename at far left. The pane at right updates and shows: PROJECT/MyApp and TARGETS/MyApp (that&#8217;s how I named it in config.xml &lt;name=). Click on PROJECT/MyApp, then on Build Settings. You should have these headings in blue: Basic, All, Combined, Levels. Below them is a series of bold headings.</p>
<p>2. For the Architectures heading, Base SDK, &#8220;Latest iOS&#8221; should be selected. This is the latest iOS version this version of Xcode supports.</p>
<p>3. Scroll down to the Code Signing, Debug and Release. To the right, the &#8220;iOS Developer&#8221; should be chosen for Debug and &#8220;iOS Distribution&#8221; selected for Release.</p>
<p>4. Now click on TARGETS/MyApp. Exactly the same selections should be made here as well. Under the Code Signing heading is Provisioning Profile. Choose Distribution provisioning profile in the drop-down.</p>
<p>5. Still under TARGETS/MyApp, click on the General link in the menu bar and read the selections to make sure they are correct. Scroll down and look at the listing of icons and make sure none are missing or wrong. Scroll down further and check out the launch images/splash screens and correct any missing or wrong images there.</p>
<p>6. Also, if you don&#8217;t have matching provisioning profiles, you&#8217;ll be alerted in this space, and a Fix Issue button will give you an opportunity to make amends.</p>
<p>7. Under iPhone, check off all the orientations your app will support. Do the same for the iPad button.</p>
<p>8. Click on &#8220;Requires full screen&#8221; if your app is not handling multitasking. If you don&#8217;t do this, you&#8217;ll get a fatal error when uploading your archive to the app store: &#8220;iPad Multitasking support requires launch story board in bundle &#8216;com.companyname.appname&#8217;.&#8221;</p>
<p>After a Product &gt; Clean, I ended up with two warnings.</p>
<p>For <strong>CordovaLib:</strong> &#8220;Update to recommended settings.&#8221; Double-clicking on the warning, I got a box with Build Settings checked and another for: Project &#8216;CordovaLib&#8217; &#8211; Turn on &#8216;Enable Testability&#8221; When Debugging. This will turn on &#8220;Enable Testability&#8221; for the &#8220;Debug&#8221; Configuration. Then you click on &#8220;Perform Changes.&#8221;</p>
<p>For <strong>appname.xcodeproj:</strong> &#8220;Update to recommended settings.&#8221; Double-clicking on the warning, I got a box with Build Settings checked and another for: Project &#8216;appName&#8217; &#8211; Turn on &#8216;Enable Testability&#8221; When Debugging. This will turn on &#8220;Enable Testability&#8221; for the &#8220;Debug&#8221; Configuration. And another checkbox for: Target &#8216;appName&#8217; &#8211; Adopt &#8220;Product Bundle Identifier&#8221; build setting. Target &#8216;appname&#8217; will have its info.plist&#8217;s CFBundleIdentifier key set to &#8220;$&#8221;PRODUCT_BUNDLE_IDENTIFIER)&#8221; build setting will be set to &#8220;com.companyname.appname&#8221;. Then you click on &#8220;Perform Changes.&#8221;</p>
<p>9. Go ahead and click on the other links in the menu bar to see what&#8217;s there.</p>
<h2>&#8220;Submit for Review&#8221;</h2>
<p>1. Fill out the Application Assets Template located here: <a title="http://wp.me/pyIb9-1o" href="http://wp.me/pyIb9-1o" target="_blank">http://wp.me/pyIb9-1o</a></p>
<p>2. You’ll need to go online to the Apple Developer site at <a href="http://developer.apple.com/" target="_blank">http://developer.apple.com/</a> (preferably using the Safari browser), sign in, and click on the iTunes Connect link. Click on Manage Your Applications and either Add New App, or choose an existing app to upgrade. Follow the steps online and transfer all the information into the fields from the Application Assets Template you just filled out, as well as the screengrabs you made.</p>
<p>Steps I took Jan. 2016 to upload a revised app:</p>
<ol>
<li>Opened Safari web browser (necessary for best experience with Apple).</li>
<li>Clicked on Member Center and signed in.</li>
<li>iTunes Connect, sign in again.</li>
<li>My Apps icon.</li>
<li>Select the app icon to update.</li>
<li>Clicked on + VERSION OR PLATFORM and chose iOS. Then enter the store version number you have in config.xml (&#8220;8.0&#8221;). Click Create.</li>
<li>Click on the screenshots tabs to make sure all are filled.</li>
<li>Add info in What&#8217;s New box.</li>
<li>Update any other information you see on the page. In Notes? you can write anything that will help the reviewer with checking your app.</li>
<li>At the bottom, check whether you want to release the app manually or as soon as it has been approved.</li>
<li>Click on Save at top. Leave this page open and go back to Xcode.</li>
<li>Unhook your device from the computer (if it was connected). Follow the next steps.</li>
</ol>
<h2>Upload a Binary to the App Store</h2>
<p>1. A binary of the app is the compiled version of the app that is made up of 0&#8217;s and 1&#8217;s. To compile your app for the App Store, first make sure your device is unconnected.<br />
2. If you made any last-minute changes to the PhoneGap project, do a <strong>cordova prepare ios</strong> command in a terminal window.<br />
3. In Xcode, do a Product &gt; Clean while holding down the option key.<br />
4. Then set Product &gt; Destination &gt; Generic iOS Device.<br />
5. Then do a Product &gt; Archive and wait for the app to build.<br />
6. The Organizer window should open (if it doesn&#8217;t: Window &gt; Organizer).<br />
7. Click on your app name in Organizer, make sure of the version, then click on Upload to App Store&#8230;<br />
8. Select a Dev Team for provisioning (I choose my name). Click Choose.<br />
9. Next screen will list myApp.app and Provisioning Profile. Check the PP and read below.</p>
<p>At this point, sometimes my PP is XC: and that&#8217;s not right. In that case, hit Cancel, right-click on the app name, and choose Delete Archive. Minimize Organizer, then in Xcode click on appName under PROJECT and under Code Signing you&#8217;ll need to select the correct Code Signing ID for Release, both rows. (It should not be iOS Developer.) Now go back to step 3 and try again.</p>
<p>Assuming your PP is correct, hit Submit. Do something else while the Archive is being uploaded.</p>
<p>If you get more errors, check out the Troubleshooting section of the App Distribution Guide by Apple: <a title="https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40012582-CH1-SW1" href="https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40012582-CH1-SW1" target="_blank">https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40012582-CH1-SW1</a></p>
<p>When finished, you&#8217;ll get a Submission Successful screen. Hit Done.</p>
<p>7. Now switch to your app&#8217;s page, scroll way down, and click on Build +. You&#8217;ll need to wait a while before it appears if your app is still processing. Select your app, then Done. You&#8217;ll get a &#8220;Processing&#8221; note at times in this box; just come back later and refresh the screen.</p>
<p>8. If you successfully hit Done, then scroll up and hit Save, then Submit for Review.</p>
<p>9. Answer the questions on the page and hit Submit. The status at upper left should now say Waiting For Review. You may now log off of the Apple site. At this point it&#8217;s a waiting game as Apple techs review your app. Apple will actually send you emails and notifications in your device on the changing status of your app. While waiting, you can perform the next few steps.</p>
<h2>Back up your files</h2>
<p>1. Open Keychain Access (click on the magnifier icon at top right of your desktop and type in “keychain” and select the app). Right-click on the certificates and export each one to your computer (giving each one a name similar to the name in the Keychain Access line), then send it off to a safe backup location. Warning: if these files are lost, you won’t be able to upload successive versions of your apps to the App Store.</p>
<p>2. Back up your password files. Go to /Users/[name]/Library/Keychains and copy the .keychain files there to a safe place. /Library is a hidden folder.</p>
<p>To show the hidden files, type in Terminal:</p>
<pre>defaults write com.apple.finder AppleShowAllFiles TRUE</pre>
<p>. . . and hit Return. Then type in Terminal:</p>
<pre>killall Finder</pre>
<p>. . . and hit Return. The desktop will go blank, then after a while will refresh. Open the Documents folder, then in Finder, Go &gt; Enclosing Folder, and see the hidden files in gray, including /Library.</p>
<p>To hide the hidden files, repeat both commands, but substitute FALSE in place of TRUE.</p>
<p>3. Now would be a good time to create a &#8220;snapshot&#8221; in Xcode of your work at this point in time (in Xcode, File &gt; Create Snapshot). A Snapshot is a copy of the project stored away. You’ll be able to revert to this version at a later date if you need to. If everything is working fine, then do a File &gt; Create Snapshot of your current working project.</p>
<p>You can delete these snapshots by going to Window &gt; Organizer, click on Projects at top, then on the project name at left. After clicking on a Snapshot, click on the Delete Snapshot icon at lower right. This will free up a lot of memory after you’re sure you will no longer need the earlier versions. If you need to revert to an earlier version (snapshot) of the project, you will first create a new folder in Finder, then click on the Restore Snapshot icon to save it to that folder. You’ll have two versions of the project; this way the reverted version will not overwrite the previous version.</p>
<h2>Further Recommended Steps</h2>
<p>If you are going to be involved with PhoneGap regularly, keep up to date with the release announcements of upcoming versions, updated plugins, and other news.</p>
<p>Familiarize yourself with the Cordova site: <a title="http://cordova.apache.org/" href="http://cordova.apache.org/" target="_blank">http://cordova.apache.org/</a></p>
<p>Read the PhoneGap Blog: <a title="http://phonegap.com/blog/" href="http://phonegap.com/blog/" target="_blank">http://phonegap.com/blog/</a></p>
<p>Subscribe to the PhoneGap Twitter feed: <a title="http://twitter.com/phonegap" href="http://twitter.com/phonegap" target="_blank">http://twitter.com/phonegap</a></p>
<p>Be friends on Facebook: <a title="http://www.facebook.com/PhoneGap" href="http://www.facebook.com/PhoneGap" target="_blank">http://www.facebook.com/PhoneGap</a></p>
<p>Join Google Groups: <a title="https://groups.google.com/forum/#!forum/phonegap" href="https://groups.google.com/forum/#!forum/phonegap" target="_blank">https://groups.google.com/forum/#!forum/phonegap</a></p>
<p>Credits:<br />
Mac®, OS X®, Apple®, Xcode®, App Store℠, iPad®, iPhone®, iPod® and Finder® are trademarks of Apple Inc.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/app-store/'>App Store</a>, <a href='https://iphonedevlog.wordpress.com/tag/app-submission/'>app submission</a>, <a href='https://iphonedevlog.wordpress.com/tag/app-transport-security/'>app transport security</a>, <a href='https://iphonedevlog.wordpress.com/tag/ats/'>ATS</a>, <a href='https://iphonedevlog.wordpress.com/tag/copypngfile-error/'>copyPNGFile Error</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/dialogs-plugin/'>dialogs plugin</a>, <a href='https://iphonedevlog.wordpress.com/tag/fastclick/'>fastclick</a>, <a href='https://iphonedevlog.wordpress.com/tag/iap/'>iap</a>, <a href='https://iphonedevlog.wordpress.com/tag/inappbrowser/'>inAppBrowser</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/splashscreen-api/'>Splashscreen API</a>, <a href='https://iphonedevlog.wordpress.com/tag/whitelist/'>whitelist</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1273/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1273/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1273/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1273/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1273/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1273/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1273/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1273/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1273/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1273/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1273/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1273/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1273&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using Cordova 5.0 CLI on Mac OS X to build Android apps</title>
		<link>https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/#comments</comments>
		<pubDate>Fri, 20 Jun 2014 23:05:31 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[proguard]]></category>
		<category><![CDATA[app submission]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[inAppBrowser]]></category>
		<category><![CDATA[Splashscreen API]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1261</guid>
		<description><![CDATA[This article gets you up to speed on how to integrate your HTML/CSS/JS app with PhoneGap/Cordova into an Android app using a Mac (however, most of these steps work for iOS too) and prepare it for App Store submission. This article assumes you’ve already followed the steps here to set up your environment: https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/ Note: I [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1261&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>This article gets you up to speed on how to integrate your HTML/CSS/JS app with PhoneGap/Cordova into an Android app using a Mac (however, most of these steps work for iOS too) and prepare it for App Store submission. This article assumes you’ve already followed the steps here to set up your environment: <a title="https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/" href="https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/" target="_blank">https://iphonedevlog.wordpress.com/2014/10/30/setting-up-your-developmemt-environment-for-cordovaphonegap-android-projects/</a> <em>Note: I no longer use Eclipse in my workflow.</em></p>
<p>In this article, I am referencing Mac OS X Yosemite 10.10.5 on a Mac Mini. Cordova CLI versions 3.5.0-4.0.0 were installed over the time this was written and revised. <span style="color:#ff0000;">Updated December 2015 for cordova 5.4.0.</span> I am referencing “cordova” in the command-line interface, not “phonegap.” This project will not use the PhoneGap Build service.<span id="more-1261"></span></p>
<p>PhoneGap/Cordova uses the command-line interface (CLI) to generate the files needed to start the project. However, one still needs to enter ADT + Eclipse (Android Development Tools) to create the program&#8217;s .apk file for uploading to Google Play.</p>
<p>This article covers the creation of an app from CLI creation to upload a final apk to Google Play.</p>
<ul>
<li>It&#8217;s a good idea to read the Cordova blog to see what updates may have come after I wrote this article: <a href="http://cordova.apache.org/blog/" target="_blank">http://cordova.apache.org/blog/</a></li>
<li>In addition, Jesse&#8217;s page may help with problems: <a href="https://github.com/jessemonroy650/top-phonegap-mistakes/blob/master/new-to-Phonegap.md" target="_blank">https://github.com/jessemonroy650/top-phonegap-mistakes/blob/master/new-to-Phonegap.md</a></li>
</ul>
<p>&nbsp;</p>
<h2>Create Cordova Project Files with CLI</h2>
<p>1. Open a Finder window and select the folder you want to create your project’s folder inside of, such as /PhonegapApps<br />
2. Open the Terminal app (click on its icon in the dock below, or click on the magnifying glass at top right and type in “terminal”), type cd and a space (for “change directory”), drag the selected folder to the Terminal screen, let go, click on the Terminal to select it, then hit Return. This will orient all commands to that folder.</p>
<p>For this project, all of your commands will always begin with “cordova.” Some online tutorials and PhoneGap documentation will tell you to use “phonegap;” in that case, change it to “cordova” and it should work fine.</p>
<p>3. Type the following in the terminal:</p>
<pre>cordova create myApp</pre>
<p>Basic files are generated in the /myApp folder.</p>
<p>4. Enter the new folder you created in Terminal with the cd (change directory) command:</p>
<pre>cd myApp</pre>
<p>5. CLI only downloaded the skeleton files needed for all platforms. Now you need to download the specific files for Android:</p>
<pre>cordova platform add android</pre>
<p>Open the myApp/platforms folder to see a new folder, /android.</p>
<p>Cordova included several files for a default one-screen app, complete with splashscreen and icon. To create a test apk file of the default Cordova PhoneGap app, type:</p>
<pre>cordova build android</pre>
<p>The apk file was built and saved as: myApp/platforms/android/ant-build/helloCordova-debug.apk</p>
<p>To run the apk on your device, you&#8217;ll need to go into your device&#8217;s Settings and enable for debugging. I have Google Drive installed on my Android device and computer. It&#8217;s a simple matter to copy the file toGoogle Drive on the computer, turn on my device, openGoogle Drive there, and select the apk file to download, install and run it. You&#8217;ll know it&#8217;s running correctly when you see &#8220;APACHE CORDOVA DEVICE IS READY&#8221; on the screen. This is faster than running it in the Eclipse emulator.</p>
<p>For subsequent versions of the app, I always run the Refresh command inGoogle Driveto make sure I&#8217;m referencing the latest version of the app.</p>
<p>If you have ADT + Eclipse installed, you can view your app on the computer after an abominably long waiting period. (Not recommended.) Type:</p>
<pre>cordova run android</pre>
<p>The app will build and Eclipse&#8217;s s-l-o-w emulator will run and display the default one-page Cordova app on the screen. If it never seems to load, shut down the emulator and terminal, and try both again.</p>
<p>If you only have one platform installed, you can shorten the command above to “cordova build” and “cordova emulate.” If you have more than one platform installed, &#8220;cordova build&#8221; will build each platform.</p>
<p>If you have an earlier cordova version installed (check with &#8220;cordova -v&#8221;), you can update to the latest version with:</p>
<pre>npm update -g cordova</pre>
<h2>About Cordova Serve</h2>
<p>We can also view the app in the browser with:</p>
<pre>cordova serve android</pre>
<p>I get this returned in the Terminal:</p>
<pre>Static file server running on port 8000 (i.e. http://localhost:8000)
CTRL + C to shut down</pre>
<p>I opened a browser and copied/pasted the above URL in and saw a screen of text. Android was underlined, so I clicked on that and the app startup screen appeared. I clicked on OK to get rid of the message info box (which pops up when the default screen is not showing in a mobile device). The message displayed was, “APACHE CORDOVA Connecting to Device.” That is correct behavior for the default Cordova app &#8212; the message won&#8217;t update because the desktop monitor is not a &#8220;device&#8221; to connect to.</p>
<p>This is a “static” file, meaning if you opened the html page, made a change, and saved it, refreshing the browser will not show the changes.</p>
<p>I clicked on the Terminal and then CTRL + C returned me to the prompt.</p>
<h2>Update the App Name</h2>
<p>You&#8217;ll notice that the apk name was not &#8220;myApp.&#8221; To rectify that, open the myApp/config.xml page in a text editor. Change the &lt;widget id= line to your reverse domain name or bundle identifier (Apple&#8217;s term), such as com.developerName.myApp. On the same line, put the correct version number, from 0.0.1 to 1.0.0, for instance.</p>
<p>Change &lt;name&gt;HelloCordova&lt;/name&gt; to your app&#8217;s name: &lt;name&gt;myApp&lt;/name&gt;.</p>
<p>Update the &lt;description&gt; and &lt;author&gt; information with your own.</p>
<p>Go ahead and replace the default Cordova resource files with your own. In other words, you can safely delete the /www/css, www/img, and /www/js folders. Replace the entire /www/ contents with your own HTML/CSS/JavaScript files and all other content files, like images and videos. (For this blog&#8217;s sake, I&#8217;m keeping the Cordova default app contents.)</p>
<p>When I did a <strong>cordova build android</strong>, the old name was still there. So I removed the android platform with the following code (WARNING: the entire /platforms/android folder and all its contents will be removed with this command, so if you have added any content like splashscreen images, you&#8217;ll want to copy them to another folder first):</p>
<pre>cordova platform rm android</pre>
<p>&#8230; then added it again with:</p>
<pre>cordova platform add android</pre>
<p>&#8230; and the new name appeared when I did a cordova build.</p>
<h2>Add a Cordova API plugin</h2>
<p>To implement Cordova features into your app, you&#8217;ll need to add the following to the head of the index.html page, as well as any page that uses Cordova APIs (application programming interface) such as InAppBrowser or SplashScreen:</p>
<pre>&lt;meta http-equiv="Content-Security-Policy" content="default-src 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; media-src *"&gt;</pre>
<pre>&lt; script type="text/javascript" src="cordova.js"&gt;&lt;/script&gt;
&lt; script&gt;</pre>
<pre>// Wait for device API libraries to load 
document.addEventListener("deviceready", onDeviceReady, false); 
// device APIs are available 
function onDeviceReady() { }
&lt;/script&gt;</pre>
<p><em>(WordPress no longer retains formatted script tags in a document that contains opening and closing angle brackets, but I was able to include them above by inserting a space after an opening bracket like this: &lt; script. If you copy/paste the above, make sure you remove that space from two locations.)</em></p>
<p>The cordova.js file will be added for you at build time; no need to add it manually.</p>
<blockquote><p>If you have questions about the <strong>&lt;meta http-equiv=&#8221;Content-Security-Policy&#8221; </strong>lines, please read these pages:</p>
<p><a href="http://www.raymondcamden.com/2015/05/25/important-information-about-cordova-5" target="_blank">http://www.raymondcamden.com/2015/05/25/important-information-about-cordova-5</a></p>
<p><a href="http://www.html5rocks.com/en/tutorials/security/content-security-policy/" target="_blank">http://www.html5rocks.com/en/tutorials/security/content-security-policy/</a></p>
<p><a href="http://content-security-policy.com/" target="_blank">http://content-security-policy.com/</a></p></blockquote>
<p>Note the reference to cordova.js. This line must point to the www/ folder. If the page is in www/chapters/here.html, then you would add ../ for each folder away from www/; so in this case the line would read:</p>
<pre>&lt; script type="text/javascript" charset="utf-8" src="<span style="color:#ff0000;">../</span>cordova.js"&gt;&lt;/script&gt;</pre>
<h2>Add the Whitelist Plugin</h2>
<blockquote><p><strong>Cordova 5.0.x adds this whitelist plugin for you. Check your plugins folder to see, and check your config.xml for the whitelist line. </strong></p></blockquote>
<p>This allows your external links (your links to ages outside of your app) to work. Supports the Android 4.0.0 plugin or above.</p>
<p>Resources:<br />
<a href="https://github.com/apache/cordova-plugin-whitelist" target="_blank">https://github.com/apache/cordova-plugin-whitelist</a></p>
<p>1. To install the whitelist plugin, make sure the Terminal shows the starting point as myApp, then type:</p>
<pre>cordova plugin add cordova-plugin-whitelist --save</pre>
<p>You&#8217;ll see it installed in /myApp/plugins</p>
<p>2. Open MyApp/config.xml and add:</p>
<pre>&lt;allow-intent href="http://*/*" launch-external="yes" /&gt;
 &lt;allow-intent href="https://*/*" launch-external="yes" /&gt;</pre>
<h2>Add the InAppBrowser Plugin</h2>
<p>Cordova adds extra functionality via plugins. Each plugin has its own code and must be downloaded separately. As an example of this process, we&#8217;ll load the InAppBrowser (IAB) plugin to the app. InAppBrowser enables external links in our app to remain in the app, otherwise an external link will take the user out of the app and open a browser. Then the user would need to exit the browser and reopen the app. The IAB will instead open a webView window to display the page, and a Done button (in iOS at bottom left) or an X (in Android at upper right) will close the window and return one to the app. The core Cordova plugins are here: <a title="http://plugins.cordova.io/#/" href="http://plugins.cordova.io/#/" target="_blank">http://plugins.cordova.io/#/</a></p>
<p>1. To install the IAB, make sure the Terminal shows the starting point as myApp, then type:</p>
<pre>cordova plugin add cordova-plugin-inappbrowser --save</pre>
<p>You&#8217;ll see it installed in /myApp/plugins</p>
<p>To see all available installed plugins, type:</p>
<pre>cordova plugin list</pre>
<p>2. <span style="color:#ff0000;">We no longer need to follow this step for Cordova CLI 5.0+. </span>Open /myApp/config.xml and add the following above the &lt;/widget&gt; line:</p>
<pre>&lt;feature name="InAppBrowser"&gt;
&lt;param name="android-package" value="org.apache.cordova.InAppBrowser" /&gt;
&lt;/feature&gt;</pre>
<p>3. Now we follow the instructions to style our links so they open in the IAB. For instance:</p>
<pre>&lt;a href="#" onTouchEnd="window.open('http://plugins.cordova.io/#/','_blank');"&gt; IAB with location bar (showing URL)&lt;/a&gt;</pre>
<p>4.  Open PhoneGap’s /myApp/www/index.html page and replace portions with the following lines in these inAppBrowser instructions: <a href="https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/" target="_blank">https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/</a><em><em><br />
</em></em></p>
<p>(For information about the &lt;meta http-equiv=&#8221;Content-Security-Policy&#8221; lines, please read <a title="http://www.raymondcamden.com/2015/05/25/important-information-about-cordova-5" href="http://www.raymondcamden.com/2015/05/25/important-information-about-cordova-5" target="_blank">this</a>.)</p>
<p>I edited the default Cordova project&#8217;s index.html page with the above page, typed <strong>cordova build android</strong> to build the apk, moved myApp-debug.apk to Google Drive, and opened it in my device. The screen shows several buttons, each one showing a different way to implement IAB, and what happens if you don&#8217;t use it. IAB works. Mission accomplished. Now you need to add the deviceready code to the top of all pages where you have external links, and make sure the links conform to the IAB link format.</p>
<h2>Update AndroidManifest.xml</h2>
<p>1. You’ll want to update myApp/platforms/android/AndroidManifest.xml with your permissions. Almost all of these are missing; <strong>enter ONLY what’s required for your app</strong> (the top one should already be there &#8212; if it weren&#8217;t, then the IAB would not have retrieved the page). You don&#8217;t need to update this page for the sample Cordova app.</p>
<pre>&lt;uses-permission android:name="android.permission.INTERNET"/&gt;
<span style="line-height:1.5;">&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/&gt;
</span>&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/&gt;
<span style="line-height:1.5;">&lt;uses-permission android:name="android.permission.CAMERA"/&gt;
</span>&lt;uses-permission android:name="android.permission.VIBRATE"/&gt;
<span style="line-height:1.5;">&lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/&gt;
</span>&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/&gt;
<span style="line-height:1.5;">&lt;uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS"/&gt;
</span>&lt;uses-permission android:name="android.permission.RECEIVE_SMS"/&gt;
<span style="line-height:1.5;">&lt;uses-permission android:name="android.permission.RECORD_AUDIO"/&gt;
</span><span style="line-height:1.5;">&lt;uses-permission android:name="android.permission.RECORD_VIDEO"/&gt;
</span><span style="line-height:1.5;">&lt;uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/&gt; 
</span>&lt;uses-permission android:name="android.permission.READ_CONTACTS"/&gt; 
&lt;uses-permission android:name="android.permission.WRITE_CONTACTS"/&gt; 
&lt;uses-permission android:name="android.permission.GET_ACCOUNTS"/&gt; 
&lt;uses-permission android:name="android.permission.BROADCAST_STICKY"/&gt;</pre>
<p>2. Update the version code as well if it’s more than version 1. VersionCode is what will display in the store; versionName is for your internal use and won’t be shown: android:versionCode=&#8221;10000&#8243; android:versionName=&#8221;1.0.0&#8243; [Note on format: &#8220;10000&#8221; = 1.00.00. Earlier versions of ADT accepted &#8220;android:versionCode=&#8221;1&#8221; but no longer.]</p>
<p>3. Make sure the following is accurate:</p>
<pre>package="com.developerName.myApp"</pre>
<p>4. Make sure the targetSdkVersion number is the latest API:</p>
<pre>android:targetSdkVersion="22" /&gt;</pre>
<p>5. Make sure the minSdkVersion is reasonable. Read this: <a href="http://developer.android.com/about/dashboards/index.html" target="_blank">http://developer.android.com/about/dashboards/index.html</a> If you want to support a version below 10% distribution, you might need to use an earlier version of the Cordova CLI. Sorry, I have no instructions on this.</p>
<pre>&lt;uses-sdk android:minSdkVersion="17"</pre>
<h2>Add Your Icon</h2>
<p>Resource:<br />
<a title="http://developer.android.com/design/style/iconography.html" href="http://developer.android.com/design/style/iconography.html" target="_blank">http://developer.android.com/design/style/iconography.html</a></p>
<blockquote><p><span style="color:#ff0000;">News Flash!</span> Here&#8217;s an automated way to generate your icons and splash screens: <a href="https://github.com/mmacmillan/cordova-imaging" target="_blank">https://github.com/mmacmillan/cordova-imaging</a></p></blockquote>
<p>You may have noticed that the Cordova icon appears on your home screen on your test device. Let&#8217;s replace it with your own.</p>
<p>1. Open /platforms/android and copy the /res folder to your root folder, making /myApp/res.</p>
<p>2. In config.xml just above the &lt;/widget&gt; line, put:</p>
<pre>&lt;platform name="android"&gt; 
 &lt;icon src="res/drawable-ldpi/icon.png" density="ldpi" /&gt;
 &lt;icon src="res/drawable-mdpi/icon.png" density="mdpi" /&gt;
 &lt;icon src="res/drawable-hdpi/icon.png" density="hdpi" /&gt;
 &lt;icon src="res/drawable-xhdpi/icon.png" density="xhdpi" /&gt;
 &lt;icon src="res/drawable-xxhdpi/icon.png" density="xxhdpi" /&gt;
 &lt;icon src="res/drawable-xxxhdpi/icon.png" density="xxxhdpi" /&gt;
&lt;/platform&gt;</pre>
<p>Note that Cordova does not provide all the folders that Android requests. So create the /xxhdpi and /xxxhdpi folders as shown and fill them with the following sizes of icons and splash screens. Leaving out these sizes will generate errors in Eclipse&#8217;s Android Tools &gt; Run Lint, if that matters to you.</p>
<p>Resource:<br />
<a title="http://developer.android.com/guide/practices/screens_support.html" href="http://developer.android.com/guide/practices/screens_support.html" target="_blank">http://developer.android.com/guide/practices/screens_support.html</a></p>
<p><strong>/drawable-xxdpi</strong> = icon.png, 144 x 144px (3x mdpi). splash.9.png, 1152 x 1536px.<br />
<strong>/drawable-xxxdpi</strong> = icon.png, 192 x 192px (4x mdpi). No splash.</p>
<p>3. Replace all the above stock Cordova icons in /myApp/res/drawables with your own. (This page gives all the icon sizes: <a title="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" href="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" target="_blank">https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/</a>)</p>
<blockquote><p>This free service works fine for generating all your icons from a single artwork: <a title="http://makeappicon.com/" href="http://makeappicon.com/" target="_blank">http://makeappicon.com/</a><em> (Must ignore the repeating ad popups!)</em> You simply drag a 512&#215;512 png icon to the screen and it immediately makes icons. Then click on the iOS or Android buttons to see the icons grouped individually for each platform. If you don&#8217;t trust giving them your email to send them to you, just right-click each icon and save to its proper place as icon.png (in Android, to the myApp/res/drawable folders).</p></blockquote>
<p>4. In addition, delete all the folders in both /res locations that don&#8217;t apply to your app &#8212; that you aren&#8217;t providing icons for. I&#8217;m talking about the &#8220;land&#8221; and &#8220;port&#8221; folders. Leave the ic_action*.png images in the /platform/android/res/drawable* folders &#8212; they are for the InAppBrowser plugin icons.</p>
<p>The above config.xml icon.png entries is using only four folders. If you are going to use more than four folders, then they should be listed in the config.xml file in the same format.</p>
<p>The reason I copy the /res folder to the root /myApp folder is to preserve the icons in case I need to remove the android platform and add it again. Removing the android platform means that the entire /platforms/android folder will be deleted, and all those icons and screens will be lost.</p>
<p>5. If your email links don&#8217;t open, try this fix in config.xml &#8212; it worked for me. After the &lt;access origin=&#8221;*&#8221; /&gt; line, add:</p>
<pre>&lt;access origin="mailto:*" launch-external="yes" /&gt;</pre>
<p>6. Go ahead and test in your device with <strong>cordova build android</strong>. After you exit the app, look for the app icon among the others and make sure the correct icon is showing. If a Cordova brand icon is shown, then delete all the icon.png files in the /myApp/platforms/android/res/drawable folders and test again. If it still doesn&#8217;t work, then just copy the /drawable folders over to the /platforms/android/res folder.</p>
<blockquote><p><strong>How do we install the app in the device?</strong> I install it in my device by installing Google Drive on my desktop and its corresponding app from Google Play in my device. I drag the CordovaApp-debug.apk file in Finder to theGoogle Drive window and wait until it finishes uploading. In my device, I open Google Drive and tap on the file. It downloads and asks if I want to install it. I accept, and tap again later to open and test.</p></blockquote>
<h2>Add Your Splash Screen</h2>
<blockquote><p><em>Please note that the splash screen functionality is finicky. Most of the times it works; sometimes I just can&#8217;t get the splash screens to show. When I can&#8217;t get it to work, I simply do without a splash screen. </em></p></blockquote>
<p>PhoneGap has a different method for adding splash screen images than they do for icons. The <em>icons</em> will be copied from the root /myApp/res folder into the /platforms/android/res folder programmatically at build time, but the <em>splash screen</em> images need to be added manually to the latter folder.</p>
<p>1. We add splashscreen functionality with a plugin. In Terminal, making sure it starts within your myApp folder, add the plugin with:</p>
<pre>cordova plugin add cordova-plugin-splashscreen --save</pre>
<p>(To remove a plugin in the future, type <strong>cordova plugin list</strong> and view the list of available plugins, then type <strong>cordova plugin rm</strong> and copy/paste the plugin line, like cordova-plugin-splashscreen, then hit Enter.) You&#8217;ll find a list of plugins already installed in /myApp/plugins.</p>
<p>2. Create your splash screens as 9-patch png images. For instructions on how to do this, see my article here:<br />
<a title="https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/" href="https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/" target="_blank">https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/</a></p>
<p><em>The size for each should be:</em><br />
xxlarge (xxhdpi): 1152 x 1536px.<br />
xlarge (xhdpi): at least 720 x 960 (Cordova used 720 x 1280)<br />
large (hdpi): at least 480 x 640 (Cordova used 480 x 800)<br />
medium (mdpi): at least 320 x 470 (Cordova used 320 x 480)<br />
small (ldpi): at least 200 x 320 (Cordova used 200 x 320)</p>
<p>There is no splash screen for the xxxhdpi folder.</p>
<p>3. In the Icons section above, I had you copy/paste the /platforms/android/res folder to the root /myApp folder, which created a /myApp/res folder. Add all your splash images to the /myApp/res/drawables folders. Delete their splash images and add your own and name each one as splash.9.png.</p>
<p>If you remove and add the Android platform (with <strong>cordova platform rm android</strong> and c<strong>ordova platform add android</strong>), you can simply copy the folders within /myApp/res and paste them into the other /res folder, overwriting the same-named /drawable folders and preserving the non-drawable folders that are needed (/values and /xml, for instance). <strong>Icon files are copied over automatically at build time; splash screen images are not!</strong> So you&#8217;ll need to copy the /drawable folders over any time you change your splash images.</p>
<p>4. In /www/config.xml, include above the &lt;/widget&gt; line:</p>
<pre>&lt;preference name="SplashScreen" value="splash" /&gt;&lt;!-- prefix of splashscreen's splash.png name --&gt;
&lt;preference name="SplashScreenDelay" value="2000" /&gt;&lt;!-- view for 2 seconds--&gt;</pre>
<p>(Note that with &#8220;org.apache.cordova.SplashScreen,&#8221; you should pay attention to case &#8212; it&#8217;s not all lowercase.)</p>
<p>5. In your index.html, add the <strong>navigator.splashscreen.hide();</strong> line here:</p>
<pre>document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
 navigator.splashscreen.hide();
}</pre>
<p>6. Highlight and copy your myApp/res/drawable folders and paste them into /myApp/platforms/android/res/. You should check that you are replacing them when the alert pops up asking if you want to replace.</p>
<p>7. Go ahead and test in your device with <strong>cordova build android</strong>. Make sure the splash screen shows before your app does. Make sure your icons are correct.</p>
<h2>What if you need to use different versions of pages for different platforms?</h2>
<p>a) I needed the home page of my app to be different on Android and iOS. That&#8217;s what the myApp/merges folder is for. The myApp/merges/android folder is the same as your myApp/www folder, so I moved the index.html file to the merges/android folder. When I did a <strong>cordova platform add ios</strong>, it created a merges/ios folder. I copied the index.html file there and made the changes for the iOS version. So when I do a <strong>cordova build ios </strong>or<strong> android</strong> it will use the correct file for each build.</p>
<p>b) When styling links for YouTube in the InAppBrowser, onclick=&#8221;window.openwindow.open()&#8221; works in iOS to open a YouTube link in IAB but not in Android (it didn&#8217;t work in my Nexus 7). So I put differnt versions of those pages in /merges/android and /merges/ios, each page with its own link style:</p>
<p>iOS:</p>
<pre>&lt; a href="#" onclick="window.open('https://www.youtube.com/watch?v=nxP0wgBf6Zk', '_blank');"&gt;</pre>
<p>Android:</p>
<pre>&lt; a href="https://www.youtube.com/watch?v=nxP0wgBf6Zk"&gt;</pre>
<p>The Android link did not appear in IAB, but that was fine &#8211; the user simply used the Back button to return to the app.</p>
<p>c) If you have a /www/css folder and want different style sheets for each app, just create a /css folder inside each merges platform folder (like myApp/merges/android/css/style.css) and put the css there instead of in the /myApp/www/css folder. That will style each platform differently according to your CSS files.</p>
<p>To quickly test this, create a /merges/android folder if you don&#8217;t have one and simply move the /www/index.html file there. Open the index.html file and add the following right after the button code we added earlier:</p>
<pre>This index.html page is in the /platforms/merges folder.</pre>
<p>Go ahead and test in your device with <strong>cordova build android</strong>. The above text should appear at the bottom of the screen.</p>
<h2>About the myApp/Hooks Folder</h2>
<p>If you open myApp/hooks, you&#8217;ll see a readme text file there. That folder is for adding scripts that will execute as part of your CLI operation. For instance, you can add a before_build script which will automatically add all your plugins before the actual build commences. So each time you create a new app, you&#8217;ll copy/paste that file into the new app&#8217;s /hooks/before_build folder. I&#8217;m not familiar enough with this process to explain it here, but if you already know node.js scripting, you might look into it. For instance, this page gives the hooks steps for automatically creating app icons (requires installation of Homebrew and ImageMagick): <a title="https://github.com/AlexDisler/cordova-icon" href="https://github.com/AlexDisler/cordova-icon" target="_blank">https://github.com/AlexDisler/cordova-icon</a>.</p>
<h2>Update Cordova</h2>
<p>1. If you encounter issues with an individual plugin, by all means let your debugging include removing the plugin and adding it again. To do that, follow these steps:</p>
<p>a. In terminal: <strong>cordova plugin ls</strong> to see the plugins installed. Highlight the plugin you want to remove, and copy it.</p>
<p>b. In terminal: <strong>cordova plugin rm</strong> and paste in the copied plugin (like this: <strong>cordova plugin rm cordova-plugin-inappbrowser</strong>). Hit Enter.</p>
<p>c. To install again, in terminal: <strong>cordova plugin add</strong> and paste in the copied plugin (like this: <strong>cordova plugin add cordova-plugin-inappbrowser &#8211;save</strong>). Hit Enter.</p>
<p>Note that Cordova does not have a way to update plugins. If you know of an updated plugin, then you simply following the a, b, c steps above to install the new plugin version.</p>
<p>2. If you need to update Cordova 3.x, then do this way:</p>
<pre class="prettyprint"><code><span class="pln">npm update </span><span class="pun">-</span><span class="pln">g cordova</span></code></pre>
<p>3. To update a particular platform (perform this command one at a time for each platform):</p>
<pre class="prettyprint"><code><span class="pln">cordova platform update android
</span></code></pre>
<h2>Build your App in ADT + Eclipse</h2>
<blockquote><p>I no longer use ADT + Eclipse to build my apps. I use the <a title="https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/" href="https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/" target="_blank">CLI method, </a>which is far faster than the steps that follow. So I skip &#8220;Build your App in ADT + Eclipse,&#8221; &#8220;Checking Your Work in Eclipse,&#8221; and &#8220;Sign the App.&#8221; Follow the steps in the link above, then skip down to continue the build.</p></blockquote>
<p>First check for updates to Eclipse and install them: Help &gt; Check for Updates. (You may be asked to update the SDK tools to a later version as well. Click on OK to do that.) The update process may take many minutes.</p>
<p>1. In terminal, type:</p>
<pre>cordova prepare android</pre>
<p>2. In Eclipse: File &gt; New &gt; Project . . .<br />
3. Then: Android &gt; Android Project from Existing Code &gt; Next (or Finish)</p>
<p><em>I followed these steps in a later version and the Finish button did nothing. If that happens, replace steps 1-3 with: File &gt; Import&#8230;, General &gt; Existing Projects into Workspace, Next. Now continue with step 4. </em></p>
<p>4. Click on Browse and select the Root Directory of the project, /myApp. The Root Directory field should then be filled in, and Project to Import will show “platforms/android” selected. Select &#8220;Copy projects into workspace&#8221; if you wish. Click Finish.</p>
<p>Anytime you make changes to your files and want to review them in Eclipse, always do <strong>cordova prepare android</strong> in terminal first, then Project &gt; Clean in Eclipse.</p>
<h2>Checking Your Work in Eclipse</h2>
<p>1. Let Eclipse check your work for errors. First click on Project &gt; Clean . . . and select myApp. The lower right of the window will show the progress. Use Project &gt; Clean between each of the following steps.</p>
<p>2. Window &gt; Open Perspective &gt; Java. Now right-click on your project name and select Validate. If it mentioned errors or warnings in a popup, then you can find those messages in Window &gt; Show View &gt; Problems. You can actually double-click on the lines and Eclipse will open to the page and line of the problem. Fix all those problems, Clean, and Validate again.</p>
<p>3. Right-click on your project name and select Android Tools &gt; Run Lint and fix those errors (showing a red circle with an X). Apps simply won&#8217;t build if there are errors. For instance, my error was: &#8220;Call requires API level 16 (current is 10).&#8221; Clicking on that line revealed notes in the right panel. To fix it, I needed to change the AndroidManifest.xml file line from &#8220;10&#8221; to &#8220;16&#8221; here: cordova prepare in terminal and Project &gt; Clean in Eclipse and ran Android Tools &gt; Run Lint again. The error was gone.</p>
<p>If you find other errors under Eclipse’s Lint Warnings tab, use this article to help deal with some of them: <a title="https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/" href="https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/" target="_blank">https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/</a></p>
<p>4. Right-click on your project name again, and select Run As &gt; Android Application. If you have a working emulator installed, then it will launch. Click on the Debug or DDMS tab in Eclipse at upper right and the Console will inform you of the steps it&#8217;s taking as it launches. Mine tells me I am launching a device with Android_18 installed. Soon you’ll see the home screen of the device with a lock in a circle. Slide the lock over and the app will launch, if all is well.</p>
<p>Then click on the Java tab in the upper right and click on the LogCat and Error Log screens at the bottom of the Eclipse environment and watch as it records what is happening in the emulator. If you don’t understand the errors, you can double-click on the line, then copy and paste it into Google for a search.</p>
<p>If you get this in the emulator before the app has even opened: “The application . . . has stopped unexpectedly. Please try again,” problems may exist in AndroidManifest.xml, because that has to be processed before the index.html file starts. One of the three parts of the “package=” line may be wrong. The name may have upper/lowercase inconsistencies.</p>
<p>If you get a “Failed to load properties file for android project” message in Eclipse when testing, right-click on the project name in Eclipse, select Android Tools &gt; Fix project properties, do a Clean, and see if that helps.</p>
<p>If you get in the Console tab: “Could not find appName.apk!” then this may help: Right-click on the project name in Eclipse, then on Properties. Select the latest Project Build Target, then click on OK. Restart Eclipse.</p>
<p>If you get lost among the log messages and want to get back to the key windows, go to Window &gt; Open Perspective &gt; Java.</p>
<p>5. You can choose among Android devices to target for testing. In menu bar at top use Run &gt; Debug Configurations &gt; Target tab to choose which Android API to test in the emulator. Click on the AVD Name then Debug. Create new AVDs with Window &gt; Android Virtual Device Manager. Resource: <a title="http://developer.android.com/tools/devices/managing-avds.html" href="http://developer.android.com/tools/devices/managing-avds.html" target="_blank">http://developer.android.com/tools/devices/managing-avds.html</a></p>
<p>6. Do remote debugging. That means you&#8217;ll try out the app in your device, but you&#8217;ll get the benefit of reading the log output on your desktop, specifically, the LogCat panel in Eclipse. You&#8217;ll need to add <strong>console.log(&#8220;message for output here&#8221;);</strong> within your JavaScript tags wherever you want to see console output appear. For instructions, follow: <a title="http://developer.android.com/tools/device.html" href="http://developer.android.com/tools/device.html" target="_blank">http://developer.android.com/tools/device.html</a></p>
<h2>Sign the App</h2>
<p>Apps in the app store must be “signed” with keys. Here are the steps to accomplish this. These steps create the “apk” file that is uploaded to the app store for purchasers’ download.</p>
<p>1. Right-click on the project name in Eclipse, then click on Android Tools &gt; Export Signed Application Package.<br />
2. “Project Checks” dialog:<br />
This screen will tell you if you have serious errors that need to be fixed before you can go further. If you have problems, copy the error into Google and search for resolutions if you are unfamiliar with these problems.<br />
3. “Keystore selection” selection dialog:<br />
Create the key using the app name, no spaces, ending in “.keystore”. WARNING: if this is an upgrade, use the same name as the earlier version! Browse to the location to save the keystore and in the same box give the name of the keystore. Back in the Keystore selection dialog, add the password twice and hit Next.<br />
4. Key [&#8220;Private Key&#8221;] Creation dialog:<br />
Alias: same as app_name, no spaces.<br />
password of keystore.<br />
validity: 50 [meaning, good for 50 years].<br />
First and Last name:<br />
Organizational unit: [division of company, or leave blank]<br />
Organization: [use no punctuation &#8211; only letters and numbers, or you&#8217;ll get an &#8220;keytool error&#8221; notice later.]<br />
City:<br />
State: [2-letter abbr. is fine.]<br />
Country: Look up here: <a title="http://www.worldatlas.com/aatlas/ctycodes.htm" href="http://www.worldatlas.com/aatlas/ctycodes.htm" target="_blank">http://www.worldatlas.com/aatlas/ctycodes.htm</a><br />
Destination APK file: This is the hard disk location where Eclipse will save the program’s .apk file that you will later upload to Google Play or other app store. Browse, then click Finish when done.</p>
<p>Write down the above Key Creation information, passwords, and APK destination and keep it safe for later retrieval and app updates. If it is lost, you can’t upgrade the app any further. To release the app after this file has been lost, you’ll have to create a whole new app and release it separately, making your customers ineligible for any updates.</p>
<p>Perhaps make a separate private key for each app, especially if you expect to sell the rights to an app to someone else. Save the keystore and apk files to a separate location for safety.</p>
<p>If you get: “keytool error: java.io.IOException: Incorrect AVA format,” then an invalid character was used in one of the previous screens. Solution: remove any punctuation so only letters, spaces, and numbers remain.</p>
<blockquote><p>NOTE: My build in May 2015, with cordova v5.0.0, had the apk output to /platforms/android/build/outputs/apk, which is a new set of folders.</p></blockquote>
<h2>Prepare Copy and Other Graphic Assets for App Store</h2>
<p>You’ll need this information on hand when filling out the form for apk submission within Google Play. Follow these steps:<br />
<a title="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" href="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" target="_blank">https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/</a></p>
<h2>Ready For Public Release</h2>
<p>Congratulations! You are now ready to show off your baby to the world!</p>
<p>To register as a Google Play developer and set up your publisher account, visit the Google Play publisher site: <a title="http://developer.android.com/index.html" href="http://developer.android.com/index.html" target="_blank">http://developer.android.com/index.html</a></p>
<p>My Helpful Links page gives a small listing of other sites where you can upload your apps. Visit <a title="https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/" href="https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/" target="_blank">https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/</a> and look under “App Stores.”</p>
<h2>Further Recommended Steps</h2>
<p>If you are going to be involved with PhoneGap regularly, keep up to date with the release announcements of upcoming versions, updated plugins, and other news.</p>
<p>PhoneGap Blog: <a title="http://phonegap.com/blog/" href="http://phonegap.com/blog/" target="_blank">http://phonegap.com/blog/</a></p>
<p>PhoneGap Twitter feed: <a title="http://twitter.com/phonegap" href="http://twitter.com/phonegap" target="_blank">http://twitter.com/phonegap</a></p>
<p>Facebook: <a title="http://www.facebook.com/PhoneGap" href="http://www.facebook.com/PhoneGap" target="_blank">http://www.facebook.com/PhoneGap</a></p>
<p>Join Google Groups: <a title="https://groups.google.com/forum/#!forum/phonegap" href="https://groups.google.com/forum/#!forum/phonegap" target="_blank">https://groups.google.com/forum/#!forum/phonegap</a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/category/proguard/'>proguard</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/app-submission/'>app submission</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/inappbrowser/'>inAppBrowser</a>, <a href='https://iphonedevlog.wordpress.com/tag/splashscreen-api/'>Splashscreen API</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1261/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1261/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1261/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1261/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1261/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1261/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1261/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1261/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1261/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1261/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1261/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1261/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1261&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Notes About Using PhoneGap Build</title>
		<link>https://iphonedevlog.wordpress.com/2014/06/10/notes-about-using-phonegap-build/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/06/10/notes-about-using-phonegap-build/#comments</comments>
		<pubDate>Tue, 10 Jun 2014 22:26:18 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[PhoneGap Build]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1250</guid>
		<description><![CDATA[This is not a tutorial, but a list of things a Cordova PhoneGap developer needs to know if he or she wants to start using PhoneGap Build (PGB). PGB will take your www/ assets and create the files needed for iOS, Android, and Windows devices. It doesn&#8217;t use native files, such as those ending in [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1250&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>This is not a tutorial, but a list of things a Cordova PhoneGap developer needs to know if he or she wants to start using PhoneGap Build (PGB). PGB will take your www/ assets and create the files needed for iOS, Android, and Windows devices. It doesn&#8217;t use native files, such as those ending in .h, .m, .java, etc.; the build may fail if these are included. What follows are the notes I took as I considered whether to use the service. Read this as a FAQ page for preparing an app for PGB. Curious as to whether PhoneGap Build is for you? Read on&#8230;</p>
<p><strong>Main site:</strong> <a title="https://build.phonegap.com/" href="https://build.phonegap.com/" target="_blank">https://build.phonegap.com/</a> <span id="more-1250"></span></p>
<p>If building for iOS, one needs a Mac with Xcode installed to convert the iPhone developer certificate to a P12 file. Of course, one needs a developer account at Apple to create the developer certificate.</p>
<p>You don&#8217;t need to download the individual platform software development kits (SDKs), such as ADT+Eclipse for Android; however, you&#8217;ll want to use them to debug your programs in their emulators if you don&#8217;t have devices at hand for testing.</p>
<p>PhoneGap Build supports <strong>a maximum project size of 15MB.</strong> If you have a paid Creative Cloud account or a monthly paid subscription then the <strong>maximum project size is 40MB. </strong>These limits will be a deal-breaker for many. (They limit it to 40MB to allow for plugins and framework overhead.) <span style="color:#ff0000;">12/10/2014 <a title="http://phonegap.com/blog/2014/12/09/phonegap-build-new-features/" href="http://phonegap.com/blog/2014/12/09/phonegap-build-new-features/" target="_blank">update:</a></span> The new limits are 50MB for free tier users, 100MB for standalone users and 1GB for Creative Cloud subscribers.</p>
<p>PGB is free to use for one &#8220;private&#8221; Github repo, or for any number of &#8220;public&#8221; Github repos. Pricing start with more than 1 private app: <a title="https://build.phonegap.com/" href="https://build.phonegap.com/" target="_blank">https://build.phonegap.com/</a>plans (Not sure I am understanding the &#8220;25&#8221; correctly as a limit of apps on the linked Plans page.)</p>
<p>If you&#8217;ve been using PhoneGap already, then these are extra things to pay attention to:</p>
<p style="text-align:center;">*    *    *</p>
<p>1. You&#8217;ll need to format your phonegap.js or cordova.js script tag like this:<br />
&lt;script src=&#8221;phonegap.js&#8221;&gt;&lt;/script&gt;<br />
or<br />
&lt;script src=&#8221;cordova.js&#8221;&gt;&lt;/script&gt;</p>
<p>2. When you&#8217;ve finished with checking your project and are ready to submit it to PGB, you&#8217;ll need to remove the cordova.js or phonegap.js file you&#8217;ve been using, as Build will automatically inject it during compile time, changing it for each platform as necessary. You&#8217;ll keep the script tags in place in your index.html page, though.</p>
<p>3. At the time of this writing, Cordova has just released v3.4.0, and PGB supports from 3.0 to 3.4 (according to the PGB blog). Apps for 2.9.0 will need to be updated to the CLI version.</p>
<p>4. PGB uses its own version of Cordova plugins. The plugins may not work across all platforms. It&#8217;s up to the developer to test each one. Each plugin needs to be imported, the &lt;gap:plugin&gt; code for each needs to be added to config.xml, and JavaScript code needs to be added to the pages where the plugin is used. (Script links to any plugin&#8217;s JavaScript files should be present in your HTML files, but the JavaScript files themselves must be removed from your app before uploading to build. The files are present only for debugging/testing, then removed before upload to PGB.)</p>
<p><span style="color:#ff0000;">12/10/2014 update:</span> &#8220;In addition to the over 600 plugins currently available on PhoneGap Build we are now allowing users to use plugins from the Official Cordova Plugin Repository (<a title="http://plugins.cordova.io" href="http://plugins.cordova.io" target="_blank">http://plugins.cordova.io</a>). This includes access to cordova core plugins the minute they are released!&#8221;</p>
<p>More:<br />
<a title="http://docs.build.phonegap.com/en_US/configuring_plugins.md.html#Plugins" href="http://docs.build.phonegap.com/en_US/configuring_plugins.md.html#Plugins" target="_blank">http://docs.build.phonegap.com/en_US/configuring_plugins.md.html#Plugins</a><br />
<a title="http://phonegap.com/blog/2014/12/09/phonegap-build-new-features/" href="http://phonegap.com/blog/2014/12/09/phonegap-build-new-features/" target="_blank">http://phonegap.com/blog/2014/12/09/phonegap-build-new-features/</a><br />
Plugins repository:<br />
<a title="https://build.phonegap.com/plugins" href="https://build.phonegap.com/plugins" target="_blank">https://build.phonegap.com/plugins</a></p>
<p>5. You&#8217;ll add much more information to the config.xml file than usual. You&#8217;ll need to read each of these pages to make sure nothing is missing:<br />
<a title="http://docs.build.phonegap.com/en_US/configuring_basics.md.html" href="http://docs.build.phonegap.com/en_US/configuring_basics.md.html" target="_blank">http://docs.build.phonegap.com/en_US/configuring_basics.md.html</a><br />
<a title="http://docs.build.phonegap.com/en_US/configuring_preferences.md.html#Preferences" href="http://docs.build.phonegap.com/en_US/configuring_preferences.md.html#Preferences" target="_blank">http://docs.build.phonegap.com/en_US/configuring_preferences.md.html#Preferences</a><br />
<a title="http://docs.build.phonegap.com/en_US/configuring_config_file_element.md.html#Config%20File%20Elements" href="http://docs.build.phonegap.com/en_US/configuring_config_file_element.md.html#Config%20File%20Elements" target="_blank">http://docs.build.phonegap.com/en_US/configuring_config_file_element.md.html#Config%20File%20Elements</a><br />
<a title="http://docs.build.phonegap.com/en_US/configuring_icons_and_splash.md.html#Icons%20and%20Splash%20Screens" href="http://docs.build.phonegap.com/en_US/configuring_icons_and_splash.md.html#Icons%20and%20Splash%20Screens" target="_blank">http://docs.build.phonegap.com/en_US/configuring_icons_and_splash.md.html#Icons%20and%20Splash%20Screens</a><br />
<a title="http://docs.build.phonegap.com/en_US/configuring_custom_urls.md.html#Custom%20URL%20Schemes" href="http://docs.build.phonegap.com/en_US/configuring_custom_urls.md.html#Custom%20URL%20Schemes" target="_blank">http://docs.build.phonegap.com/en_US/configuring_custom_urls.md.html#Custom%20URL%20Schemes</a></p>
<p>6. The config.xml and index.html files must be in the root of the project folder. (The config.xml file is already at the root in a PG/Cordova project.) Not sure whether the index.html file can reside in both places.</p>
<p>7. You&#8217;ll create a folder for icons and splashscreens and place a special, empty .pgbomit file in it. The &#8220;omit&#8221; file will help make sure the correct image files are present in each platform. We don&#8217;t want iOS splashscreens and icons in our Android platform! Instructions:<br />
<a title="http://www.joshmorony.com/using-phonegap-builds-pgbomit-to-drastically-reduce-file-size/" href="http://www.joshmorony.com/using-phonegap-builds-pgbomit-to-drastically-reduce-file-size/" target="_blank">http://www.joshmorony.com/using-phonegap-builds-pgbomit-to-drastically-reduce-file-size/</a></p>
<p>8. For Android, one must generate a signing key/keystore via the <a title="Signing an Android Apk Without Eclipse (in Mac OS X)" href="https://iphonedevlog.wordpress.com/2014/10/29/signing-an-android-apk-apart-from-eclipse-in-mac-os-x/" target="_blank">command-line interface in Terminal.</a> (It&#8217;s the same information you use when creating a signing key in Eclipse.) When the app is submitted to PGB, that keystore number must be submitted with it. The steps are here:<br />
<a title="http://docs.build.phonegap.com/en_US/signing_signing-android.md.html#Android%20Signing" href="http://docs.build.phonegap.com/en_US/signing_signing-android.md.html#Android%20Signing" target="_blank">http://docs.build.phonegap.com/en_US/signing_signing-android.md.html#Android%20Signing</a></p>
<p style="text-align:center;">*    *    *</p>
<p>PGB has identified many common problems with uploads. Read this page carefully to catch them before uploading to PGB:<br />
<a title="http://docs.build.phonegap.com/en_US/support_failed-builds.md.html#Failed%20Builds" href="http://docs.build.phonegap.com/en_US/support_failed-builds.md.html#Failed%20Builds" target="_blank">http://docs.build.phonegap.com/en_US/support_failed-builds.md.html#Failed%20Builds</a></p>
<p>PGB doesn&#8217;t test your code for correctness. You&#8217;ll need to do all your HTML, CSS, and JS validation and debugging, minifying your JS files, compressing your graphics, removing debug console.log code and alerts, and so on, before submitting your work.</p>
<p>To use the Adobe PhoneGap Build service after your app files are complete, you must first sign in with your Adobe ID or Github account or register. At that point the service is ready to receive your project either as a Github repository or a .zip file. (No need to sign in or register until your project is ready to upload.)</p>
<p>Some of the PGB docs are out of date. (For instance, one doc says PGB accepts up to PhoneGap v3.1.0, when it now accepts v3.4.0.) To stay up to date, subscribe to their blog and Twitter feeds. The Twitter feed will let you know about plugin updates and other news.<br />
blog: <a title="http://phonegap.com/blog/phonegap-build/" href="http://phonegap.com/blog/phonegap-build/" target="_blank">http://phonegap.com/blog/phonegap-build/</a><br />
Twitter: <a title="https://twitter.com/phonegapbuild" href="https://twitter.com/phonegapbuild" target="_blank">https://twitter.com/phonegapbuild</a><br />
Other support: <a title="http://docs.build.phonegap.com/en_US/support_getting_help.md.html#Getting%20Help" href="http://docs.build.phonegap.com/en_US/support_getting_help.md.html#Getting%20Help" target="_blank">http://docs.build.phonegap.com/en_US/support_getting_help.md.html#Getting%20Help</a></p>
<p>Any hints or tips for PG developers to consider when using today&#8217;s PGB? Put them in the comments.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap-build/'>PhoneGap Build</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1250/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1250/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1250/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1250/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1250/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1250/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1250/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1250/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1250/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1250/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1250/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1250/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1250&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/06/10/notes-about-using-phonegap-build/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>App testing with the PhoneGap Developer App &#8212; see your changes instantly without re-building!</title>
		<link>https://iphonedevlog.wordpress.com/2014/05/02/app-testing-with-the-phonegap-app-see-your-changes-instantly-without-re-building/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/05/02/app-testing-with-the-phonegap-app-see-your-changes-instantly-without-re-building/#comments</comments>
		<pubDate>Fri, 02 May 2014 22:09:22 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Android debugging]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1221</guid>
		<description><![CDATA[With this software, you can develop your app on the desktop, then see the changes instantly on your mobile device. There&#8217;s no need to re-sign, re-compile, or reinstall your app to test your code. You&#8217;ll have access to the device APIs that aren&#8217;t available in web browsers. Let&#8217;s give it a spin! For more info: http://phonegap.com/blog/2014/04/23/phonegap-developer-app/  [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1221&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>With this software, you can develop your app on the desktop, then see the changes instantly on your mobile device. There&#8217;s no need to re-sign, re-compile, or reinstall your app to test your code. You&#8217;ll have access to the device APIs that aren&#8217;t available in web browsers. Let&#8217;s give it a spin!</p>
<p>For more info:<br />
<a title="http://phonegap.com/blog/2014/04/23/phonegap-developer-app/" href="http://phonegap.com/blog/2014/04/23/phonegap-developer-app/" target="_blank">http://phonegap.com/blog/2014/04/23/phonegap-developer-app/</a> <span id="more-1221"></span></p>
<h2>PhoneGap Developer App Setup</h2>
<p>1. This article assumes you already have a fully functioning PhoneGap environment, including Node.js. If not, please look elsewhere on this site for full installation instructions.</p>
<p>2. In Terminal, install the phonegap software:</p>
<pre>sudo npm install -g phonegap</pre>
<p>3. Download and install the mobile app to your test device (search for &#8220;Developer App&#8221;):<br />
iOS: <a title="https://itunes.apple.com/app/id843536693" href="https://itunes.apple.com/app/id843536693" target="_blank">https://itunes.apple.com/app/id843536693</a><br />
Android: <a title="https://play.google.com/store/apps/details?id=com.adobe.phonegap.app" href="https://play.google.com/store/apps/details?id=com.adobe.phonegap.app" target="_blank">https://play.google.com/store/apps/details?id=com.adobe.phonegap.app</a></p>
<p>4. In Terminal, change directories to the directory you want to hold your project. (Type cd in the terminal, drag the containing folder to the terminal screen, click anywhere in the terminal screen to activate it, and hit Enter.) Create your app:</p>
<pre>phonegap create myApp</pre>
<p>5. Change to your project&#8217;s directory:</p>
<pre>cd myApp/</pre>
<p>6. Start mirroring the app on your device:</p>
<pre>phonegap serve</pre>
<p>7. Open your PhoneGap app in the device. (The following steps will work only if your computer and device were on the same network. In my case at work, IT kept them separate for security reasons. So after the screen appeared in the device, I get ERROR! and TIMED OUT! messages.)</p>
<p>8. Note the server address in the Terminal, tap the server address box in the PhoneGap app, and type it in. Then tap Connect on the device. You should see &#8220;Connecting&#8230;&#8221; flash, then your app&#8217;s home screen appear.</p>
<p>9. Go back to your assets and make changes. In this case, replace the text in the &lt;h1&gt;&lt;/h1&gt; tag in the index.html page, and save. Back in the device, tap the screen with four fingers to update.</p>
<h2>Reporting Problems</h2>
<p>This app is still under development. If you find any problems, post them here (requires registration):</p>
<p><a title="https://github.com/phonegap/phonegap-app-developer/issues" href="https://github.com/phonegap/phonegap-app-developer/issues" target="_blank">https://github.com/phonegap/phonegap-app-developer/issues</a></p>
<h2>Updating</h2>
<p>You can update to the latest version with:</p>
<pre><code>npm update -g phonegap</code></pre>
<h2>Phonegap Help</h2>
<p>Typing &#8220;phonegap help&#8221; in the terminal gives these available commands and options:</p>
<pre>Usage: phonegap [options] [commands]

Description:

PhoneGap command-line tool.

Commands:

create &lt;path&gt; create a phonegap project
 serve serve a phonegap project
 build &lt;platform&gt; build a specific platform
 install &lt;platform&gt; install a specific platform
 run &lt;platform&gt; build and install a specific platform
 local [command] development on local system
 remote [command] development in cloud with phonegap/build
 platform [command] update a platform version
 plugin [command] add, remove, and list plugins
 help [command] output usage information
 version output version number

Options:

-d, --verbose allow verbose output
 -v, --version output version number
 -h, --help output usage information

Platforms:

keyword | local environment | remote environment
 -------------------|---------------------|-------------------
 android | Yes | Yes
 ios | Yes | Yes
 wp8 | Yes | Yes
 Blackberry 10 | Yes | No

Examples:

$ phonegap help create
 $ phonegap help remote build
 $ phonegap create path/to/my-app
 $ phonegap remote build android</pre>
<p>Typing &#8220;phonegap help remote&#8221; in the terminal returns:</p>
<pre>Usage: phonegap remote [command]

Description:

Executes the command remotely using the cloud-based PhoneGap/Build service.

Commands:

login login to PhoneGap/Build
logout logout of PhoneGap/Build
build &lt;platform&gt; build a specific platform
install &lt;platform&gt; install a specific platform
run &lt;platform&gt; build and install a specific platform

Examples:

$ phonegap remote login
$ phonegap remote build android
$ phonegap remote run android</pre><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/android-debugging/'>Android debugging</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1221/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1221/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1221/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1221/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1221/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1221/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1221/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1221/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1221/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1221/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1221/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1221/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1221&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/05/02/app-testing-with-the-phonegap-app-see-your-changes-instantly-without-re-building/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using the Desktop Safari Web Inspector to Debug Your Installed iOS App</title>
		<link>https://iphonedevlog.wordpress.com/2014/05/02/using-the-desktop-safari-web-inspector-to-debug-your-installed-app/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/05/02/using-the-desktop-safari-web-inspector-to-debug-your-installed-app/#respond</comments>
		<pubDate>Fri, 02 May 2014 20:40:04 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Tips]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1217</guid>
		<description><![CDATA[&#160; You can install your app on your iOS device and monitor its usage on your desktop monitor, including console feedback. Here&#8217;s how. 1. Install your app on the iOS device. Make sure the device is plugged into your Mac. (Web Inspector is available on iOS 6.0 and later.) 2. In your iOS device (I&#8217;m [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1217&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>&nbsp;</p>
<p>You can install your app on your iOS device and monitor its usage on your desktop monitor, including console feedback. Here&#8217;s how.<span id="more-1217"></span></p>
<p>1. Install your app on the iOS device. Make sure the device is plugged into your Mac. (Web Inspector is available on iOS 6.0 and later.)</p>
<p>2. In your iOS device (I&#8217;m using an iOS 6.1 iPod touch), open the Settings app, navigate through Safari &gt; Advanced, and turn on Web Inspector. Exit the Settings app.</p>
<p>3. Open the app in the device.</p>
<p>4. On the computer, start the Safari web browser.</p>
<p>5. Open Safari &gt; Preferences.</p>
<p>6. Under Advanced, check the box for &#8220;Show Develop menu in menu bar.&#8221; Exit Prefs.</p>
<p>7. Click on Develop in the menu bar when it appears.</p>
<p>8. The name of the device should appear in the list. Tapping on it should show the name of the app opened in the device. (If not, go to User Agent in the desktop Safari and choose what your device has.)</p>
<p>9. Tap on the index link mentioned in the previous step. The Web Inspector appears. If you run your mouse over the lines on the page, the DOM, you should see matching sections of the page in the device be shaded.</p>
<p>10. Go ahead and interact with the app in the device and watch the information update on the desktop. Click on the tabs in the Web Inspector menu bar. If you have console.log messages, they and any errors and warnings should appear in the Console window.</p>
<p>11. Exiting the app will shut down the Web Inspector.</p>
<p>For more information about using this tool, see:<br />
<a title="https://developer.apple.com/library/safari/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Introduction/Introduction.html" href="https://developer.apple.com/library/safari/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Introduction/Introduction.html" target="_blank">https://developer.apple.com/library/safari/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Introduction/Introduction.html</a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/category/tips/'>Tips</a>  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1217/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1217/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1217/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1217/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1217/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1217/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1217/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1217/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1217/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1217/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1217/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1217/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1217&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/05/02/using-the-desktop-safari-web-inspector-to-debug-your-installed-app/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Installing Chris Brody&#8217;s SQLite Database with Cordova CLI (Android)</title>
		<link>https://iphonedevlog.wordpress.com/2014/04/07/installing-chris-brodys-sqlite-database-with-cordova-cli-android/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/04/07/installing-chris-brodys-sqlite-database-with-cordova-cli-android/#comments</comments>
		<pubDate>Mon, 07 Apr 2014 20:57:30 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Chris Brody]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[Javascript]]></category>
		<category><![CDATA[SQL]]></category>
		<category><![CDATA[SQLite]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1198</guid>
		<description><![CDATA[The HTML5 SQLite spec results in a database with a limit of 5MB. Chris Brody&#8217;s SQLitePlugin, however, breaks this barrier. Here is how to implement it. These steps assume you&#8217;ve already created the Cordova project and are adding this database project to it. I recommend you build for v19.  If you just want a simple [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1198&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>The HTML5 SQLite spec results in a database with a limit of 5MB. Chris Brody&#8217;s SQLitePlugin, however, breaks this barrier. Here is how to implement it. These steps assume you&#8217;ve already created the Cordova project and are adding this database project to it. I recommend you build for v19.</p>
<p><em> If you just want a simple prepopulated DB, <a title="Prepopulated Database with TaffyDB for iOS and Android with Cordova" href="https://iphonedevlog.wordpress.com/2015/01/07/prepopulated-database-with-taffydb-for-ios-and-android-with-cordova/">try this article instead.</a></em><span id="more-1198"></span></p>
<p><strong>My development environment:<br />
</strong>Mac OS X 10.9.1 on latest Mac Mini<br />
Cordova CLI 3.4.0<br />
for Android 4.3, 4.4 v19<br />
Testing in device: Android-19, Nexus 7 with 4.3<br />
Not for PG Build; no Jquery or other JS or CSS packages used</p>
<p><strong>Cordova-SQLitePlugin:<br />
</strong><a title="https://github.com/brodysoft/Cordova-SQLitePlugin" href="https://github.com/brodysoft/Cordova-SQLitePlugin" target="_blank">https://github.com/brodysoft/Cordova-SQLitePlugin</a></p>
<p><strong>Benefits:</strong><br />
<a title="http://brodyspark.blogspot.in/2012/12/cordovaphonegap-sqlite-plugins-offer.html" href="http://brodyspark.blogspot.in/2012/12/cordovaphonegap-sqlite-plugins-offer.html" target="_blank">http://brodyspark.blogspot.in/2012/12/cordovaphonegap-sqlite-plugins-offer.html</a></p>
<p><strong>Google Groups forum:</strong><br />
<a title="https://groups.google.com/forum/#!forum/Cordova-SQLitePlugin" href="https://groups.google.com/forum/#!forum/Cordova-SQLitePlugin" target="_blank">https://groups.google.com/forum/#!forum/Cordova-SQLitePlugin</a></p>
<p><strong>Create a Cordova  or PhoneGap project (if you&#8217;re new):</strong><br />
<a title="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" href="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" target="_blank">https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/<br />
</a></p>
<h2>Installation</h2>
<p>This article assumes you&#8217;ve already created a project and added the Android platform to it (cordova create app, cd myapp, cordova platform add android).</p>
<p>1. Create subfolder structure under platforms/android/src/ as:</p>
<p>platforms/android/src/android/org/pgsqlite/</p>
<p>2. Visit the plugin site on Github at <a title="https://github.com/brodysoft/Cordova-SQLitePlugin" href="https://github.com/brodysoft/Cordova-SQLitePlugin" target="_blank">https://github.com/brodysoft/Cordova-SQLitePlugin</a>.</p>
<p>3. On the Github site, navigate step 1&#8217;s folder structure (starting with /src) and download the <strong>SQLitePlugin.java</strong> file contents to the pgsqlite/ folder among the project files. (To do this, right-click on the file, select Save Link As, and select the folder to save in.)</p>
<p>4. On the Github site, enter the www/ folder and download the <strong>SQLitePlugin.js</strong> file to the project&#8217;s www/ folder the same way.</p>
<p>5. On the Github site, download the <strong>plugin.xml</strong> and <strong>SQLitePlugin.coffee.md</strong> to the www/folder the same way.</p>
<p>6. In your project&#8217;s site, open www/config.xml with a text editor (I use TextWrangler) and add these lines among the other plugins (or right above the &lt;/widget&gt; line):</p>
<pre>&lt;feature name="SQLitePlugin"&gt;
 &lt;param name="android-package" value="org.pgsqlite.SQLitePlugin" /&gt;
 &lt;/feature&gt;
 &lt;plugin name="SQLitePlugin" value="org.pgsqlite.SQLitePlugin"/&gt;</pre>
<p>7. Copy and paste the lines in step 6 into platforms/android/res/xml/config.xml</p>
<p>8. Install the plugin:</p>
<pre><code>cordova plugin add https://github.com/brodysoft/Cordova-SQLitePlugin</code></pre>
<p>9. Create an html page (open a document in a text editor and save as sqlite.html, or just replace the index.html page if its the default page) and paste the following example into it.</p>
<p>Here are the complete contents of the HTML page:</p>
<pre>&lt;!-- ********************* BEGIN *********************** --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;meta charset="utf-8" /&gt;
 &lt;meta name="format-detection" content="telephone=no" /&gt;
 &lt;!-- WARNING from Cordova: for iOS 7, remove the width=device-width and height=device-height attributes. See https://issues.apache.org/jira/browse/CB-4323 --&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;
 &lt;title&gt;&lt;/title&gt;

&lt;script type="text/javascript" charset="utf-8" src="cordova.js"&gt;&lt;/script&gt; 
&lt;script type="text/javascript" charset="utf-8" src="SQLitePlugin.js"&gt;&lt;/script&gt;

 &lt;style type="text/css"&gt;
 .buttonClass, .buttonClass2, h2, p {
 font-family: "Helvetica"; color: #000; font-size:1em;
 }
 .buttonClass, .buttonClass2 {
 border-radius:8px; background-color:#fff;
 border:#878787 solid 1px; padding:0 1em;margin:.5em;
 height: 3em; width: 46%;
 text-align:center;
 -webkit-appearance:none;
 } 
 .buttonClass2 {
 background-color: silver;
 }
 .segment, .segment2 {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 text-align:left;
 -webkit-appearance:none; 
 }
 .segment2 {
 
 }
 h2 {
 font-size:1.3em; font-weight: bold;
 }
table {
 width:100%;
}
td {
 font-size:.8em;
 padding: .5em;
 width:25%;
 border:1px gray solid;
 overflow:auto; 
 border-radius: 4px;
 background-color: #fff;
 height:2em;
}
 @media screen and (max-width:800px) {
 .buttonClass { width: 100%;}
 }
 &lt;/style&gt;
 &lt;script type="text/javascript" src="cordova.js"&gt;&lt;/script&gt; 
 &lt;script type="text/javascript" src="SQLitePlugin.js"&gt;&lt;/script&gt; 
&lt;script type="text/javascript" charset="utf-8"&gt;
document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
 var db = window.sqlitePlugin.openDatabase({name: "my.db"});
 db.transaction(populateDB, errorCB, successCB);
}

// create table
function populateDB(tx) {
 tx.executeSql('DROP TABLE IF EXISTS test_table');
 tx.executeSql('CREATE TABLE IF NOT EXISTS test_table (id integer primary key, data1 text, data2 integer, svgImage text)');
 tx.executeSql('INSERT INTO test_table (data1, data2, svgImage) VALUES (?,?,?)', ['test1', 100, '&lt;svg version="1.1" x="0px" y="0px" width="100px" height="100px" viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve"&gt;&lt;rect x="4.815" y="4.815" fill="#039BF9" stroke="" width="100" height="100"&gt;&lt;/svg&gt;']);
 tx.executeSql("INSERT INTO test_table (data1, data2, svgImage) VALUES (?,?,?)", ['test2', 200, '&lt;svg version="1.1" x="0px" y="0px" width="100px" height="100px" viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve"&gt;&lt;rect x="4.815" y="4.815" fill="#039BF9" stroke="" width="100" height="100"&gt;&lt;/svg&gt;']);
 queryDB(tx);
}
// form the query
function queryDB(tx) {
 tx.executeSql("SELECT id, data1, data2, svgImage from test_table;", [], querySuccess, errorCB);
}
// Display the results
function querySuccess(tx, results) {
 var len = results.rows.length;
 alert("results.rows.length: " + results.rows.length + " [should be 2]"); 
 for (var i = 0; i &lt; len; i++) { // loop as many times as there are row results
 document.getElementById("output").innerHTML +=
 "&lt;table&gt;&lt;tr&gt;&lt;td&gt;ID = " + results.rows.item(i).id + 
 "&lt;/td&gt;&lt;td&gt;data1 = " + results.rows.item(i).data1 + 
 "&lt;/td&gt;&lt;td&gt;data2 = " + results.rows.item(i).data2 + 
 "&lt;/td&gt;&lt;td&gt;svgImage = " + results.rows.item(i).svgImage + "&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;";
 } 
}
// Transaction error callback
function errorCB(err) {
console.log("Error processing SQL: " + err.code);
}
// Success error callback
function successCB() {
}
&lt;/script&gt;
 
 &lt;/head&gt;
&lt;body&gt;
 &lt;input type="button" class="buttonClass" onclick='window.location="index.html"' value="return"&gt;
&lt;div class="segment"&gt;
&lt;h2&gt;SQLitePlugin Test&lt;/h2&gt;
&lt;div id="output"&gt;&amp;nbsp;&lt;/div&gt;
&lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/04/07/installing-chris-brodys-sqlite-database-with-cordova-cli-android/"' value="View Code On iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;/body&gt;
 &lt;/html&gt;
&lt;!-- ********************* END *********************** --&gt;
</pre>
<h2>Test the Page</h2>
<p>1. In Terminal, build the app, making sure the path starts with your project folder:</p>
<pre>cordova build</pre>
<p>2. Install in device and test. You should get an alert saying how many rows of records are found in the Select query, and the output will be in table form. You should see a blue square (an SVG image) in each column.</p>
<p><strong>Alert firing:</strong></p>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/04/sqlite1.jpg"><img class="aligncenter size-full wp-image-1211" src="https://iphonedevlog.files.wordpress.com/2014/04/sqlite1.jpg?w=660" alt="SQLite Plugin Alert"   /></a></p>
<p>&nbsp;</p>
<p><strong>Final loading: </strong></p>
<p>&nbsp;</p>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/04/sqlite2.jpg"><img class="aligncenter size-full wp-image-1212" src="https://iphonedevlog.files.wordpress.com/2014/04/sqlite2.jpg?w=660" alt="SQLite Plugin complete"   /></a></p>
<h2>General Notes</h2>
<ul>
<li>Android &amp; iOS versions are working with Cordova 3.0 tooling.</li>
<li>Drop-in replacement for HTML5 SQL API. The only major change is to use <strong>window.sqlitePlugin.openDatabase()</strong> or <strong>sqlitePlugin.openDatabase()</strong> instead of window.openDatabase().</li>
<li>Keeps sqlite database in a user data location that is known, can be reconfigured, and iOS will be backed up by iCloud.</li>
<li>No 5MB maximum! More information at: <a title="http://www.sqlite.org/limits.html" href="http://www.sqlite.org/limits.html" target="_blank">http://www.sqlite.org/limits.html</a></li>
<li>Problem with Android 4.4 [unspecified].</li>
<li>Issue buiding with Android SDK &lt; 16.</li>
<li>The db version, display name, and size parameter values are not supported and will be ignored.</li>
<li>The sqlite plugin will not work before the callback for the &#8220;deviceready&#8221; event has been fired.</li>
<li>The plugin class name starts with &#8220;SQL&#8221; in capital letters, but in JavaScript the sqlitePlugin object name starts with &#8220;sql&#8221; in small letters.</li>
</ul><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/chris-brody/'>Chris Brody</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/database/'>database</a>, <a href='https://iphonedevlog.wordpress.com/tag/javascript/'>Javascript</a>, <a href='https://iphonedevlog.wordpress.com/tag/sql/'>SQL</a>, <a href='https://iphonedevlog.wordpress.com/tag/sqlite/'>SQLite</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1198/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1198/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1198/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1198/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1198/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1198/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1198/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1198/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1198/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1198/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1198/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1198/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1198&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/04/07/installing-chris-brodys-sqlite-database-with-cordova-cli-android/feed/</wfw:commentRss>
		<slash:comments>34</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/04/sqlite1.jpg" medium="image">
			<media:title type="html">SQLite Plugin Alert</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/04/sqlite2.jpg" medium="image">
			<media:title type="html">SQLite Plugin complete</media:title>
		</media:content>
	</item>
		<item>
		<title>Populate your PhoneGap App with Data from an External Server DB</title>
		<link>https://iphonedevlog.wordpress.com/2014/03/28/populate-your-phonegap-app-with-data-from-an-external-server-db/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/03/28/populate-your-phonegap-app-with-data-from-an-external-server-db/#comments</comments>
		<pubDate>Fri, 28 Mar 2014 20:20:37 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[AJAX]]></category>
		<category><![CDATA[CORS]]></category>
		<category><![CDATA[cross-origin resource sharing]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[htaccess]]></category>
		<category><![CDATA[MySQL]]></category>
		<category><![CDATA[PHP]]></category>
		<category><![CDATA[phpMyAdmin]]></category>
		<category><![CDATA[xmlhttp]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1182</guid>
		<description><![CDATA[With this article, we&#8217;ll pull data from a server and show it in the app. We&#8217;ll create a database table on a server, load it with data, then set up the scripts to make it all work. You&#8217;ll need a MySQL server and the ability to upload and change files on it. My development environment: [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1182&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>With this article, we&#8217;ll pull data from a server and show it in the app. We&#8217;ll create a database table on a server, load it with data, then set up the scripts to make it all work. You&#8217;ll need a MySQL server and the ability to upload and change files on it.</p>
<p><strong>My development environment:</strong></p>
<p>Mac OS X 10.9.1 on latest Mac Mini<br />
Cordova CLI 3.4.0<br />
For Android 4.3, 4.4 v19<br />
Testing in device: Android-19, Nexus 7 with 4.3<br />
No Jquery or other JS or CSS packages used</p>
<p>This post assumes you already have your Cordova PhoneGap environment already set up. Look elsewhere on this site for setting up for iOS or Android.</p>
<p><span id="more-1182"></span></p>
<h2>Create a Database on a Server</h2>
<p>To pull data from a database from a server, we need a database on a server! Here are the steps I took for my shared server, using the cPanel.</p>
<p>1. I signed in to the Admin area then in cPanel I clicked on the icon for MySQL Databases.</p>
<p>2. I typed testDB in the database name field. The host automatically prefixes my DB name with an internal name to keep it unique on their servers. Jot down this full name (prefix and name) for a later step. Click on Create Database.</p>
<p>3. An empty database has been created. Click on cPanel to go back.</p>
<h2>Set Up a Table in the Database</h2>
<p>The database has been made, but it needs to be populated with a table that contains information. We first create a table then fill it with data.</p>
<p>1. In cPanel, I clicked on the phpMyAdmin icon to start that program.</p>
<p>2. In the left nav bar, click on your new DB name, testDB.</p>
<p>3. Fill in the table name, practiceTBL, with 4 columns, then on Go. For this project, the data will be a list of four electric and nitro RC cars and they will eventually be displayed onscreen according to the power source selected.</p>
<p>4. The Create Table dialog appeared and I filled in the blanks for each column. (An explanation of these column values is presented later in this article for those who are unfamiliar with databases).</p>
<p><strong>record 1:</strong> the ID for each record:<br />
Name: id<br />
Type: INT<br />
Length/Values: 2<br />
Default: None<br />
Collation: utf8_general_ci<br />
Attributes: unsigned<br />
Null: unchecked<br />
Index: Primary<br />
AUTO-INCREMENT: checked<br />
Comments: ID of record</p>
<p><strong>record 2:</strong> to hold the category for record selection (electric or nitro):<br />
Name: power<br />
Type: CHAR<br />
Length/Values: 8<br />
Default: None<br />
Collation: utf8_general_ci<br />
Attributes: blank<br />
Null: unchecked<br />
Index: blank<br />
AUTO-INCREMENT: unchecked<br />
Comments: sort with this column</p>
<p><strong>record 3:</strong> the actual vehicle name and description:<br />
Name: vehicle<br />
Type: VARCHAR<br />
Length/Values: 40<br />
Default: None<br />
Collation: utf8_general_ci<br />
Attributes: blank<br />
Null: unchecked<br />
Index: blank<br />
AUTO-INCREMENT: unchecked<br />
Comments: vehicle names</p>
<p><strong>record 4:</strong> a full URL for more information:<br />
Name: url<br />
Type: VARCHAR<br />
Length/Values: 100<br />
Default: None<br />
Collation: utf8_general_ci<br />
Attributes: blank<br />
Null: unchecked<br />
Index: blank<br />
AUTO-INCREMENT: unchecked<br />
Comments: URL to vehicle&#8217;s page</p>
<p>With a fifth column, we could also include a URL to a thumbnail of the item. But I am keeping this basic.</p>
<p>5. Click on the Save button. Now I see a list of tables in the left nav, with mine listed among them.</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</p>
<p><strong>Brief explanation of the record fields:</strong></p>
<p><strong>Name:</strong> The first column is typically the ID of the record. In this case, the count will only go from 0-3, since there are only 4 records (count starts with &#8220;0&#8221; not 1). Otherwise, it&#8217;s the descriptive name of the category of data for that record, such as &#8220;power&#8221; in my case.</p>
<p><strong>Type:</strong> The ID column will be filled with digits only, so, &#8220;INT&#8221; for integer. In the case of non-integers, the records will be filled with a variable length of characters, so, VARCHAR.</p>
<p><strong>Length/Values:</strong> How many characters will this field hold, maximum? Using a reasonable number will keep the size of the database down.</p>
<p><strong>Default:</strong> None in my case, because each record&#8217;s field will be different.</p>
<p><strong>Collation:</strong> utf8_general_ci, because this character set will be best read in browsers around the world.</p>
<p><strong>Attributes:</strong> &#8220;unsigned&#8221; for the ID field to use only positive integers.</p>
<p><strong>Null:</strong> unchecked, because this field should not be left blank in my case.</p>
<p><strong>Index:</strong> &#8220;Primary&#8221; to keep each row in the table a unique ID number in the database, and it does not allow a NULL value in that field.</p>
<p><strong>AUTO-INCREMENT:</strong> checked, so the database will automatically fill in this field with the next highest integer.</p>
<p><strong>Comments:</strong> Put notes to yourself about the column (optional; not seen by public).<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</p>
<h2>Add Data to the Table</h2>
<p>The table is created, but there is no data in it yet. I clicked on practiceTBL. The menu bar at top changes. Follow along as we enter the data into fields:</p>
<p>1. To enter data, click on Insert in the menu bar at top. A page for entering data for two records at a time appears. We don&#8217;t enter anything in the ID field because the server will populate that field automatically.</p>
<p><strong>record 1:</strong><br />
power: electric<br />
vehicle: RC10B5 Team Kit, 1:10 scale buggy<br />
url: <a href="http://www.teamassociated.com/cars_and_trucks/RC10B5/Team/" rel="nofollow">http://www.teamassociated.com/cars_and_trucks/RC10B5/Team/</a></p>
<p><strong>record 2:</strong><br />
power: electric<br />
vehicle: SC10RS RTR, 1:10 scale short course truck<br />
url: <a href="http://www.teamassociated.com/cars_and_trucks/SC10/Race-Spec/" rel="nofollow">http://www.teamassociated.com/cars_and_trucks/SC10/Race-Spec/</a></p>
<p>Click on the Go button at bottom to insert the values. The next page will show what values were entered, but in the SQL syntax. Click on Insert in the menu bar to enter two more records.</p>
<p><strong>record 3:</strong><br />
power: nitro<br />
vehicle: RC8.2RS RTR, 1:8 scale buggy<br />
url: <a href="http://www.teamassociated.com/cars_and_trucks/RC8.2/RSRTR/" rel="nofollow">http://www.teamassociated.com/cars_and_trucks/RC8.2/RSRTR/</a></p>
<p><strong>record 4:</strong><br />
power: nitro<br />
vehicle: RC8T Factory Team Kit, 1:8 scale truck<br />
url: <a href="http://www.teamassociated.com/cars_and_trucks/RC8T/Factory_Team/" rel="nofollow">http://www.teamassociated.com/cars_and_trucks/RC8T/Factory_Team/</a></p>
<p>Click on the Go button at bottom to insert the values. The next page will show what values were entered, but presented in the SQL syntax.</p>
<p>We have now entered all the sample data for this table. Click on the Home icon at upper left then on your DB name, then on practiceTBL. You&#8217;ll see the record listing. Clicking on Edit will allow you to edit the fields.</p>
<p>8. If you look at the &#8220;breadcrumb&#8221;-style navigation at top, you&#8217;ll see your full database name. Mine is composed of my username, underscore, and testDB. Note that full DB name and write it down.</p>
<h2>Make a Connection Script</h2>
<p>1. We need four pieces of information to make a script that connects us to the server:</p>
<p><strong>database type:</strong> mysql (The type of database you created. We created a MySQL DB with the above steps.)<br />
<strong>DATABASE-NAME:</strong> username_testDB (substitute &#8220;username&#8221; for the information in step 8).<br />
<strong>USERNAME:</strong> (Given by my server. Seen in step 2 when creating the DB.)<br />
<strong>DB PASSWORD:</strong> (Created in step 2 when we made the table.)</p>
<p>2. Copy the following into a text editor (not a word processor), and substitute the terms with the content you have above. Specifically, swap out DATABASE NAME, USERNAME, and DB PASSWORD where they appear below. They are in uppercase so they&#8217;ll stand out here; use the same case as your originals. Retain the single-quotes. This is for a MySQL database. I suspect the contents will be different for other servers.</p>
<pre>&lt;?php
try
{
$pdo = new PDO('mysql:host=localhost;dbname=DATABASE-NAME', 'USERNAME', 'DB PASSWORD');
$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
$pdo-&gt;exec('SET NAMES "utf8"');
}
catch (PDOException $e)
{
echo 'Unable to connect to the database server: ' . $e-&gt;getMessage();
exit();
}
?&gt;</pre>
<p>3. Save it as connect.php. This is a connection script I picked up from the 2012 book by Kevin Yank: <a title="http://www.sitepoint.com/store/php-mysql-novice-to-ninja/" href="http://www.sitepoint.com/store/php-mysql-novice-to-ninja/" target="_blank"><em>PHP &amp; MySQL &#8211; Novice to Ninja.</em></a> It&#8217;s an excellent resource if you are just starting out with PHP and MySQL, and uses the current accepted PDO scripting for MySQL. The setAttribute line sets up debugging to show error messages, and the echo line will show the error message. This is for debugging purposes only; you will remove these lines for production.</p>
<h2>Make the PHP Display Page</h2>
<p>In a new PHP file we&#8217;ll add the rest of the code needed to grab our table data and display it. This will go on the server in the same folder as the connect.php page. I will give steps on doing this later. The following code was adapted from <a title="http://www.w3schools.com/php/php_ajax_database.asp " href="http://www.w3schools.com/php/php_ajax_database.asp%20" target="_blank">http://www.w3schools.com/php/php_ajax_database.asp </a>and page 123 of Kevin Yank&#8217;s book.</p>
<p>1. Open a new text file in a text editor, copy the following into it, and name it getcars.php. If you named your table other than practiceTBL, then replace it in the one place it appears.</p>
<pre>&lt;?php
include 'connect.php';
$q = $_GET['q'];
// Protect against form submission variables.
if (get_magic_quotes_gpc())
{
 $process = array(&amp;$_GET, &amp;$_POST, &amp;$_COOKIE, &amp;$_REQUEST);
 while (list($key, $val) = each($process))
 {
 foreach ($val as $k =&gt; $v)
 {
 unset($process[$key][$k]);
 if (is_array($v))
 {
 $process[$key][stripslashes($k)] = $v;
 $process[] = &amp;$process[$key][stripslashes($k)];
 }
 else
 {
 $process[$key][stripslashes($k)] = stripslashes($v);
 }
 }
 }
 unset($process);
}
try
{
 $sql = "SELECT * FROM practiceTBL WHERE power = '" . $q . "'";
 $result = $pdo-&gt;query($sql);
}
catch (PDOException $e)
{
 echo 'Error fetching data: ' . $e-&gt;getMessage();
 exit();
} echo "&lt;table border='1'&gt;
&lt;tr&gt;
&lt;th&gt;Table ID&lt;/th&gt;
&lt;th&gt;Power&lt;/th&gt;
&lt;th&gt;Vehicle&lt;/th&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;/tr&gt;";
while ($row = $result-&gt;fetch())
{
 echo "&lt;tr&gt;";
 echo "&lt;td&gt;" . $row['id'] . "&lt;/td&gt;";
 echo "&lt;td&gt;" . $row['power'] . "&lt;/td&gt;";
 echo "&lt;td&gt;" . $row['vehicle'] . "&lt;/td&gt;";
 echo "&lt;td&gt;&lt;a href='" . $row['url'] . "'&gt;learn more&lt;/a&gt;&lt;/td&gt;";
 echo "&lt;/tr&gt;";
 }
echo "&lt;/table&gt;";</pre>
<h2>Upload Files to Server</h2>
<p>The above two files need to go onto the server. The HTML page will interact with those pages; they in turn will interact with the database to pull the information from the table and display it on the HTML page.</p>
<p>Here are the steps I used to upload them to the server.</p>
<p>1. Back in the cPanel page of your host server, click on File Manager.</p>
<p>2. Your folder structure is shown. Click on www/ or public_html/ to open it.</p>
<p>3. Click on Upload, navigate to getcars.php, and OK.</p>
<p>4. Click on Upload, navigate to connect.php, and OK.</p>
<p>Your files are now uploaded.</p>
<h2>Modify or Create .htaccess File</h2>
<p>We need to give permission to allow cross-origin access to our server. Since our app is on a different domain than the server, there is no way to read data from the external domain with JavaScript &#8212; this is a security precaution. This file will give permission using CORS (cross-origin resource sharing), a W3C Working Draft.</p>
<p>This .htaccess information comes from <a title="http://enable-cors.org/server.html" href="http://enable-cors.org/server.html" target="_blank">http://enable-cors.org/server.html</a>, &#8220;Apache.&#8221; If you are using a different server than Apache, you&#8217;ll need to do this differently. Follow the instructions on that page for your server type.</p>
<p>Open the hidden .htaccess file in the www/ folder. I had to navigate to Legacy File Manager and click on &#8220;Show hidden files&#8221; to see and edit the file online. In File Manager, open to edit, or download to edit in a text editor, that file. Just insert the line at the end if you don&#8217;t see it there already.</p>
<p>Include this line exactly as written:</p>
<pre>Header set Access-Control-Allow-Origin "*"</pre>
<h2>Create the App Page</h2>
<p>Now we create the HTML page that goes in your Cordova PhoneGap app. It uses CORS, which makes it possible to get data from a different domain. (Other scripts use json-P for this instead, which is very popular. Read more here: <a title="https://developers.digitalriver.com/why-use-cors-versus-jsonp-cross-domain-requests" href="https://developers.digitalriver.com/why-use-cors-versus-jsonp-cross-domain-requests" target="_blank">https://developers.digitalriver.com/why-use-cors-versus-jsonp-cross-domain-requests</a>)</p>
<p>The following script was compiled from <a title="http://www.w3schools.com/php/php_ajax_database.asp" href="http://www.w3schools.com/php/php_ajax_database.asp" target="_blank">http://www.w3schools.com/php/php_ajax_database.asp</a> and <a title="http://www.html5rocks.com/en/tutorials/cors/" href="http://www.html5rocks.com/en/tutorials/cors/" target="_blank">http://www.html5rocks.com/en/tutorials/cors/</a>. It uses Ajax (Asynchronous JavaScript And XML). To learn more about this script, visit <a title="http://html.net/tutorials/javascript/lesson18.php" href="http://html.net/tutorials/javascript/lesson18.php" target="_blank">http://html.net/tutorials/javascript/lesson18.php</a> and <a title="http://www.javascriptkit.com/jsref/ajax.shtml" href="http://www.javascriptkit.com/jsref/ajax.shtml" target="_blank">http://www.javascriptkit.com/jsref/ajax.shtml</a>.</p>
<p>Open a new text file with the following contents and call it ajaxDB.html, and save it in the www/ folder of your Cordova project. Make sure to link to this page by a button from your index.html page. This sample page does not need the cordova.js file.</p>
<p>Replace MYDOMAIN with your own domain name in two places.</p>
<pre>&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;meta charset="utf-8" /&gt;
 &lt;meta name="format-detection" content="telephone=no" /&gt;
 &lt;!-- WARNING from Cordova: for iOS 7, remove the width=device-width and height=device-height attributes. See https://issues.apache.org/jira/browse/CB-4323 --&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;
&lt;title&gt;&lt;/title&gt;
&lt;style type="text/css"&gt;
.buttonClass, h2, p, .inputClass, #output, td, select {
 font-family: "Helvetica"; color: #000; font-size:1em; 
}
h2 {
 font-size:1.3em; font-weight: bold;
}
.buttonClass, .inputClass, #output, .buttonDel, select {
 border-radius:8px; 
 border:#878787 solid 1px; padding:.5em 1em;margin:.5em;
 -webkit-appearance:none;
} 
.buttonClass, .inputClass, #output {
 width: 46%;
} 
.buttonClass {
 text-align: center; height: 3em; background-color:#fff;
}
.select {
 text-align: center; height: 9em; background-color:#fff; line-height: 3em;
}
.inputClass {
 text-align: left; height: 2em; background-color:#ffe; width:90%; 
}
.segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 -webkit-appearance:none; 
 height: auto; 
}
table {
 width:100%;
}
td {
 font-size:.8em;
 padding: .5em;
 width:25%;
 border:1px gray solid;
 overflow:auto; 
 border-radius: 4px;
 background-color: #fff;
 height:2em;
}
@media screen and (max-width:800px) {
 .buttonClass { width: 100%;}
}&lt;/style&gt;&lt;/head&gt;</pre>
<pre>&lt;body&gt; 
&lt;input type="button" class="buttonClass" onclick='window.location="index.html"' value="Return"&gt;
&lt;div class="segment"&gt;
&lt;h2&gt;Serving Data from External Server&lt;/h2&gt;
 &lt;form action="" method="GET" id="formPowerType"&gt;
 &lt;select name="users" onchange="showUser(this.value)"&gt;
 &lt;option value=""&gt;Select power type&lt;/option&gt;
 &lt;option value="electric"&gt;Electric&lt;/option&gt;
 &lt;option value="nitro"&gt;Nitro&lt;/option&gt;
 &lt;/select&gt;
 &lt;!-- &lt;br&gt;&lt;input type="button" id="button" class="buttonClass" value="GO" onSubmit="return showUser(this.form)"&gt; --&gt;
 &lt;/form&gt;
 &lt;br&gt;
 &lt;div id="txtHint"&gt;(Data will be displayed here)&lt;/div&gt;
&lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/03/28/populate-your-phonegap-app-with-data-from-an-external-server-db/"' value="View code on iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;script&gt;</pre>
<pre>// --------------------------- CORS begin
// Create the XHR object.
function createCORSRequest(method, url) {
 var xhr = new XMLHttpRequest();
 if ("withCredentials" in xhr) {
// XHR for Chrome/Firefox/Opera/Safari.
 xhr.open(method, url, true);
 console.log('withCredentials');
 } else if (typeof XDomainRequest != "undefined") {
// XDomainRequest for IE.
 xhr = new XDomainRequest();
 xhr.open(method, url);
 } else {
// CORS not supported.
 xhr = null;
 }
 return xhr;
}
function makeCorsRequest() {
 var xhr = createCORSRequest('GET', url);
 if (!xhr) {
 alert('CORS not supported');
 return;
 }
 xhr.onload = function() {
 console.log("onload begin");
 }
xhr.onerror = function() {
 alert('Error accessing database.');
 };
 xhr.send();
}
// --------------------------- CORS end</pre>
<pre>function showUser(str) {
 if (str=="") {
 document.getElementById("txtHint").innerHTML = "Please make a selection.";
 return;
 } 
 document.getElementById("txtHint").innerHTML = "Getting data ...";
 
 xmlhttp.onreadystatechange=function() {
 if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200) {
 var txt = xmlhttp.responseText;
 document.getElementById("txtHint").innerHTML = xmlhttp.responseText;
 }
 }
// Need full URL to page, since this HTML page is not on a server
 xmlhttp.open("GET","http://www.MYDOMAIN.com/getcars.php?q="+str,true);
 xmlhttp.send();
 }
// Start the CORS on startup
var url = "http://www.MYDOMAIN.com/";
var method = "GET";
createCORSRequest(method, url);
 &lt;/script&gt;
 &lt;/body&gt;
&lt;/html&gt;</pre>
<h2>Create the App</h2>
<p>1. In Terminal, starting from your project&#8217;s mail folder, type:</p>
<p>cordova build android</p>
<p>2. The apk file is built as platforms/android/ant-build/cordovaAPI-debug.apk</p>
<p>3. Install it on your device and navigate to the page. You should be able to select the power type and see a simple table listing of the cars.</p>
<p><strong>First screen seen:</strong></p>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/03/extdb1.jpg"><img class="aligncenter size-full wp-image-1183" src="https://iphonedevlog.files.wordpress.com/2014/03/extdb1.jpg?w=660" alt="First screen seen"   /></a><strong>After selecting power type:</strong></p>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/03/extdb2.jpg"><img class="aligncenter size-full wp-image-1184" src="https://iphonedevlog.files.wordpress.com/2014/03/extdb2.jpg?w=660" alt="After selecting power type"   /></a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/ajax/'>AJAX</a>, <a href='https://iphonedevlog.wordpress.com/tag/cors/'>CORS</a>, <a href='https://iphonedevlog.wordpress.com/tag/cross-origin-resource-sharing/'>cross-origin resource sharing</a>, <a href='https://iphonedevlog.wordpress.com/tag/database/'>database</a>, <a href='https://iphonedevlog.wordpress.com/tag/htaccess/'>htaccess</a>, <a href='https://iphonedevlog.wordpress.com/tag/mysql/'>MySQL</a>, <a href='https://iphonedevlog.wordpress.com/tag/php/'>PHP</a>, <a href='https://iphonedevlog.wordpress.com/tag/phpmyadmin/'>phpMyAdmin</a>, <a href='https://iphonedevlog.wordpress.com/tag/xmlhttp/'>xmlhttp</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1182/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1182/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1182/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1182/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1182/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1182/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1182/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1182/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1182/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1182/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1182/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1182/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1182&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/03/28/populate-your-phonegap-app-with-data-from-an-external-server-db/feed/</wfw:commentRss>
		<slash:comments>18</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/03/extdb1.jpg" medium="image">
			<media:title type="html">First screen seen</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/03/extdb2.jpg" medium="image">
			<media:title type="html">After selecting power type</media:title>
		</media:content>
	</item>
		<item>
		<title>Adding Cordova APIs to Android via CLI: Camera and File APIs &#8211; shoot picture and upload to server folder with PHP</title>
		<link>https://iphonedevlog.wordpress.com/2014/03/24/adding-cordova-apis-to-android-via-cli-camera-and-file-apis-shoot-picture-and-upload-to-server-folder-with-php/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/03/24/adding-cordova-apis-to-android-via-cli-camera-and-file-apis-shoot-picture-and-upload-to-server-folder-with-php/#comments</comments>
		<pubDate>Mon, 24 Mar 2014 18:34:11 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Camera]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Cordova APIs]]></category>
		<category><![CDATA[File API]]></category>
		<category><![CDATA[fileTransfer]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1155</guid>
		<description><![CDATA[In this article, we are continuing our exploration of the Cordova APIs. On this page, we’ll explore the Camera and File APIs to get a photo onto the server. Here, we&#8217;ll learn how to upload the image to a server directory after shooting it. This article requires that you have a server with PHP installed, [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1155&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>In this article, we are continuing our exploration of the Cordova APIs. On this page, we’ll explore the Camera and File APIs to get a photo onto the server. Here, we&#8217;ll learn how to upload the image to a server directory after shooting it.</p>
<p>This article requires that you have a server with PHP installed, are able to upload a file to it, and the server accepts uploads. My simple server has a CPanel interface that allowed me to do all of the above. (Don&#8217;t worry; I&#8217;m going to give you the steps for all of this.)</p>
<p><span id="more-1155"></span></p>
<p><em>[This was an exercise to learn about uploading to a server. This exercise uploads a photo from the device&#8217;s camera to a specific folder on a server. It&#8217;s highly unlikely that one would put this into production &#8212; who would want hundreds of app users&#8217; photos inserted into a single folder? This is fine for personal use, however.] </em></p>
<p>You can start a new HTML page and link to it via a button on the index.html page to access it (which is what I did). If you are starting a new page, copy/paste this HTML skeleton into a text editor and save it as camera.html to follow along:</p>
<pre>&lt;!-- ********************* HMTL5 Skeleton begin *********************** --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
 &lt;meta charset="utf-8" /&gt;
 &lt;meta name="format-detection" content="telephone=no" /&gt;
 &lt;!-- WARNING from Cordova: for iOS 7, remove the width=device-width and height=device-height attributes. See https://issues.apache.org/jira/browse/CB-4323 --&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;
 &lt;title&gt;&lt;/title&gt;
 &lt;style type="text/css"&gt;
 .buttonClass, h2, p {
 font-family: "Helvetica"; color: #000; font-size:1em;
 }
 .buttonClass {
 border-radius:8px; background-color:#fff;
 border:#878787 solid 1px; padding:0 1em;margin:.5em;
 height: 3em; width: 46%;
 text-align:center;
 -webkit-appearance:none;
 } 
 .segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 text-align:left;
 -webkit-appearance:none; 
 }
 h2 {
 font-size:1.3em; font-weight: bold;
 }
 @media screen and (max-width:800px) {
 .buttonClass { width: 100%;}
 }
 &lt;/style&gt;
 &lt;script type="text/javascript" src="cordova.js"&gt;&lt;/script&gt; 
 
 &lt;/head&gt;
 &lt;body&gt;
 &lt;/body&gt; 
&lt;/html&gt; 
&lt;!-- ********************* HMTL5 Skeleton end *********************** --&gt;</pre>
<h2>Server&#8217;s php.ini Setup</h2>
<p>We will use the File API to shoot our picture and upload it to a folder in a server. We need to set up the server first. I don&#8217;t have a &#8220;dedicated&#8221; server, so I did my work through the control panel (cpanel) of my admin account. I needed to make sure some PHP permissions were set correctly, and that meant changing the php.ini file. I did not have access to it (I could not find where it was located), so I contacted support and they copied it to a folder so I could edit it. Make the following changes by downloading your php.ini to your hard drive. I clicked on &#8220;cpanel&#8221; then on &#8220;File Manager,&#8221; then navigated to where they placed the file. I selected the file and chose &#8220;download&#8221; to download it.</p>
<p>You may need to do a search for the terms to find them. Change their values as noted. You might merely have to uncomment a line or two (to do that, remove the ; at the left of the text).</p>
<p>1. Download the php.ini file to your hard drive and open it in a text editor. Do not open it in a word processor!</p>
<p><strong>My php.ini changes:</strong></p>
<p>2. file_uploads must be set to on:</p>
<pre>file_uploads = On</pre>
<p>3. upload_tmp_dir value must be set to where uploads will be placed. I left the value as is; you probably should not change this:</p>
<pre>upload_tmp_dir = var/tmp/</pre>
<p>4. upload_max_filesize dictates how large a file can be sent</p>
<pre>upload_max_filesize = 10M</pre>
<p>5. Upload the file back to the server, overwriting the old version. I clicked on &#8220;upload,&#8221; navigated to the file on my hard drive, and &#8220;OK.&#8221;</p>
<p>6. Next, we need to add a folder into which all photos will be uploaded. In the cpanel, I clicked on the public_html/ folder to select it, then on &#8220;New Folder&#8221; and gave the folder the name of &#8220;uploads.&#8221; From the directory root, the uploads URL might look like: home2/yourDomain/public_html/uploads/ (&#8220;yourDomain&#8221; will be the name of your domain). Your server may have a different address; that&#8217;s fine.</p>
<p>7. Let&#8217;s make sure that php is working. Open a text file, save it as testphp.php, and add only the following line to it:</p>
<pre>&lt;?php phpinfo(); ?&gt;</pre>
<p>8. Upload that to the uploads/ folder in the same way you uploaded the php.ini file in step 5 and navigate to it in a browser. If your folder setup is the same as mine, it would look like: <a href="http://www.yourDomain.com/uploads/testphp.php (with" rel="nofollow">http://www.yourDomain.com/uploads/testphp.php (with</a> &#8220;yourDomain&#8221; will be the name of your own domain, of course). If all is well, you should get a whole page or so of information about your PHP settings. You may safely delete that file when done. If the page does not show PHP info, you&#8217;ll want to contact customer support and find out why not.</p>
<h2>PHP Upload Script</h2>
<p>We are using a PHP script to process the uploads. I found a script that will process the uploads but also adds security, and checks to make sure the file is what it purports to be (whether jpg, jpeg, png, gif). Copy the following into a blank text file and name it upload.php. Then upload it your server&#8217;s uploads/ folder. If you are using a different name for your uploads/ folder, then change it in the two places indicated before uploading it.</p>
<p>This file will check to make sure the file uploaded is indeed an image file, and that it&#8217;s under 10MB. It will prepend the date of the image shoot to help make the filename unique. Then it will give the final name of the file and the folder it&#8217;s stored in.</p>
<p>&lt;!&#8211; ********************* upload.php begin *********************** &#8211;&gt;</p>
<p>&lt;?php<br />
// File types allowed on upload:<br />
$allowed_exts = array(&#8220;gif&#8221;, &#8220;jpeg&#8221;, &#8220;jpg&#8221;, &#8220;png&#8221;);<br />
$temp = explode(&#8220;.&#8221;, $_FILES[&#8220;file&#8221;][&#8220;name&#8221;]);<br />
$extension = end($temp);<br />
if ((($_FILES[&#8220;file&#8221;][&#8220;type&#8221;] == &#8220;image/gif&#8221;)<br />
|| ($_FILES[&#8220;file&#8221;][&#8220;type&#8221;] == &#8220;image/jpeg&#8221;)<br />
|| ($_FILES[&#8220;file&#8221;][&#8220;type&#8221;] == &#8220;image/jpg&#8221;)<br />
|| ($_FILES[&#8220;file&#8221;][&#8220;type&#8221;] == &#8220;image/pjpeg&#8221;)<br />
|| ($_FILES[&#8220;file&#8221;][&#8220;type&#8221;] == &#8220;image/x-png&#8221;)<br />
|| ($_FILES[&#8220;file&#8221;][&#8220;type&#8221;] == &#8220;image/png&#8221;))<br />
&amp;&amp; ($_FILES[&#8220;file&#8221;][&#8220;size&#8221;] &lt; 100000)<br />
&amp;&amp; in_array($extension, $allowed_exts)) {<br />
if ($_FILES[&#8220;file&#8221;][&#8220;error&#8221;] &gt; 0) {<br />
echo &#8220;Not allowed Code: &#8221; . $_FILES[&#8220;file&#8221;][&#8220;error&#8221;] . &#8220;&lt;br&gt;&#8221;;<br />
}<br />
else {<br />
echo &#8220;Upload: &#8221; . $_FILES[&#8220;file&#8221;][&#8220;name&#8221;] . &#8220;&lt;br&gt;&#8221;;<br />
echo &#8220;Type: &#8221; . $_FILES[&#8220;file&#8221;][&#8220;type&#8221;] . &#8220;&lt;br&gt;&#8221;;<br />
echo &#8220;Size: &#8221; . ($_FILES[&#8220;file&#8221;][&#8220;size&#8221;] / 1024) . &#8221; kB&lt;br&gt;&#8221;;<br />
echo &#8220;Temp filename: &#8221; . $_FILES[&#8220;file&#8221;][&#8220;tmp_name&#8221;] . &#8220;&lt;br&gt;&#8221;;</p>
<p>/**<br />
CUSTOMIZE THE NAME OF THE FOLDER THAT THIS PHP UPLOAD.PHP SCRIPT RESIDES IN.<br />
uploads/<br />
*/<br />
if (file_exists(&#8220;uploads/&#8221; . $_FILES[&#8220;file&#8221;][&#8220;name&#8221;])) {<br />
echo $_FILES[&#8220;file&#8221;][&#8220;name&#8221;] . &#8221; already exists. &#8220;;<br />
}<br />
else {<br />
$timestamp = time();<br />
move_uploaded_file($_FILES[&#8220;file&#8221;][&#8220;tmp_name&#8221;],<br />
$timestamp . &#8220;_&#8221; . $_FILES[&#8220;file&#8221;][&#8220;name&#8221;]); // Add time to filename to minimize overwriting.<br />
/**<br />
CUSTOMIZE THE NAME OF THE FOLDER THAT THIS PHP UPLOAD.PHP SCRIPT RESIDES IN.<br />
uploads/<br />
*/<br />
echo &#8220;Stored in: uploads/&#8221; . $_FILES[&#8220;file&#8221;][&#8220;name&#8221;];<br />
}<br />
}<br />
}<br />
else {<br />
echo &#8220;Sorry, invalid file upload (this is from upload.php).&#8221;;<br />
}<br />
?&gt;</p>
<p>&lt;!DOCTYPE html&gt;<br />
&lt;html&gt;<br />
&lt;head&gt;<br />
&lt;meta charset=&#8221;utf-8&#8243; /&gt;<br />
&lt;title&gt;Image Upload Page&lt;/title&gt;<br />
&lt;style type=&#8221;text/css&#8221;&gt;<br />
li { font-size:1.5em; padding: .5em; }<br />
&lt;/style&gt;<br />
&lt;/head&gt;<br />
&lt;body&gt;<br />
&lt;h2&gt;Contents of the image file upload folder (this is from upload.php).&lt;/h2&gt;<br />
&lt;h2&gt;<br />
&lt;!&#8211; REMOVE NEXT THREE LINES FOR PRODUCTION. NOT FOR PUBLIC. &#8211;&gt;<br />
&lt;?php<br />
print_r($_FILES);<br />
?&gt;<br />
&lt;/h2&gt;<br />
&lt;/body&gt;<br />
&lt;/html&gt;</p>
<p>&lt;!&#8211; ********************* upload.php end *********************** &#8211;&gt;</p>
<h2>Camera API</h2>
<p>The following code comes from <a title="http://docs.phonegap.com/en/3.3.0/cordova_camera_camera.md.html#Camera" href="http://docs.phonegap.com/en/3.3.0/cordova_camera_camera.md.html#Camera" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_camera_camera.md.html#Camera</a> This code will access the camera and allow you to shoot the picture and retain it. Then it will segue into the next block of code after this one and upload the picture.</p>
<p>1. To follow along, please refer to the following article to set up your Cordova PhoneGap project files. <a title="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" href="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" target="_blank">https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/</a> You&#8217;ll want to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive.</p>
<p>2. Download the camera plugin in terminal:</p>
<pre>cordova plugin add org.apache.cordova.camera</pre>
<p>2. Make sure it’s downloaded:</p>
<pre>cordova plugin ls</pre>
<p>3. Open CordovaAPI/platforms/android/res/xml/config.xml in a text file and add the following to just above &lt;/widget&gt; and save:</p>
<pre>&lt;feature name="Camera"&gt;
    &lt;param name="android-package" value="org.apache.cordova.camera.CameraLauncher" /&gt;
&lt;/feature&gt;</pre>
<p>4. Open platforms/android/AndroidManifest.xml with a text editor and enter the following among the other “&lt;uses-permission” entries:</p>
<pre>&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;</pre>
<p>5. Add the following (from &#8220;Camera begin&#8221; to &#8220;Camera end&#8221;) to just above the &lt;/body&gt; tag and change the URL to the upload.php page on your server in the two places indicated.</p>
<pre>&lt;!-- ********************* Camera begin *********************** --&gt;</pre>
<pre>&lt;script type="text/javascript" charset="utf-8"&gt;</pre>
<pre>var pictureSource; // picture source
 var destinationType; // sets the format</pre>
<pre>// Wait for device API libraries to load
 document.addEventListener("deviceready",onDeviceReady,false);
 // device APIs are available
 
/** ***************** IMAGE CAPTURE ***************** */
// camera.getPicture</pre>
<pre>function onDeviceReady() {
 pictureSource=navigator.camera.PictureSourceType;
 destinationType=navigator.camera.DestinationType;
 }
 
// cameraSuccess
 // Called when a photo is successfully retrieved
 function onPhotoDataSuccess(imageData) {
 var smallImage = document.getElementById('smallImage'); // Get image handle
 smallImage.style.display = 'block'; // unhide image
 smallImage.src = "data:image/jpeg;base64," + imageData; // show image
 }</pre>
<pre>function capturePhotoEdit() {
 // Take picture using device camera, allow edit, and retrieve image as base64-encoded string
 navigator.camera.getPicture(onPhotoDataSuccess, onFail, { quality: 50, allowEdit: true, destinationType: destinationType.DATA_URL });
 }</pre>
<pre>// Called if something bad happens.
 function onFail(message) {
 alert('Response: ' + error.code + '\n' + error.message);
 }</pre>
<pre>function removeImages() {
 var smallImage = document.getElementById('smallImage');
 smallImage.style.display = 'none';
 smallImage = null;
 }
 
 function removeLargeImage() {
 var largeImage = document.getElementById('largeImage');
 largeImage.style.display = 'none';
 largeImage = null;
 }</pre>
<pre>/** ***************** GET IMAGE ***************** */</pre>
<pre>// Called when a photo is successfully retrieved
 function onPhotoURISuccess(imageURI) {
 var largeImage = document.getElementById('largeImage'); // Get image handle
 largeImage.style.display = 'block'; // unhide image
 largeImage.src = imageURI; // show image 
 }
 
// cameraOptions
 function getPhoto(source) {
 // Retrieve image file location from specified source
 navigator.camera.getPicture(onPhotoURISuccess, onFail, { quality: 50,
 destinationType: destinationType.FILE_URI,
 sourceType: source });
 }
&lt;/script&gt;
&lt;!-- ********************* Camera end *********************** --&gt;</pre>
<h2>File API</h2>
<p>Now we set up the page for the File API to use the fileTransfer script for uploading the picture.</p>
<p>1. In Terminal, download the plugin:</p>
<pre>cordova plugin add org.apache.cordova.file</pre>
<p>2. Add the file-transfer plug-in:</p>
<pre>cordova plugin add org.apache.cordova.file-transfer</pre>
<p>3. Make sure they are available:</p>
<pre>cordova plugin ls</pre>
<p>4. Add to config.xml in a text editor:</p>
<pre>&lt;feature name="File"&gt;
    &lt;param name="android-package" value="org.apache.cordova.file.FileUtils" /&gt;
&lt;/feature&gt;
&lt;feature name="FileTransfer"&gt;
    &lt;param name="android-package" value="org.apache.cordova.filetransfer.FileTransfer" /&gt;
&lt;/feature&gt;</pre>
<p>5. Make sure this is in AndroidManifest.xml; if not, add it in a text editor:</p>
<pre>&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;</pre>
<p>6. Add the following code (from &#8220;FileTransfer begin&#8221; to &#8220;FileTransfer end&#8221;) just above the &lt;/body&gt; tag to complete the code needed to send the image to the server. Change &#8220;yourDomain&#8221; in the two sections where noted to your own domain name.</p>
<p>This fileTransfer script comes from <a title="http://docs.phonegap.com/en/3.3.0/cordova_file_file.md.html#File" href="http://docs.phonegap.com/en/3.3.0/cordova_file_file.md.html#File" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_file_file.md.html#File</a></p>
<p>The code will give you confirmation of the photo name and where it is located.</p>
<p>It provides a button to visit the uploads/ folder to view the files.</p>
<pre>&lt;!-- ********************* FileTransfer begin *********************** --&gt;</pre>
<pre>&lt;script&gt;
// upload (open camera to shoot) 
 function uploadPhotoStart() {
 var uploadStatus = document.getElementById('uploadStatus'); // get field ID
 uploadStatus.style.backgroundColor = "blue";
 
 // Retrieve image file location from specified source
 navigator.camera.getPicture(
 uploadPhoto,
 function(message) { alert('uploadPhoto(imageURI) failed'); },
 {
 quality : 50,
 destinationType : navigator.camera.DestinationType.FILE_URI,
 sourceType : navigator.camera.PictureSourceType.CAMERA
 } // not navigator.camera.PictureSourceType.PHOTOLIBRARY
 ); 
 }</pre>
<pre>// FileUploadOptions
 function uploadPhoto(imageURI) {
 var options = new FileUploadOptions();
 var ft = new FileTransfer();
 options.fileKey="file";
 options.fileName=imageURI.substr(imageURI.lastIndexOf('/')+1);
 options.mimeType="image/jpeg";</pre>
<pre>var params = {};
 params.value1 = "test";
 params.value2 = "param";</pre>
<pre>options.params = params;
/**
CUSTOMIZE THE FOLLOWING WITH THE URL TO YOUR OWN UPLOAD.PHP SCRIPT PAGE:
*/
 ft.upload(imageURI, "http://Domain/uploads/upload.php", win, fail, options);
 }</pre>
<pre>function win(r) {
 var uploadStatus = document.getElementById('uploadStatus');
 uploadStatus.style.backgroundColor = "green";
 uploadStatus.innerHTML += "&lt;br&gt;Code = " + r.responseCode;
 uploadStatus.innerHTML += "&lt;br&gt;Response = " + r.response;
 uploadStatus.innerHTML += "&lt;br&gt;Sent = " + r.bytesSent;
 }
/* Code of 200 = successful upload. */</pre>
<pre>function fail(error) {
 var uploadStatus = document.getElementById('uploadStatus');
 uploadStatus.style.backgroundColor = "red";
 uploadStatus.innerHTML += "&lt;br&gt;An error has occurred: Code = " + error.code;
 uploadStatus.innerHTML += "&lt;br&gt;Upload error source " + error.source;
 uploadStatus.innerHTML += "&lt;br&gt;Upload error target " + error.target;
 }</pre>
<pre>&lt;/script&gt;
 
&lt;!-- Onscreen Layout --&gt;</pre>
<pre>&lt;div class="segment"&gt;
&lt;h2&gt;File Transfer&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Shoot photo and upload it to server&lt;/em&gt;&lt;/p&gt;</pre>
<pre>&lt;input type="button" class="buttonClass" onclick="uploadPhotoStart();" value="Shoot Photo"&gt;
&lt;p id="uploadStatus"&gt;&amp;nbsp;&lt;/p&gt;</pre>
<pre>&lt;p&gt;&lt;em&gt;Open folder on server to see listing of images uploaded.&lt;/em&gt;&lt;/p&gt;</pre>
<p>&lt;!&#8211; CUSTOMIZE THE FOLLOWING URL WITH THE URL TO YOUR OWN UPLOAD.PHP SCRIPT PAGE. DO NOT INCLUDE THIS LINK IN PRODUCTION. ONLY FOR TESTING. &#8211;&gt; &lt;input type=&#8221;button&#8221; class=&#8221;buttonClass&#8221; onclick=&#8217;window.location=&#8221;<a href="http://Domain/uploads/&#8221;&#038;#8216" rel="nofollow">http://Domain/uploads/&#8221;&#038;#8216</a>; value=&#8221;Open Folder&#8221;&gt;</p>
<pre>&lt;input type="button" class="buttonClass" onclick='window.location="http://docs.phonegap.com/en/3.3.0/cordova_file_file.md.html#FileTransfer"' value="View Code On PhoneGap.com"&gt;
&lt;/div&gt; 
&lt;!-- ********************* FileTransfer end *********************** --&gt;</pre>
<h2>Auto-convert the files to thumbnails</h2>
<p>I found a file that converts the plain file listing into thumbnails. It&#8217;s the <strong>Indexr Directory Listing.</strong></p>
<p>1. Visit: <a title="https://github.com/firedev/indexr" href="https://github.com/firedev/indexr" target="_blank">https://github.com/firedev/indexr</a></p>
<p>2. Click on index.php</p>
<p>3. Copy the contents of that file into a text document and save it as index.php.</p>
<p>4. Upload the file to your uploads/ folder.</p>
<p>That&#8217;s it! It will format the images for you as thumbnails when you tap on the Open Folder button. As is, though, it doesn&#8217;t fit them to the small screen; you&#8217;ll be swiping to see them. The simple solution is to go to line 58 and change the number of columns from 3 to 1. That fixes it.</p>
<p>Also, the text is tiny because it&#8217;s designed for desktop monitors. At line 431, replace</p>
<pre>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt;</pre>
<p>with</p>
<pre>&lt;!DOCTYPE html&gt;
&lt;html&gt;</pre>
<p>Replace</p>
<pre>&lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8"/&gt;</pre>
<p>with</p>
<pre>&lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8"/&gt;</pre>
<pre>&lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;</pre>
<p>Finally, replace line 439 with a larger font size:</p>
<pre>body { background: black; color: #999; font: 1.5em Tahoma; margin: 18px 36px;}</pre>
<h2>Test the APK File</h2>
<p>1. Build the files in the terminal, remembering to start from your project&#8217;s folder:</p>
<pre>cordova build android</pre>
<p>(or, <strong>cordova prepare android</strong> then <strong>cordova compile android</strong>)</p>
<p>2. Locate the apk file at platforms/android/bin/CordovaAPI-debug.apk and put it on your device. (I had recently updated to 3.4.0 and found the apk in platforms/android/ant-build/.)</p>
<p>3. Navigate to the page in your device and tap the button to shoot a picture. When done, you&#8217;ll be returned to the app, then the script will continue and upload your file to the server.</p>
<p>4. Tap the other button to view the uploads/ folder on the server. It will open in a browser and the print_r($_FILES); script on the uploads.php file will display the folder contents, showing you all the files. Tap on the image name to view it in the browser. You can also review an error_log file, if there is one, to help pinpoint problems.</p>
<p><strong>For security reasons, you don&#8217;t want this button used by the public;</strong> remove that HTML from the app&#8217;s production version. For the same reason, <strong>please remove</strong> the print_r($_FILES); line from the upload.php page before using in a public release. I&#8217;m not sure that the security scripting is strong enough to thwart hackers&#8217; attempts to inject malicious code.</p>
<h2>Start screen:</h2>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/03/cameraft1.jpg"><img class="aligncenter size-full wp-image-1156" src="https://iphonedevlog.files.wordpress.com/2014/03/cameraft1.jpg?w=660" alt="Camera start screen"   /></a></p>
<p>&nbsp;</p>
<h2>After image upload:</h2>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/03/cameraft2.jpg"><img class="aligncenter size-large wp-image-1157" src="https://iphonedevlog.files.wordpress.com/2014/03/cameraft2.jpg?w=660&#038;h=361" alt="Camera upload verification" width="660" height="361" /></a></p>
<p>&nbsp;</p>
<h2>Viewing the uploads/ folder:</h2>
<p><strong>(Before changing to the thumbnail version)</strong></p>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/03/cameraft3.jpg"><img class="aligncenter size-full wp-image-1158" src="https://iphonedevlog.files.wordpress.com/2014/03/cameraft3.jpg?w=660" alt="Sample uploads/ folder contents"   /></a></p>
<p>&nbsp;</p>
<h2>Viewing the uploads/ folder:</h2>
<p><strong>(After changing to the thumbnail version)</strong></p>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/03/open-folder.jpg"><img class="aligncenter size-full wp-image-1179" src="https://iphonedevlog.files.wordpress.com/2014/03/open-folder.jpg?w=660" alt="open-folder"   /></a></p>
<p>&nbsp;</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/camera/'>Camera</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova-apis/'>Cordova APIs</a>, <a href='https://iphonedevlog.wordpress.com/tag/file-api/'>File API</a>, <a href='https://iphonedevlog.wordpress.com/tag/filetransfer/'>fileTransfer</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1155/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1155/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1155/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1155/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1155/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1155/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1155/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1155/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1155/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1155/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1155/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1155/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1155&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/03/24/adding-cordova-apis-to-android-via-cli-camera-and-file-apis-shoot-picture-and-upload-to-server-folder-with-php/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/03/cameraft1.jpg" medium="image">
			<media:title type="html">Camera start screen</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/03/cameraft2.jpg?w=660" medium="image">
			<media:title type="html">Camera upload verification</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/03/cameraft3.jpg" medium="image">
			<media:title type="html">Sample uploads/ folder contents</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/03/open-folder.jpg" medium="image">
			<media:title type="html">open-folder</media:title>
		</media:content>
	</item>
		<item>
		<title>Cordova-supported WebSQL Database, with user-added data</title>
		<link>https://iphonedevlog.wordpress.com/2014/03/21/cordova-websql-database-with-user-added-data/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/03/21/cordova-websql-database-with-user-added-data/#comments</comments>
		<pubDate>Fri, 21 Mar 2014 21:44:01 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Cordova APIs]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[localStorage]]></category>
		<category><![CDATA[Web storage]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1139</guid>
		<description><![CDATA[In this article, we are examining another facet of the database storage, which is built into Cordova. In this article, we&#8217;ll create an empty database and allow the user to add records to the database and store them in the device. A button will delete the database. Two outputs are given, one in a text [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1139&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>In this article, we are examining another facet of the database storage, which is built into Cordova. In this article, we&#8217;ll create an empty database and allow the user to add records to the database and store them in the device. A button will delete the database. Two outputs are given, one in a text field and one in a table layout. With the text-only layout in the textfield, you can press and hold in the textfield and copy the contents to export it.</p>
<p><span id="more-1139"></span></p>
<p>The code here on this page creates all the database entries on an HTML page, not from a server. It is not a pre-populated database. Uploading a new version of the app retained the old database structure and all its data.</p>
<p>The table made here has four fields, <em>id,</em> which is created according to the time to keep it unique, and <em>data1, data2,</em> and <em>data3.</em> The user-entered data is placed into localStorage early, then pulled from localStorage several functions later when it&#8217;s time to insert it into the database.</p>
<p><span style="line-height:1.5em;">To get started, set up a project as noted in</span><span style="line-height:1.5em;"> </span><a style="line-height:1.5em;" title="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" href="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" target="_blank">https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/</a> You&#8217;ll want to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive. Start a new page in the project and call it storage-insert.html. Copy/paste from this page into that page. I&#8217;ve commented out the processes from beginning to end. Link to it as a button from your original index.html page if you wish. What you see below is the complete code.</p>
<p>No other pages are required. No server is used. You can even double-click on the file on your hard drive and test-drive it in a browser like Google Chrome. There are no plugins to download, nor editing of config.xml. Cordova.js isn&#8217;t needed. This database, which conforms closely to WebSQL, has a 5MB data limit. For more details, see <a title="http://dev.w3.org/html5/webdatabase/" href="http://dev.w3.org/html5/webdatabase/" target="_blank">http://dev.w3.org/html5/webdatabase/</a></p>
<p><strong>My environment:</strong></p>
<p>Mac OS X 10.9.1 on Mac Mini<br />
Cordova CLI 3.4.0<br />
for Android 4.3, 4.4 v19<br />
ADT v22.0.1 with Eclipse platform (not using Eclipse at this time)<br />
Testing in device: Android-19, Nexus 7 with 4.3 (cordova prepare/cordova compile)<br />
Not for PG Build; no Jquery or other JS or CSS packages used</p>
<pre>&lt;!-- ********************* HMTL5 Storage begin *********************** --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;User-generated DB (PG Storage Example)&lt;/title&gt;
&lt;meta name="viewport" content="width=device-width, initial-scale = 1.0, user-scalable = no"&gt;
&lt;!-- &lt;script type="text/javascript" charset="utf-8" src="cordova.js"&gt;&lt;/script&gt; --&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;

function onDeviceReady() { 
 persistData(data1, data2, data3);
}
&lt;/script&gt;
&lt;style type="text/css"&gt;
.buttonClass, h2, p, .inputClass, #output, td {
 font-family: "Helvetica"; color: #000; font-size:1em; 
}
h2 {
 font-size:1.3em; font-weight: bold;
}
.buttonClass, .inputClass, #output, .buttonDel {
 border-radius:8px; 
 border:#878787 solid 1px; padding:.5em 1em;margin:.5em;
 -webkit-appearance:none;
} 
.buttonClass, .inputClass, #output {
 width: 46%;
} 
.buttonDel {
 background-color: #faa;
}
.buttonClass {
 text-align: center; height: 3em; background-color:#fff;
}
.inputClass {
 text-align: left; height: 2em; background-color:#ffe; width:90%; 
} 
#output {
 text-align: left; height: auto; background-color:#ffe; width:90%; 
}
.segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 -webkit-appearance:none; 
 height: auto; 
}
table {
 width:100%;
}
td {
 font-size:.8em;
 padding: .5em;
 width:25%;
 border:1px gray solid;
 overflow:auto;
 line-height:1em; 
 border-radius: 4px;
 background-color: #fff;
}
.headercell {
 text-align:center;
 font-weight:bold;
}
@media screen and (max-width:800px) {
 .buttonClass { width: 100%;}
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="segment"&gt;
 &lt;h2&gt;Storage, user-entry DB&lt;/h2&gt;
 &lt;input type="button" class="buttonClass" onclick='window.location="index.html"' value="Return"&gt;

 &lt;form id="userInput" action ="" method="GET"&gt; 
 &lt;input class="inputClass" id="data1" type="text" value="" placeholder="data1"&gt; 
 &lt;input class="inputClass" id="data2" type="text" value="" placeholder="data2"&gt; 
 &lt;input class="inputClass" id="data3" type="text" value="" placeholder="data3"&gt; 
 &lt;br&gt;&lt;br&gt;
 &lt;input class="buttonClass" type="button" value="Insert Data" onclick="persistData(this.form)"&gt;
 &lt;/form&gt;

 &lt;p&gt;&lt;em&gt;Press and hold on the text to copy and export. To scroll contents, tap in field and wait for keyboard, then scroll.&lt;/em&gt;&lt;/p&gt;

&lt;!-- insert query results here, text-only --&gt;
 &lt;textarea id="output" rows="15" placeholder="Results displayed here"&gt;&lt;/textarea&gt; 

 &lt;input type="button" class="buttonClass" style="background-color: #faa;" onclick='dropDb();' value="Delete Database"&gt;

&lt;!-- insert query results here as table rows --&gt; 
 &lt;table&gt;&lt;th&gt;&lt;tr&gt;&lt;td class="headercell"&gt;ID&lt;/td&gt;&lt;td class="headercell"&gt;data1&lt;/td&gt;&lt;td class="headercell"&gt;data2&lt;/td&gt;&lt;td class="headercell"&gt;data3&lt;/td&gt;&lt;/tr&gt;&lt;/th&gt;&lt;/table&gt;
 &lt;div id="output2"&gt;&lt;/div&gt;

 &lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/03/21/cordova-websql-database-with-user-added-data/"' value="View Code on iPhoneDevLog"&gt;
&lt;/div&gt;

&lt;script&gt;

/* IMPORTANT! for increased security, add form validation (not used on this page). 
Perhaps get it from: http://rickharrison.github.io/validate.js/ */

// set form field input

function persistData(data1, data2, data3) {
// get form entries
 var form = document.getElementById("userInput"); 
 var formdata1 = form.data1.value;
 var formdata2 = form.data2.value;
 var formdata3 = form.data3.value;
// set value if input was blank
 if (formdata1 === "undefined") { formdata1 = "" }; 
 if (formdata2 === "undefined") { formdata2 = "" };
 if (formdata3 === "undefined") { formdata3 = "" };
// check form entries on console
 console.log("data1 = " + formdata1); 
 console.log("data2 = " + formdata2);
 console.log("data3 = " + formdata3);
// key, value pair into localStorage
 localStorage.setItem('formdata1Set', formdata1); 
 localStorage.setItem('formdata2Set', formdata2); 
 localStorage.setItem('formdata3Set', formdata3);
// set the current time as the id to make it unique id
 var d = new Date();
 var new_id = d.getTime();
 localStorage.setItem('new_idSet', new_id);
// proceed to next function
 startDB(); 
}

function startDB() {
 var db = window.openDatabase("Database", "1.0", "DEMO", 2000000);
 db.transaction(populateDB, errorCB, successCB);
}

// Form the query

function populateDB(tx) {
 var formdata1Get = localStorage.getItem('formdata1Set'); // get data from localStorage
 var formdata2Get = localStorage.getItem('formdata2Set');
 var formdata3Get = localStorage.getItem('formdata3Set');
 var new_idGet = localStorage.getItem('new_idSet');
// if no data has been entered, show note and stop the process
 if (formdata1Get.length &lt; 1 &amp;&amp; formdata2Get.length &lt; 1 &amp;&amp; formdata3Get.length &lt; 1) { 
 document.getElementById("output").innerHTML = "\nPLEASE ENTER DATA"; return false; 
 }
 tx.executeSql('CREATE TABLE IF NOT EXISTS DEMO (id TEXT NOT NULL, data1 TEXT NULL, data2 TEXT NULL, data3 TEXT NULL)'); 
 tx.executeSql('INSERT INTO DEMO (id, data1, data2, data3) VALUES (\"' + new_idGet + '\"' + ', \"' + formdata1Get + '\", \"' + formdata2Get + '\", \"' + formdata3Get + '\")');
 queryDB(tx);
}

// Execute the query, grabbing all the data

function queryDB(tx) {
 tx.executeSql("SELECT * FROM DEMO", [], querySuccess, errorCB);
}

function querySuccess(tx, results) {
 var len = results.rows.length;
 console.log("Returned rows = " + results.rows.length);
// set output, output2 to blank so values are not appended to previous values
 document.getElementById("output").innerHTML = "";
 document.getElementById("output2").innerHTML = "";
// loop through rows as many times as there are row results
 for (var i = 0; i &lt; len; i++) { 
 var rowid = results.rows.item(i).id;
// Display the query results within &lt;textarea id="output"&gt;&lt;/textarea&gt;
 document.getElementById("output").innerHTML += "\nID = " + results.rows.item(i).id +
 "\ndata1 = " + results.rows.item(i).data1 +
 "\ndata2 = " + results.rows.item(i).data2 +
 "\ndata3 = " + results.rows.item(i).data3 + "\n";
 
// Display the query results as a table within &lt;div id="output2"&gt;&lt;/div&gt;
 document.getElementById("output2").innerHTML += "&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;button class='buttonDel' onclick='delRecord(\"" + rowid + "\")' value='Delete'&gt;Delete&lt;/button&gt;&lt;br&gt;" + results.rows.item(i).id + "&lt;/td&gt;&lt;td&gt;" + results.rows.item(i).data1 + "&lt;/td&gt;&lt;td&gt;" + results.rows.item(i).data2 + "&lt;/td&gt;&lt;td&gt;" + results.rows.item(i).data3 + "&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;";
 console.log("rowid = " + rowid); 
 }
// reset form input fields to blank
 var form = document.getElementById("userInput"); 
 form.data1.value = "";
 form.data2.value = "";
 form.data3.value = ""; 
}

// Show DB onload (next two functions)

function showDB(tx) {
 var db = window.openDatabase("Database", "1.0", "DEMO", 2000000);
 db.transaction(createDB, errorCB, successCB);
}
function createDB(tx) {
 tx.executeSql("SELECT * FROM DEMO", [], querySuccess, errorCB);
}

// Delete a row in the DB from button

function delRecord(rowid) {
 var db = window.openDatabase("Database", "1.0", "DEMO", 2000000);
 db.transaction(
 function (tx) {
 tx.executeSql("DELETE FROM demo WHERE id = ?", [rowid]);
 }
 ); 
 document.getElementById("output").innerHTML = "";
 document.getElementById("output2").innerHTML = "";
 location.reload(false); // refresh page to show changes
}

// Transaction success callback

function successCB() {
 console.log("_______ Success! _______");
}

// Transaction error callback

function errorCB(err) {
 if (err.code == "0") {
 console.log("0 - UNKNOWN_ERR: The transaction failed for reasons unrelated to the database itself and not covered by any other error code.");
 }
 if (err.code == "1") {
 console.log("1 - DATABASE_ERR: The statement failed for database reasons not covered by any other error code.");
 }
 if (err.code == "2") {
 console.log("2 - VERSION_ERR: The operation failed because the actual database version was not what it should be. For example, a statement found that the actual database version no longer matched the expected version of the Database or DatabaseSync object, or the Database.changeVersion() or DatabaseSync.changeVersion() methods were passed a version that doesn't match the actual database version.");
 }
 if (err.code == "3") {
 console.log("3 - TOO_LARGE_ERR: The statement failed because the data returned from the database was too large. The SQL 'LIMIT' modifier might be useful to reduce the size of the result set.");
 }
 if (err.code == "4") {
 console.log("4 - QUOTA_ERR: The statement failed because there was not enough remaining storage space, or the storage quota was reached and the user declined to give more space to the database.");
 }
 if (err.code == "5") {
 console.log("5 - SYNTAX_ERR: The statement failed because of a syntax error, or the number of arguments did not match the number of ? placeholders in the statement, or the statement tried to use a statement that is not allowed, such as BEGIN, COMMIT, or ROLLBACK, or the statement tried to use a verb that could modify the database but the transaction was read-only.");
 }
 if (err.code == "6") {
 console.log("6 - CONSTRAINT_ERR: An INSERT, UPDATE, or REPLACE statement failed due to a constraint failure. For example, because a row was being inserted and the value given for the primary key column duplicated the value of an existing row.");
 }
 if (err.code == "7") {
 console.log("7 - TIMEOUT_ERR: A lock for the transaction could not be obtained in a reasonable time.");
 }
}


// "drop (delete) database" sequence, next two functions

function dropDb() {
// erase localStorage
 window.localStorage.clear();
// erase form fields
 var form = document.getElementById("userInput"); 
 form.data1.value = "";
 form.data2.value = "";
 form.data3.value = "";
 document.getElementById("output").innerHTML = "";
 document.getElementById("output2").innerHTML = "";
// start the "drop database" sequence
 var db = window.openDatabase("Database", "1.0", "DEMO", 2000000);
 db.transaction(dropDatabase, errorCB, successCB);
}
function dropDatabase(tx) {
 tx.executeSql('DROP TABLE IF EXISTS DEMO');
 console.log("_______ Table Dropped! _______");
}

// Show the DB contents on page load
showDB(); 
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;!-- ********************* HMTL5 Storage end *********************** --&gt;</pre>
<p>1. Prepare the files in the terminal:</p>
<p>cordova prepare android</p>
<p>2. Compile the apk file:</p>
<p>cordova compile android</p>
<p>3. Locate the apk file at platforms/android/bin/CordovaAPI-debug.apk and put it on your device. I updated to 3.4.0 and found the apk in platforms/android/ant-build/</p>
<p>4. When the page opens, tap the data fields and enter information. Tap on the Insert Data button to insert records into the table. Scroll down to see the data in the large field and in table format further down. Tap on the Delete button in a row to delete that row. Tap on the Delete Database button to remove all content from the database and fields.</p>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/03/storage-delete1.jpg"><img class="aligncenter size-full wp-image-1176" src="https://iphonedevlog.files.wordpress.com/2014/03/storage-delete1.jpg?w=660" alt="Storage, user-entry DB, top"   /></a><a href="https://iphonedevlog.files.wordpress.com/2014/03/storage-delete2.jpg"><img class="aligncenter size-full wp-image-1177" src="https://iphonedevlog.files.wordpress.com/2014/03/storage-delete2.jpg?w=660" alt="Storage, user-entry DB, bottom"   /></a></p>
<p>&nbsp;</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova-apis/'>Cordova APIs</a>, <a href='https://iphonedevlog.wordpress.com/tag/database/'>database</a>, <a href='https://iphonedevlog.wordpress.com/tag/localstorage/'>localStorage</a>, <a href='https://iphonedevlog.wordpress.com/tag/web-storage/'>Web storage</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1139/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1139/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1139/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1139/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1139/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1139/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1139/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1139/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1139/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1139/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1139/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1139/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1139&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/03/21/cordova-websql-database-with-user-added-data/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/03/storage-delete1.jpg" medium="image">
			<media:title type="html">Storage, user-entry DB, top</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/03/storage-delete2.jpg" medium="image">
			<media:title type="html">Storage, user-entry DB, bottom</media:title>
		</media:content>
	</item>
		<item>
		<title>Adding Cordova APIs to Android via CLI: Prepopulated Database Storage</title>
		<link>https://iphonedevlog.wordpress.com/2014/03/17/adding-cordova-apis-to-android-via-cli-database-storage/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/03/17/adding-cordova-apis-to-android-via-cli-database-storage/#comments</comments>
		<pubDate>Mon, 17 Mar 2014 22:58:19 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[database]]></category>
		<category><![CDATA[localStorage]]></category>
		<category><![CDATA[storage]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1125</guid>
		<description><![CDATA[In this article, we are in part 5 of exploring the Cordova APIs, which started in https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/ Refer to that article to set up your Cordova PhoneGap project files. You&#8217;ll want to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive. The code here creates all the database entries on this HTML page, [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1125&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>In this article, we are in part 5 of exploring the Cordova APIs, which started in <a title="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" href="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" target="_blank">https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/</a> Refer to that article to set up your Cordova PhoneGap project files. You&#8217;ll want to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive.</p>
<p><span id="more-1125"></span></p>
<p>The code here creates all the database entries on this HTML page, not from a server. It is a pre-populated database, and the data can&#8217;t be erased by Android or iPhone (this code was tested in Android 4.3). It is not placed in a volatile memory area.</p>
<p>This is a brief database of five radio control vehicles &#8212; buggies and short-course trucks. When the page is accessed, you&#8217;ll see two buttons. Tapping them will display the data as innerHTML according to whether that keyword is present in the <strong>bodyType</strong> column of the database, either &#8220;Buggies&#8221; or &#8220;Short Course,&#8221; via the tx.executeSql() command:</p>
<pre>tx.executeSql('CREATE TABLE IF NOT EXISTS CARS (id unique, <strong>bodyType</strong> TEXT NOT NULL, category TEXT NOT NULL, name TEXT NULL, photo TEXT NULL, resource TEXT NULL, caption TEXT NULL)');</pre>
<p>Images are pulled from the external server, so an Internet connection is required to display them. Of course, your app can include all the images in-app if necessary (or as space allows).</p>
<p>You&#8217;ll want to change the following terms to fit your own needs:</p>
<p>CARS (name of the table)</p>
<p>bodyType, category, name, photo, resource, caption ( fields in the table)</p>
<p>The localStorage names for the fields, such as &#8220;formBodyStyleSet&#8221; and &#8220;formBodyStyleGet.&#8221;</p>
<p>The innerHTML field names.</p>
<p>Remember to escape the quotes <span style="line-height:1.5em;">in the table field contents </span><span style="line-height:1.5em;">so you don&#8217;t accidentally close off the starting double-quote. That is, field contents begin and end with double-quotes (&#8220;. . .&#8221;), so if your content includes a double-quote, then you&#8217;ll need to add a backslash to the left of the quotes you want to keep, like this: \&#8221;</span></p>
<p>Start a new page in the project and call it storage.html. Copy/paste from this page into that page. Link to it as a button from your index.html page. What you see below is the complete code. No other pages are required. You can even double-click on the file on your hard drive and test-drive it in a browser like Google Chrome. (Cordova.js, though referenced here, isn&#8217;t needed.)</p>
<p>There are no plugins to download nor editing of config.xml.</p>
<pre>&lt;!-- ********************* HMTL5 Storage begin *********************** --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Prepopulated DB (PG Storage Example)&lt;/title&gt;
&lt;meta name="viewport" content="width=device-width, initial-scale = 1.0, user-scalable = no"&gt;
&lt;script type="text/javascript" charset="utf-8" src="cordova.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
// Wait for Cordova to load
document.addEventListener("deviceready", onDeviceReady, false);
// Cordova is ready
// If using &lt;body onload="onDeviceReady();"&gt;, then this will be default data displayed 
 var type = "Buggy"; 

function onDeviceReady() { 
 persistBodyStyle(type);
}
// save memory button's value to localStorage for later insertion into query
function persistBodyStyle(type) {
 var formBodyStyle = type;
 localStorage.setItem('formBodyStyleSet', formBodyStyle); // key, value storage
 startDB();
}
function startDB() {
 var db = window.openDatabase("Database", "1.0", "CARS", 200000);
 db.transaction(populateDB, errorCB, successCB);
}
// Create data here
function populateDB(tx) {
 tx.executeSql('DROP TABLE IF EXISTS CARS');
 tx.executeSql('CREATE TABLE IF NOT EXISTS CARS (id unique, bodyType TEXT NOT NULL, category TEXT NOT NULL, name TEXT NULL, photo TEXT NULL, resource TEXT NULL, caption TEXT NULL)');
 tx.executeSql('INSERT INTO CARS (id, bodyType, category, name, photo, resource, caption) VALUES (1, "Short Course", "SC18", "SC18 Ready-To-Run", "http://www.teamassociated.com/pictures/cars_and_trucks/SC18/RTR/20120.ps_md.jpg", "http://www.teamassociated.com/cars_and_trucks/SC18/RTR/","Now you can enjoy Team Associated\'s world-class performance with true scale authenticity in a 1:18 scale electric truck! The SC18 features a newly designed chassis with a fully enclosed, 2-belt drive train system that is capable of handling the extreme amount of power that today\’s brushless motors and LiPo batteries can dish out. Along with durability, the drive train is sealed to help keep rocks and dirt away from the gears and pulleys.")');
 tx.executeSql('INSERT INTO CARS (id, bodyType, category, name, photo, resource, caption) VALUES (2, "Short Course", "SC10GT", "SC10GT Ready-To-Run", "http://www.teamassociated.com/pictures/cars_and_trucks/SC10GT/SC10GT_RTR_2560x2048_sm.jpg", "http://www.teamassociated.com/cars_and_trucks/SC10GT/RTR/","For many people in the RC world, nothing beats a 2-stroke nitro-breathing engine. From the sound, to the smoke, to the brutal power, nitro delivers an experience in a RC truck like nothing else can. Now you can experience that awesome nitro power in the short-course class with the SC10GT!")');
 tx.executeSql('INSERT INTO CARS (id, bodyType, category, name, photo, resource, caption) VALUES (3, "Short Course", "SC10 4x4", "SC10 4x4 RTR Combo", "http://www.teamassociated.com/pictures/cars_and_trucks/SC10_4x4/RTR_Combo/lucas-body-left-7_7661_md.jpg", "http://www.teamassociated.com/cars_and_trucks/SC10_4x4/RTR_Combo/","The SC10 4x4 Ready-To-Runs are RC replicas of the 800+ horsepower short course trucks driven in the Lucas Oil Off Road Racing Series.")');
 tx.executeSql('INSERT INTO CARS (id, bodyType, category, name, photo, resource, caption) VALUES (4, "Buggy", "RC8", "RC8RS RTR", "http://www.teamassociated.com/pictures/cars_and_trucks/RC8/RTR/80905_md.jpg", "http://www.teamassociated.com/cars_and_trucks/RC8/RTR/","The RC8RS Race Spec RTR is based on the Factory Team RC8, making it the only 1:8 buggy with the high-performance qualities that can live up to Team Associated\'s toughest standards. The RC8RS is a winner right out of the box, having been designed for the highest level of performance and off-road fun, with more suspension travel than any other buggy in its class.")');
 tx.executeSql('INSERT INTO CARS (id, bodyType, category, name, photo, resource, caption) VALUES (5, "Buggy", "RC10 Classic", "RC10 Classic - Limited Release", "http://www.teamassociated.com/pictures/cars_and_trucks/RC10_Classic/RC10_Classic_Kit/6001_md.jpg", "http://www.teamassociated.com/cars_and_trucks/RC10_Classic/RC10_Classic_Kit/","The RC10 started as the vision of Team Associated\'s founder Roger Curtis (RC) and became one of the most iconic RC cars in history. In celebration of the 30th anniversary of the original RC10 we are proud to bring to you the RC10 Classic Kit, a faithful reproduction of Roger\'s world championship-winning design that changed the world of RC off-road racing forever.")');
 queryDB(tx);
}
// Form the query
function queryDB(tx) {
 var formBodyStyleGet = localStorage.getItem('formBodyStyleSet'); 
 tx.executeSql("SELECT * FROM 'CARS' WHERE bodyType == '" + formBodyStyleGet + "'", [], querySuccess, errorCB);
}
// Display the results within &lt;span id="output"&gt;&lt;/span&gt;
function querySuccess(tx, results) {
 var len = results.rows.length;
 console.log("CARS table: " + len + " rows found."); // get the number of results
 document.getElementById("output").innerHTML = ""; // remove previous content
 for (var i = 0; i &lt; len; i++) { // loop as many times as there are row results
 document.getElementById("output").innerHTML +=
 "&lt;div class='segment'&gt;&lt;p class='title'&gt;" + results.rows.item(i).bodyType + ": " + results.rows.item(i).name + "&lt;/p&gt;" +
 "&lt;img class='pic' src='" + results.rows.item(i).photo + "' width='150px'&gt;" +
 "&lt;p class='caption'&gt;" + results.rows.item(i).caption + "&lt;/p&gt;" +
 "&lt;p class='more'&gt;&lt;a href='" + results.rows.item(i).resource + "'&gt;More&lt;/a&gt;&lt;/p&gt;";
 } document.getElementById("output").innerHTML += "&lt;/div&gt;";
}
// Transaction error callback
function errorCB(err) {
console.log("Error processing SQL: " + err.code);
}
// Transaction success callback
function successCB() {

}
&lt;/script&gt;
&lt;style type="text/css"&gt;
.buttonClass, h2, p {
 font-family: "Helvetica"; color: #000; font-size:1em;
}
.buttonClass {
 border-radius:8px; background-color:#fff;
 border:#878787 solid 1px; padding:0 1em;margin:.5em;
 height: 3em; width: 46%;
 text-align:center;
 -webkit-appearance:none;
} 
.segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 -webkit-appearance:none; 
 height: auto; 
}
h2 {
 font-size:1.3em; font-weight: bold;
}
@media screen and (max-width:800px) {
 .buttonClass { width: 100%;}
}
/* style the query output */
p { 
 text-align:left; margin-left: 170px; 
}
p.title { 
 font-weight:bold;font-size:1em;text-align:center; color:#000
}
p.more { 
 font-size:.8em;text-align:center;font-style:italic;
}
a { 
 color:#666
}
img { 
 width:150px;-webkit-border-radius: 5px;
 -moz-border-radius: 5px;
 border-radius: 5px;
 -webkit-box-shadow: 0px 0px 6px 6px #ddd; /* Safari 3-4, iOS 4.0.2 – 4.2, Android 2.3+ */
 box-shadow: 0px 0px 6px 6px #ddd; /* Opera 10.5, IE9, Firefox 4+, Chrome 6+, iOS 5 */
 float: left;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;!-- Can use &lt;body onload="onDeviceReady();"&gt; to start page with default table rows --&gt;
&lt;body&gt;
&lt;input type="button" class="buttonClass" onclick='window.location="index.html"' value="Return"&gt;
&lt;!-- "value" = the "bodyType" column values --&gt; 
 &lt;input type="button" class="buttonClass" id="buggy" value="Buggy" onclick='persistBodyStyle("Buggy");'&gt; 
 &lt;input type="button" class="buttonClass" id="shortCourse" value="Short Course" onclick="persistBodyStyle('Short Course');"&gt;
&lt;br&gt;&lt;br&gt;
 &lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/03/17/adding-cordova-apis-to-android-via-cli-database-storage/"' value="View Code on iPhoneDevLog"&gt;
&lt;/div&gt;
 &lt;span id="output"&gt;&lt;/span&gt; &lt;!-- show the database here --&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;!-- ********************* HMTL5 Storage end *********************** --&gt;</pre>
<p>1. After you&#8217;ve got the above page saved in your project&#8217;s www/ folder, prepare the files in the terminal:</p>
<pre>cordova prepare android</pre>
<p>2. Compile the apk file:</p>
<pre>cordova compile android</pre>
<p>3. Locate the apk file at platforms/android/bin/CordovaAPI-debug.apk and put it on your device.</p>
<p>4. When the page opens, you&#8217;ll see two buttons, Buggies and Short Course. Tap them to show their data in the database.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/database/'>database</a>, <a href='https://iphonedevlog.wordpress.com/tag/localstorage/'>localStorage</a>, <a href='https://iphonedevlog.wordpress.com/tag/storage/'>storage</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1125/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1125/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1125/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1125/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1125/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1125/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1125/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1125/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1125/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1125/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1125/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1125/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1125&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/03/17/adding-cordova-apis-to-android-via-cli-database-storage/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Adding Cordova APIs to Android via CLI: File API</title>
		<link>https://iphonedevlog.wordpress.com/2014/02/21/adding-cordova-apis-to-android-via-cli-file-api/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/02/21/adding-cordova-apis-to-android-via-cli-file-api/#respond</comments>
		<pubDate>Fri, 21 Feb 2014 19:06:23 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Cordova APIs]]></category>
		<category><![CDATA[File API]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1100</guid>
		<description><![CDATA[In this article, we are in part 4 of exploring the Cordova APIs, which started in https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/ Refer to that article to set up your Cordova PhoneGap project files. You&#8217;ll want to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive. On this page, we&#8217;ll explore the File API from the perspective [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1100&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p><span style="line-height:1.5em;">In this article, we are in part 4 of exploring the Cordova APIs, which started in <a title="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" href="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" target="_blank">https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/</a> Refer to that article to set up your Cordova PhoneGap project files. You&#8217;ll want to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive. On this page, we&#8217;ll explore the File API from the perspective of getting our feet wet.</span></p>
<p><span id="more-1100"></span></p>
<p>You can continue the code by copying/pasting from this page into that project&#8217;s index.html page, or start a new page and link to it via a button on that page to access it (which is what I did). If you are starting a new page, copy/paste this HTML skeleton into a file.html page to follow along:</p>
<pre>&lt;!-- ********************* HMTL5 Skeleton begin *********************** --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;meta charset="utf-8" /&gt;
 &lt;meta name="format-detection" content="telephone=no" /&gt;
 &lt;!-- WARNING from Cordova: for iOS 7, remove the width=device-width and height=device-height attributes. See https://issues.apache.org/jira/browse/CB-4323 --&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;
&lt;title&gt;Cordova APIs&lt;/title&gt;
&lt;style type="text/css"&gt;
 input[type="text"] { 
 border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:0 1em;margin:.5em;
 height: 45px;
 font-family: "Helvetica"; color: #000; font-size:1em; text-align:center;
 -webkit-appearance:none;
 }
 .buttonClass {
 border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:0 1em;margin:.5em;
 height: 45px;
 font-family: "Helvetica"; color: #000; font-size:1em; text-align:center;
 -webkit-appearance:none;
 } 
 .segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 font-family: "Helvetica"; color: #000; font-size:1.3em; text-align:left;
 -webkit-appearance:none; 
 }
 &lt;/style&gt;
 &lt;script type="text/javascript" src="cordova.js"&gt;&lt;/script&gt; 
&lt;/head&gt; 
&lt;body&gt; 
&lt;/body&gt; 
&lt;/html&gt; 
&lt;!-- ********************* HMTL5 Skeleton end *********************** --&gt;</pre>
<h2>File Write</h2>
<p>File API is an application programming interface (API) to read, write, and navigate file system hierarchies, based on the <a title="http://www.w3.org/TR/FileAPI/" href="http://www.w3.org/TR/FileAPI/" target="_blank">w3c file api.</a> We’ll follow this page from the docs to set it up: <a title="http://docs.phonegap.com/en/3.3.0/cordova_file_file.md.html#File" href="http://docs.phonegap.com/en/3.3.0/cordova_file_file.md.html#File" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_file_file.md.html#File</a> Please review the page to gain an understanding of the steps we’ll be following.</p>
<p>We will programmatically create a text file in the device&#8217;s root directory, allow the user to write in it, then display its contents on the same HTML page. We&#8217;ll also provide a button to overwrite the contents to clear it.</p>
<p>We&#8217;ll be trying out the methods:</p>
<p><strong>seek:</strong> Moves the file pointer to the specified byte.</p>
<p><strong>truncate:</strong> Shortens the file to the specified length.</p>
<p><strong>write:</strong> Writes data to the file.</p>
<p>1. Set the project&#8217;s directory in Terminal (type cd in the terminal, drag the folder to the terminal, click on the terminal to select it, hit Enter) and download the plugin:</p>
<pre>cordova plugin add org.apache.cordova.file</pre>
<p>2. Add the file-transfer plug-in:</p>
<pre>cordova plugin add org.apache.cordova.file-transfer</pre>
<p>3. Make sure they are available:</p>
<pre>cordova plugin ls</pre>
<p>4. Add to config.xml:</p>
<pre>&lt;feature name="File"&gt;
 &lt;param name="android-package" value="org.apache.cordova.file.FileUtils" /&gt;
&lt;/feature&gt;
&lt;feature name="FileTransfer"&gt;
 &lt;param name="android-package" value="org.apache.cordova.filetransfer.FileTransfer" /&gt;
&lt;/feature&gt;</pre>
<p>5. Make sure this is in AndroidManifest.xml; if not, add it:</p>
<pre>&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;</pre>
<p>6. Add the following to just above the &lt;/body&gt; tag:</p>
<pre>&lt;!-- ********************* Write File begin *********************** --&gt;
&lt;div class="segment"&gt;
 &lt;h2&gt;Write File&lt;/h2&gt;
 &lt;p&gt;When this page was loaded, it automatically created a CordovaAPI.txt file in the root directory of the device.&lt;/p&gt;
&lt;p&gt;Add your own words to the file:&lt;/p&gt;
&lt;form id="myForm" name="myForm2"&gt;
&lt;input type="text" id="userInput" name="userInput2"&gt;
&lt;input type="button" class="buttonClass" value="Submit" onclick="writeToFile()"&gt;
&lt;/form&gt;
&lt;input type="button" class="buttonClass" onclick="deleteContents()" value="Delete the file contents"&gt;
&lt;br&gt;&lt;br&gt;
 &lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/02/21/adding-cordova-apis-to-android-via-cli-file-api/"' value="View Code on iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
// Wait for device API libraries to load
 document.addEventListener("deviceready", onDeviceReady, false);
 // device APIs are available

 function onDeviceReady() {
 }

 function writeToFile() {
 window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, fail);
 }
// put this file in the root of the device's file system
 function gotFS(fileSystem) {
 fileSystem.root.getFile("CordovaAPI.txt", {create: true, exclusive: false}, gotFileEntry, fail);
 }
function gotFileEntry(fileEntry) {
 fileEntry.createWriter(gotFileWriter, fail);
 }

function gotFileWriter(writer) {
 var form = document.getElementById('myForm'); // get the form
 var userText = form.userInput.value; // get the text field value
 writer.seek(writer.length); // get the length of the file; go to end
 writer.write('\n\n' + userText); // skip a space and start writing
 writer.onwriteend = function(evt){
 alert("You wrote ' " + userText + " ' at the end of the file.");
 } 
 form.userInput2.value = "";
 readTheFile(); // show new file contents
}
// ******* delete the file contents **********
function deleteContents() {
 window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS3, fail);
 }
// get this file in the root of the device's file system
 function gotFS3(fileSystem) {
 fileSystem.root.getFile("CordovaAPI.txt", {create: false, exclusive: false}, gotFileEntry3, fail);
 }
function gotFileEntry3(fileEntry) {
 fileEntry.createWriter(gotFileWriter3, fail);
 }

function gotFileWriter3(writer) {
 writer.onwriteend = function(evt) {
 writer.truncate(writer.length); // truncate entire file
 writer.onwriteend = function(evt) {
 writer.seek(0); // start at beginning of file
 writer.write(""); // add no content
 writer.onwriteend = function(evt){
 alert("You deleted the file contents.");
 }
 readTheFile(); // show file contents
 };
 };
 writer.write(""); 
 }
function fail(error) {
 console.log(error.code);
 }
&lt;/script&gt;
&lt;!-- ********************* Write File end *********************** --&gt;</pre>
<p>The above steps are used to write a file to the root directory of the device, with a button provided to delete the contents of the file. Now follow the next steps to read the file, displaying the contents onscreen.</p>
<h2>File Read</h2>
<p>In this step, we&#8217;ll display the above CordovaAPI.txt contents on the page.</p>
<p>We&#8217;ll be trying out the methods:</p>
<p><strong>readAsDataURL:</strong> Read file and return data as a base64-encoded data URL. Display it onscreen through innerHTML.</p>
<p><strong>readAsText:</strong> Reads text file. Display it onscreen through innerHTML.</p>
<p>Steps 1-5 above already added the File API and other entries needed for the read functions.</p>
<p>1. Continuing from the steps above, add the following to just above the &lt;/body&gt; tag:</p>
<pre>&lt;!-- ********************* Read File begin *********************** --&gt;
&lt;div class="segment"&gt;
 &lt;h2&gt;Read File&lt;/h2&gt;
 &lt;p style="font-style:italic;"&gt;The contents of the above file in two different versions, as data URL and data text:&lt;/p&gt;
 &lt;div class="segment"&gt;
 &lt;p id="data1"&gt;&lt;/p&gt;
 &lt;br&gt;
 &lt;p id="data2"&gt;&lt;/p&gt;
 &lt;/div&gt;
 &lt;p&gt;You can hold a finger over the above contents and choose to copy it or share via email, according to the options on your device.&lt;/p&gt;
 &lt;p&gt;Now exit this app, open a file reading program, navigate to the root of the device, and scroll to the CordovaAPI.txt file. Open to read it. 
&lt;/p&gt;
&lt;br&gt;&lt;br&gt;
 &lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/02/21/adding-cordova-apis-to-android-via-cli-file-api/"' value="View Code on iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
// Wait for device API libraries to load
 document.addEventListener("deviceready", onDeviceReady, false);
// device APIs are available
 function onDeviceReady() {
 window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS2, fail);
 }

function readTheFile() {
 window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS2, fail);
 }

 function gotFS2(fileSystem) {
 fileSystem.root.getFile("CordovaAPI.txt", null, gotFileEntry2, fail);
 }
function gotFileEntry2(fileEntry) {
 fileEntry.file(gotFile2, fail);
 }
function gotFile2(file){
 readDataUrl(file);
 readAsText(file);
 }

// puts the txt contents on the page as data URL
 function readDataUrl(file) {
 var reader = new FileReader();
 reader.onloadend = function(evt) {
 var element = document.getElementById('data1');
 element.innerHTML = '&lt;strong&gt;Read as data URL:&lt;/strong&gt; &lt;br&gt;&lt;pre&gt;' + evt.target.result + '&lt;/pre&gt;';
 };
 reader.readAsDataURL(file);
 }
// puts the txt contents on the page as data text
 function readAsText(file) {
 var reader = new FileReader();
 reader.onloadend = function(evt) {
 var element = document.getElementById('data2');
 element.innerHTML = '&lt;strong&gt;Read as data text:&lt;/strong&gt; &lt;br&gt;&lt;pre&gt;' + evt.target.result + '&lt;/pre&gt;';
 };
 reader.readAsText(file);
 }
function fail(error) {
 console.log(error.code);
 }
&lt;/script&gt;
&lt;!-- ********************* Read File end *********************** --&gt;</pre>
<p>2. Prepare the files in the terminal:</p>
<pre>cordova prepare android</pre>
<p>3. Compile the apk file:</p>
<pre>cordova compile android</pre>
<p>(If you watch the platforms/android/bin/ folder, you can see the files as they are removed and replaced.)</p>
<p>4. Locate the apk file at platforms/android/bin/CordovaAPI-debug.apk and put it on your device.</p>
<p>5. When the page opens, it creates a CordovaAPI.txt file in the root directory of the device. Add text to the text input box and Submit. Look lower to see the file data read back in two different formats. Close the app, open a file-reading app, and navigate the root directory to the CordovaAPI.txt file and open it.</p>
<p><img class="aligncenter size-full wp-image-1105" src="https://iphonedevlog.files.wordpress.com/2014/02/file-write.jpg?w=660" alt="file-write"  /></p>
<p><img class="aligncenter size-full wp-image-1104" src="https://iphonedevlog.files.wordpress.com/2014/02/file-read.jpg?w=660" alt="file-read"  /></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova-apis/'>Cordova APIs</a>, <a href='https://iphonedevlog.wordpress.com/tag/file-api/'>File API</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1100/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1100/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1100/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1100/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1100/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1100/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1100/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1100/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1100/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1100/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1100/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1100/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1100&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/02/21/adding-cordova-apis-to-android-via-cli-file-api/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/02/file-write.jpg" medium="image">
			<media:title type="html">file-write</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/02/file-read.jpg" medium="image">
			<media:title type="html">file-read</media:title>
		</media:content>
	</item>
		<item>
		<title>Adding Cordova APIs to Android via CLI: Geolocation, Globalization, Notification</title>
		<link>https://iphonedevlog.wordpress.com/2014/02/20/adding-cordova-apis-to-android-via-cli-geolocation-globalization-notification/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/02/20/adding-cordova-apis-to-android-via-cli-geolocation-globalization-notification/#comments</comments>
		<pubDate>Thu, 20 Feb 2014 21:19:40 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[Geolocation]]></category>
		<category><![CDATA[Globalization]]></category>
		<category><![CDATA[Notification]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1094</guid>
		<description><![CDATA[In this article, we are in part 3 of exploring the Cordova APIs, which started in https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/ Refer to that article to set up your Cordova PhoneGap project files. You&#8217;ll need to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive. On this page, we&#8217;ll explore the Geolocation, Globalization, Notification APIs from the perspective of [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1094&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p><span style="line-height:1.5em;">In this article, we are in part 3 of exploring the Cordova APIs, which started in <a title="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" href="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" target="_blank">https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/</a> Refer to that article to set up your Cordova PhoneGap project files. You&#8217;ll need to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive. On this page, we&#8217;ll explore the Geolocation, Globalization, Notification APIs from the perspective of getting our feet wet.<span id="more-1094"></span></span></p>
<p>You can continue the code by copying/pasting from this page into that project&#8217;s index.html page, or start a new page and link to it via a button on that page to access it (which is what I did). If you are starting a new page, copy/paste this HTML skeleton into a page3.html page to follow along:</p>
<pre>&lt;!-- ********************* HMTL5 Skeleton begin *********************** --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;meta charset="utf-8" /&gt;
 &lt;meta name="format-detection" content="telephone=no" /&gt;
 &lt;!-- WARNING from Cordova: for iOS 7, remove the width=device-width and height=device-height attributes. See https://issues.apache.org/jira/browse/CB-4323 --&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;
&lt;title&gt;Cordova APIs&lt;/title&gt;
&lt;style type="text/css"&gt;
 .buttonClass {
 border-radius:8px; background-color:#fff;
 border:#878787 solid 1px; padding:1em .5em;margin:.5em;
 width: 46%;
 font-family: "Helvetica"; color: #000; font-size:1em; text-align:center;
 -webkit-appearance:none;
 } 
 .segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 font-family: "Helvetica"; color: #000; font-size:1.3em; text-align:left;
 -webkit-appearance:none; 
 }
 @media screen and (max-width:700px) {
 .buttonClass { width: 100%;}
 }
 &lt;/style&gt;
 &lt;script type="text/javascript" src="cordova.js"&gt;&lt;/script&gt; 
&lt;/head&gt; 
&lt;body&gt;
&lt;/body&gt; 
&lt;/html&gt; 
&lt;!-- ********************* HMTL5 Skeleton end *********************** --&gt;</pre>
<h2>Geolocation</h2>
<p>An application programming interface (API) to indicate the device&#8217;s location on earth. We’ll follow this page from the docs to set it up: <a title="http://docs.phonegap.com/en/3.3.0/cordova_geolocation_geolocation.md.html#Geolocation" href="http://docs.phonegap.com/en/3.3.0/cordova_geolocation_geolocation.md.html#Geolocation" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_geolocation_geolocation.md.html#Geolocation</a> Please review the page to gain an understanding of the steps we’ll be following.</p>
<p>1. Set the project&#8217;s directory in Terminal (type cd in the terminal, drag the folder to the terminal, click on the terminal to select it, hit Enter) and download the plugin:</p>
<pre>cordova plugin add org.apache.cordova.geolocation</pre>
<p>2. Use the ls (list) command to make sure it&#8217;s downloaded:</p>
<pre>cordova plugin ls</pre>
<p>3. Open CordovaAPI/platforms/android/res/xml/config.xml (NOT the config.xml in your www root folder!) in a text file and add the following to just above &lt;/widget&gt; and save:</p>
<pre>&lt;feature name="Geolocation"&gt;
 &lt;param name="android-package" value="org.apache.cordova.geolocation.GeoBroker" /&gt;
&lt;/feature&gt;</pre>
<p>5. In platforms/android/AndroidManifest.xml make sure these lines are there, or add them:</p>
<pre>&lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;</pre>
<p>7. In index.html (or page3.html), remove everything between the &lt;body&gt;&lt;/body&gt; tags and replace with the following.</p>
<pre>&lt;!-- ********************* Read Geolocation begin *********************** --&gt;
&lt;div class="segment"&gt;
 &lt;h2&gt;Geolocation&lt;/h2&gt;
&lt;p style="font-style:italic;"&gt;"Heading:" 360 or 0 = North. 90 = East. 180 = South. 270 = West.&lt;/p&gt;
&lt;p id="geolocation"&gt;&lt;/p&gt;
&lt;input type="button" class="buttonClass" onclick="clearGeoWatch();" value="Stop Geolocation"&gt;
&lt;input type="button" class="buttonClass" onclick="startGeolocation();" value="Start Geolocation"&gt;
&lt;br&gt;&lt;br&gt;
 &lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/02/20/adding-cordova-apis-to-android-via-cli-geolocation-globalization-notification/"' value="View Code On iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
// Wait for device API libraries to load
 document.addEventListener("deviceready", onDeviceReady, false);
var watchGeoID = null;
// device APIs are available
 function onDeviceReady() {
 startGeolocation();
 }

 // Throw an error if no update is received every 30 seconds
 // show notice
 function startGeolocation() {
 var element = document.getElementById('geolocation');
 element.innerHTML = 'Finding geolocation every 30 seconds...'
 var options = { enableHighAccuracy: true, timeout: 30000 };
 watchGeoID = navigator.geolocation.watchPosition(onSuccess, onError, options);
 }
// onSuccess Geolocation, show information
 function onSuccess(position) {
 var element = document.getElementById('geolocation');
 element.innerHTML = 
'&lt;strong&gt;Latitude:&lt;/strong&gt; ' + position.coords.latitude + '&lt;br /&gt;' +
'&lt;strong&gt;Longitude: &lt;/strong&gt; ' + position.coords.longitude + ' &lt;br /&gt;' +
'&lt;strong&gt;Altitude&lt;/strong&gt; (in meters): ' + position.coords.altitude + ' &lt;br /&gt;' +
'&lt;strong&gt;Accuracy&lt;/strong&gt; (in meters): ' + position.coords.accuracy + ' &lt;br /&gt;' +
'&lt;strong&gt;Altitude Accuracy:&lt;/strong&gt; ' + position.coords.altitudeAccuracy + ' &lt;br /&gt;' +
'&lt;strong&gt;Heading&lt;/strong&gt; (direction of travel): ' + position.coords.heading + ' &lt;br /&gt;' +
'&lt;strong&gt;Speed&lt;/strong&gt; (meters per second): ' + position.coords.speed + ' &lt;br /&gt;' +
'&lt;strong&gt;Timestamp:&lt;/strong&gt; ' + position.timestamp + ' &lt;br /&gt;';
 }
// stop the function and show notice
function clearGeoWatch() {
 var element = document.getElementById('geolocation');
 element.innerHTML = '&lt;span style="color:red"&gt;Geolocation turned off.&lt;/span&gt;';
 if (watchGeoID) {
 navigator.geolocation.clearWatch(watchGeoID);
 watchGeoID = null;
 }
 }

 // onError Callback receives a PositionError object
 function onError(error) {
 // alert('code: ' + error.code + '\n' +
 // 'message: ' + error.message + '\n');
 var element = document.getElementById('geolocation');
 element.innerHTML =+ '&lt;br&gt;' + error.code + error.message;
 }
&lt;/script&gt;
&lt;!-- ********************* Geolocation end *********************** --&gt;</pre>
<p>6. Prepare the files:</p>
<pre>cordova prepare android</pre>
<p>7. Compile the project:</p>
<pre>cordova compile android</pre>
<p>It is saved as platforms/android/bin/CordovaAPI-debug.apk</p>
<p>8. Install the apk in your device.</p>
<p>9. Make sure your device has been enabled for location access in your device&#8217;s Settings.</p>
<p>10. A moment after opening the page, the geolocation information should appear and refresh every 30 seconds.</p>
<p>If you have any problems getting any Android-related PG code to work, then open ADT or Eclipse then type in terminal:</p>
<pre>cordova emulate android</pre>
<p>Then in the console in Eclipse (navigate to Window &gt; Show View &gt; Debug) look for meaningful, related error messages as code executes when clicking on buttons or whatever. You&#8217;ll want to post that error message to the <a title="https://groups.google.com/" href="https://groups.google.com/" target="_blank">https://groups.google.com/</a> or <a title="https://stackoverflow.com" href="https://stackoverflow.com" target="_blank">https://stackoverflow.com</a> web sites along with your environment information, such as:<br />
<em>Mac OS X 10.9.1 on latest Mac Mini</em><br />
<em>PG 3.3</em><br />
<em>for Android 4.3, 4.4 v19</em><br />
<em>not for PG Build</em><br />
<em>ADT v22.0.1 with Eclipse platform </em><br />
<em>Test device: Nexus 7 with 4.3</em></p>
<p><img class="aligncenter size-large wp-image-1117" src="https://iphonedevlog.files.wordpress.com/2014/02/geolocation.jpg?w=660" alt="geolocation"  /></p>
<h2>Globalization</h2>
<p>Globalization &#8220;obtains information and performs operations specific to the user&#8217;s locale and timezone.&#8221;</p>
<p>We’ll follow this page from the docs to set it up: <a title="http://docs.phonegap.com/en/3.3.0/cordova_globalization_globalization.md.html#Globalization" href="http://docs.phonegap.com/en/3.3.0/cordova_globalization_globalization.md.html#Globalization" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_globalization_globalization.md.html#Globalization</a> Please review the page to gain an understanding of the steps we’ll be following.</p>
<p>1. Set the project&#8217;s directory in Terminal and download the plugin:</p>
<pre>cordova plugin add org.apache.cordova.globalization</pre>
<p>2. Use the ls (list) command to make sure it&#8217;s downloaded:</p>
<pre>cordova plugin ls</pre>
<p>3. Open CordovaAPI/platforms/android/res/xml/config.xml in a text file and add the following to just above &lt;/widget&gt; and save:</p>
<pre>&lt;feature name="Globalization"&gt;
 &lt;param name="android-package" value="org.apache.cordova.globalization.Globalization" /&gt;
&lt;/feature&gt;</pre>
<p>4. In index.html (or page3.html), add the following to just above the &lt;/body&gt; tag:</p>
<pre>&lt;!-- ********************* Globalization begin *********************** --&gt;
&lt;div class="segment"&gt;
 &lt;h2&gt;Globalization&lt;/h2&gt;

&lt;!-- &lt;input type="button" class="buttonClass" id="checkLanguageButton" value="checkLanguage"&gt; --&gt;
 &lt;input type="button" class="buttonClass" onclick='checkLocale()' value="checkLocale"&gt;
&lt;!-- &lt;input type="button" class="buttonClass" onclick='checkDateString()' value="checkDateString"&gt; --&gt;
 &lt;input type="button" class="buttonClass" onclick='checkStringDate()' value="checkStringDate"&gt;
 &lt;input type="button" class="buttonClass" onclick='checkDatePattern()' value="checkDatePattern"&gt;
 &lt;input type="button" class="buttonClass" onclick='checkDateNames()' value="checkDateNames"&gt;
 &lt;input type="button" class="buttonClass" onclick='checkDayLightSavings()' value="checkDayLightSavings"&gt;
 &lt;input type="button" class="buttonClass" onclick='checkFirstDay()' value="checkFirstDay"&gt;
 &lt;input type="button" class="buttonClass" onclick='checkNumber()' value="checkNumber"&gt;
 &lt;input type="button" class="buttonClass" onclick='checkParsedNumber()' value="checkParsedNumber"&gt;
 &lt;input type="button" class="buttonClass" onclick='checkPattern()' value="checkPattern"&gt;
 &lt;input type="button" class="buttonClass" onclick='checkError()' value="checkError"&gt;
&lt;br&gt;&lt;br&gt; 
 &lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/02/20/adding-cordova-apis-to-android-via-cli-geolocation-globalization-notification/"' value="View Code On iPhoneDevLog"&gt;
&lt;/div&gt;

&lt;script type="text/javascript" charset="utf-8"&gt;
/*
function checkLanguage() {
 navigator.globalization.getPreferredLanguage(
 function (language) {alert('language: ' + language.value + '\n');},
 function () {alert('Error getting language\n');}
 );
 }
*/
function checkLocale() {
 navigator.globalization.getLocaleName(
 function (locale) {alert('locale: ' + locale.value + '\n');},
 function () {alert('Error getting locale\n');}
 );
 }
/*
function checkDateString() {
 navigator.globalization.dateToString(
 new Date(),
 function (date) {alert('date: ' + date.value + '\n');},
 function () {alert('Error getting dateString\n');,
 {formatLength:'short', selector:'date and time'}}
 );
 }
*/
function checkStringDate() {
 navigator.globalization.stringToDate(
 '9/25/2012',
 function (date) {alert('month:' + date.month +
 ' day:' + date.day +
 ' year:' + date.year + '\n');},
 function () {alert('Error getting date\n');},
 {selector:'date'}
 );
 }
function checkDatePattern() {
 navigator.globalization.getDatePattern(
 function (date) {alert('pattern: ' + date.pattern + '\n');},
 function () {alert('Error getting pattern\n');},
 {formatLength:'short', selector:'date and time'}
 );
 }
function checkDateNames() {
 navigator.globalization.getDateNames(
 function (names) {
 for (var i=0; i&lt;names.value.length; i++) {
 alert('month: ' + names.value[i] + '\n');
 }
 },
 function () {alert('Error getting names\n');},
 {type:'wide', item:'months'}
 );
 }
function checkDayLightSavings() {
 navigator.globalization.isDayLightSavingsTime(
 new Date(),
 function (date) {alert('dst: ' + date.dst + '\n');},
 function () {alert('Error getting names\n');}
 );
 }
function checkFirstDay() {
 navigator.globalization.getFirstDayOfWeek(
 function (day) {alert('day: ' + day.value + '\n');},
 function () {alert('Error getting day\n');}
 );
 }
function checkParsedNumber() {
 navigator.globalization.numberToString(
 3.1415926,
 function (number) {alert('number: ' + number.value + '\n');},
 function () {alert('Error getting number\n');},
 {type:'decimal'}
 );
 }
function checkNumber() {
 navigator.globalization.stringToNumber(
 '1234.56',
 function (number) {alert('number: ' + number.value + '\n');},
 function () {alert('Error getting number\n');},
 {type:'decimal'}
 );
 }
function checkPattern() {
 navigator.globalization.getNumberPattern(
 function (pattern) {alert('pattern: ' + pattern.pattern + '\n' +
 'symbol: ' + pattern.symbol + '\n' +
 'fraction: ' + pattern.fraction + '\n' +
 'rounding: ' + pattern.rounding + '\n' +
 'positive: ' + pattern.positive + '\n' +
 'negative: ' + pattern.negative + '\n' +
 'decimal: ' + pattern.decimal + '\n' +
 'grouping: ' + pattern.grouping);},
 function () {alert('Error getting pattern\n');},
 {type:'decimal'}
 );
 }
function successCallback(date) {
 alert('month:' + date.month +
 ' day:' + date.day +
 ' year:' + date.year + '\n');
 }
function errorCallback(error) {
 alert('code: ' + error.code + '\n' +
 'message: ' + error.message + '\n');
 }
function checkError() {
 navigator.globalization.stringToDate(
 'notADate',
 successCallback,
 errorCallback,
 {selector:'foobar'}
 );
 }
&lt;/script&gt;
&lt;!-- ********************* Globalization end *********************** --&gt;</pre>
<p>7. Prepare the files:</p>
<pre>cordova prepare android</pre>
<p>8. Compile the project:</p>
<pre>cordova compile android</pre>
<p>It is saved as platforms/android/bin/CordovaAPI-debug.apk</p>
<p>9. Install the apk in your device.</p>
<p>10. Start the app and go to this page. When the page opens, click on the buttons to get the readouts of the device&#8217;s settings.</p>
<p><img class="aligncenter size-large wp-image-1118" src="https://iphonedevlog.files.wordpress.com/2014/02/globalization.jpg?w=660" alt="globalization"  /></p>
<h2>Notification</h2>
<p>&#8220;Visual, audible, and tactile device notifications.&#8221; We’ll follow this page from the docs to set it up: <a title="http://docs.phonegap.com/en/3.3.0/cordova_notification_notification.md.html#Notification" href="http://docs.phonegap.com/en/3.3.0/cordova_notification_notification.md.html#Notification" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_notification_notification.md.html#Notification</a> Please review the page to gain an understanding of the steps we’ll be following.</p>
<p>1. Set the project&#8217;s directory in Terminal and download the plugin:</p>
<pre>cordova plugin add org.apache.cordova.dialogs</pre>
<p>2. Download this plugin too:</p>
<pre>cordova plugin add org.apache.cordova.vibration</pre>
<p>3. Use the ls command to make sure it&#8217;s downloaded:</p>
<pre>cordova plugin ls</pre>
<p>4. Open CordovaAPI/platforms/android/res/xml/config.xml in a text file and add the following to just above &lt;/widget&gt; and save:</p>
<pre>&lt;feature name="Notification"&gt;
 &lt;param name="android-package" value="org.apache.cordova.dialogs.Notification" /&gt;
&lt;/feature&gt;
&lt;feature name="Vibration"&gt;
 &lt;param name="android-package" value="org.apache.cordova.vibration.Vibration" /&gt;
&lt;/feature&gt;</pre>
<p>5. In platforms/android/AndroidManifest.xml make sure these lines are there, or add them:</p>
<pre>&lt;uses-permission android:name="android.permission.VIBRATE" /&gt;</pre>
<p>6. In index.html (or page3.html), put the following just before the &lt;/body&gt; tag:</p>
<pre>&lt;!-- ********************* Notification begin *********************** --&gt;
&lt;div class="segment"&gt;
 &lt;h2&gt;Notification&lt;/h2&gt;
&lt;input type="button" id="showAlertButton" class="buttonClass" onclick='showAlert(); return false;' value="Show Alert popup"&gt;
&lt;input type="button" id="showConfirmButton" class="buttonClass" onclick='showConfirm(); return false;' value="Show Confirm popup"&gt;
&lt;input type="button" id="showPromptButton" class="buttonClass" onclick='showPrompt(); return false;' value="Show Prompt popup"&gt;
&lt;br&gt;&lt;br&gt;
&lt;input type="button" id="playBeepButton" class="buttonClass" onclick='playBeep(); return false;' value="Play Beep sound"&gt;
&lt;input type="button" id="vibrateButton" class="buttonClass" onclick='vibrate(); return false;' value="Vibrate the device"&gt;
&lt;input type="button" id="vibrateButtonHtml" class="buttonClass" onclick='vibrateHtml(); return false;' value="Vibrate - HTML5 API"&gt;
&lt;br&gt;&lt;br&gt;
 &lt;input type="button" id="" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/02/20/adding-cordova-apis-to-android-via-cli-geolocation-globalization-notification/"' value="View Code On iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
// alert dialog dismissed
 function alertDismissed() {
 alert('You dismissed the Alert.');
 }

 // Show a custom alertDismissed
 function showAlert() {
 navigator.notification.alert(
 'Alert dialog: You are on fire!', // message
 alertDismissed, // callback (do this function next)
 'Game Over', // title
 'Done' // buttonName
 );
 }

function onConfirm(buttonIndex) {
 alert('You selected button ' + buttonIndex + '\n(button 1 = Restart, button 2 = Exit.)');
 }
// Show a custom confirmation dialog
 function showConfirm() {
 navigator.notification.confirm(
 'Confirm dialog: You are the winner!', // message
 onConfirm, // callback to invoke with index of button pressed
 'Game Over', // title
 ['Restart','Exit'] // buttonLabels
 );
 }
function onPrompt(results) {
 alert("You selected button number " + results.buttonIndex + " and entered " + results.input1 + '\n(button 2 = Exit, button 1 = OK.)');
 }
// Show a custom prompt dialog. Android: 3 buttons maximum
 function showPrompt() {
 navigator.notification.prompt(
 'Please enter your name', // message
 onPrompt, // callback (do this function next)
 'Registration', // title
 ['Ok','Exit'], // buttonLabels
 'Jane Doe?' // defaultText
 );
 }
/* Android plays the default Notification ringtone specified under the Settings/Sound &amp; Display panel */
function playBeep() {
 navigator.notification.beep(3);
 }
// Vibrate for 2 seconds using the PhoneGap API
 function vibrate() {
 navigator.notification.vibrate(2000);
 }
// Vibrate for 2 seconds using the HTML5 API
 function vibrateHtml() {
 navigator.vibrate(2000);
 }
&lt;/script&gt;
&lt;!-- ********************* Notification end *********************** --&gt;</pre>
<p>7. Prepare the files:</p>
<pre>cordova prepare android</pre>
<p>8. Compile the project:</p>
<pre>cordova compile android</pre>
<p>It is saved as platforms/android/bin/CordovaAPI-debug.apk</p>
<p>9. Install the apk in your device.</p>
<p>10. Make sure your device has been enabled for sounds and vibration in your device&#8217;s Settings. (My device did not have vibration capability.)</p>
<p>11. Start the app and go to this page. When the page opens, click on the buttons to get the readouts of the device&#8217;s settings.</p>
<p><img class="aligncenter size-large wp-image-1119" src="https://iphonedevlog.files.wordpress.com/2014/02/notification.jpg?w=660" alt="notification"  /></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/geolocation/'>Geolocation</a>, <a href='https://iphonedevlog.wordpress.com/tag/globalization/'>Globalization</a>, <a href='https://iphonedevlog.wordpress.com/tag/notification/'>Notification</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1094/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1094/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1094/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1094/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1094/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1094/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1094/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1094/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1094/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1094/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1094/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1094/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1094&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/02/20/adding-cordova-apis-to-android-via-cli-geolocation-globalization-notification/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/02/geolocation.jpg?w=660" medium="image">
			<media:title type="html">geolocation</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/02/globalization.jpg?w=660" medium="image">
			<media:title type="html">globalization</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/02/notification.jpg?w=660" medium="image">
			<media:title type="html">notification</media:title>
		</media:content>
	</item>
		<item>
		<title>Adding Cordova APIs to Android via CLI: Compass, Connection, Device</title>
		<link>https://iphonedevlog.wordpress.com/2014/02/06/adding-cordova-apis-to-android-via-cli-compass-connection-device/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/02/06/adding-cordova-apis-to-android-via-cli-compass-connection-device/#respond</comments>
		<pubDate>Thu, 06 Feb 2014 23:21:40 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA["Device"]]></category>
		<category><![CDATA[compass]]></category>
		<category><![CDATA[connection]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Cordova APIs]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1084</guid>
		<description><![CDATA[In this article, we are in part 2 of exploring the Cordova APIs, which started in https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/ Refer to that article to set up your Cordova PhoneGap project files. You&#8217;ll need to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive. On this page, we&#8217;ll explore the Compass, Connection, and Device APIs. You [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1084&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p><span style="line-height:1.5em;">In this article, we are in part 2 of exploring the Cordova APIs, which started in <a title="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" href="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/" target="_blank">https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/</a> Refer to that article to set up your Cordova PhoneGap project files. You&#8217;ll need to follow the &#8220;Set Up the Android Project&#8221; section through step 9 inclusive. On this page, we&#8217;ll explore the Compass, Connection, and Device APIs.<span id="more-1084"></span></span></p>
<p>You can continue the code by copying/pasting from this page into that project&#8217;s index.html page, or start a new page and link to it via a button on that page (which is what I did). If you are starting a second page, copy/paste this HTML skeleton into a page2.html page to follow along:</p>
<pre>&lt;!-- ********************* HMTL5 Skeleton begin *********************** --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;meta charset="utf-8" /&gt;
 &lt;meta name="format-detection" content="telephone=no" /&gt;
 &lt;!-- WARNING from Cordova: for iOS 7, remove the width=device-width and height=device-height attributes. See https://issues.apache.org/jira/browse/CB-4323 --&gt;
 &lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt;
&lt;title&gt;Cordova APIs&lt;/title&gt;
&lt;style type="text/css"&gt;
 .buttonClass {
 border-radius:8px; background-color:#fff;
 border:#878787 solid 1px; padding:1em .5em;margin:.5em;
 width: 46%;
 font-family: "Helvetica"; color: #000; font-size:1em; text-align:center;
 -webkit-appearance:none;
 } 
 .segment {
 display:block; border-radius:8px; background-color:#eee;
 border:#878787 solid 1px; padding:1em; margin:.5em;
 font-family: "Helvetica"; color: #000; font-size:1.3em; text-align:left;
 -webkit-appearance:none; 
 }
 @media screen and (max-width:700px) {
 .buttonClass { width: 100%;}
 }
 &lt;/style&gt;
 &lt;script type="text/javascript" src="cordova.js"&gt;&lt;/script&gt; 
&lt;/head&gt; 
&lt;body&gt;
&lt;/body&gt; 
&lt;/html&gt; 
&lt;!-- ********************* HMTL5 Skeleton end *********************** --&gt;</pre>
<h1>Compass</h1>
<p>The compass indicates the compass direction the device is facing. We’ll follow this page from the docs to set it up: <a title="http://docs.phonegap.com/en/3.3.0/cordova_compass_compass.md.html#Compass" href="http://docs.phonegap.com/en/3.3.0/cordova_compass_compass.md.html#Compass" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_compass_compass.md.html#Compass</a> Please review the page to gain an understanding of the steps we’ll be following.</p>
<p>1. Set the directory in Terminal and download the plugin:</p>
<pre>cordova plugin add org.apache.cordova.device-orientation</pre>
<p>2. Make sure it’s downloaded:</p>
<pre>cordova plugin ls</pre>
<p>3. Open CordovaAPI/platforms/android/res/xml/config.xml in a text file and add the following to just above &lt;/widget&gt; and save:</p>
<pre>&lt;feature name="Compass"&gt;
 &lt;param name="android-package" value="org.apache.cordova.deviceorientation.CompassListener" /&gt;
&lt;/feature&gt;</pre>
<p>4. In platforms/android/AndroidManifest.xml,</p>
<pre>&lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt;
&lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;</pre>
<p>5. In index.html, remove everything between the &lt;body&gt;&lt;/body&gt; tags and replace with the following.</p>
<pre>&lt;!-- ********************* Compass begin *********************** --&gt;
&lt;div class="segment"&gt;&lt;h2&gt;Compass&lt;/h2&gt;
&lt;p style="font-style:italic;"&gt;This gives the compass readout every 3 seconds. 
&lt;br&gt;360 or 0 = North. 90 = East. 180 = South. 270 = West. 
&lt;br&gt;A negative value = heading can't be determined.&lt;/p&gt;
&lt;div id="heading"&gt;Waiting for heading...&lt;/div&gt;
 &lt;input type="button" class="buttonClass" onclick="startWatch();"value="Start Watching"&gt;
 &lt;input type="button" class="buttonClass" onclick="stopWatch();"value="Stop Watching"&gt;
 &lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/02/06/adding-cordova-apis-to-android-via-cli-compass-connection-device/"' value="View Code On iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
// The watch id references the current `watchHeading`
 var watchIDCompass = null;
// Wait for device API libraries to load
 document.addEventListener("deviceready", onDeviceReady, false);
// device APIs are available
 function onDeviceReady() {
 startWatchCompass();
 }
// Start watching the compass
 function startWatchCompass() {
// Update compass every 3 seconds
 var options = { frequency: 3000 };
watchIDCompass = navigator.compass.watchHeading(onSuccess, onError, options);
 }
// Stop watching the compass
 function stopWatchCompass() {
 if (watchIDCompass) {
 navigator.compass.clearWatchCompass(watchIDCompass);
 watchIDCompass = null;
 }
 }
// onSuccess: Get the current heading
 function onSuccess(heading) {
 var element = document.getElementById('heading');
 element.innerHTML = 'Heading: ' + heading.magneticHeading;
 }
// onError: Failed to get the heading
 function onError(compassError) {
 alert('Compass error: ' + compassError.code);
 }
&lt;/script&gt;
&lt;!-- ********************* Compass end *********************** --&gt;</pre>
<p>6. In Terminal, prepare the files:</p>
<pre>cordova prepare android</pre>
<p>7. Create the apk file:</p>
<pre>cordova compile android</pre>
<p>8. Navigate to /platforms/android/bin and copy the CordovaAPI-debug.apk file and copy it to your device to test. (I copied it to DropBox on my computer and retrieved it from the DropBox app on my device.)</p>
<p>9. With the device in hand and the app running, point it in any direction and hold. The number updates every 3 seconds.</p>
<p><img class="aligncenter size-large wp-image-1112" src="https://iphonedevlog.files.wordpress.com/2014/02/compass.jpg?w=660" alt="compass"  /></p>
<h1>Connection</h1>
<p>The connection object, exposed via navigator.connection, provides information about the device&#8217;s cellular and wifi connection. You&#8217;ll find out what kind of connection you have, if any.</p>
<p>1. Set the directory in Terminal and download the plugin:</p>
<pre>cordova plugin add org.apache.cordova.network-information</pre>
<p>2. Make sure it’s downloaded:</p>
<pre>cordova plugin ls</pre>
<p>3. Open CordovaAPI/platforms/android/res/xml/config.xml in a text file and add the following to just above &lt;/widget&gt; and save:</p>
<pre>&lt;feature name="NetworkStatus"&gt;
 &lt;param name="android-package" value="org.apache.cordova.networkinformation.NetworkManager" /&gt;
&lt;/feature&gt;</pre>
<p>4. In platforms/android/AndroidManifest.xml,</p>
<pre>&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;</pre>
<p>5. In index.html, add the following to just above &lt;/body&gt;:</p>
<pre>&lt;!-- ********************* Connection begin *********************** --&gt;
&lt;div class="segment"&gt;&lt;h2&gt;Connection&lt;/h2&gt;
&lt;p&gt;Connection type will show in a popup.&lt;/p&gt;
 &lt;input type="button" class="buttonClass" onclick="checkConnection()" value="Check Connection Again"&gt;
 &lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/02/06/adding-cordova-apis-to-android-via-cli-compass-connection-device/"' value="View Code On iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
// Wait for device API libraries to load
 document.addEventListener("deviceready", onDeviceReady, false);
// device APIs are available

 function onDeviceReady() {
 checkConnection();
 }
function checkConnection() {
 var networkState = navigator.connection.type;
var states = {};
 states[Connection.UNKNOWN] = 'Unknown connection';
 states[Connection.ETHERNET] = 'Ethernet connection';
 states[Connection.WIFI] = 'WiFi connection';
 states[Connection.CELL_2G] = 'Cell 2G connection';
 states[Connection.CELL_3G] = 'Cell 3G connection';
 states[Connection.CELL_4G] = 'Cell 4G connection';
 states[Connection.CELL] = 'Cell generic connection';
 states[Connection.NONE] = 'No network connection';
alert('Connection type: ' + states[networkState]);
 }
 &lt;/script&gt;
&lt;!-- ********************* Connection end *********************** --&gt;</pre>
<p>6. In Terminal, prepare the files:</p>
<pre>cordova prepare android</pre>
<p>7. Create the apk file:</p>
<pre>cordova compile android</pre>
<p>8. Navigate to /platforms/android/bin and copy the CordovaAPI-debug.apk  and copy the file to your device to test.</p>
<p>9. With the device in hand and the app running, you should see an alert message telling what kind of connection you have. For instance, mine read: &#8220;Connection type: WiFi connection.&#8221;</p>
<p><img class="aligncenter size-large wp-image-1113" src="https://iphonedevlog.files.wordpress.com/2014/02/connection.jpg?w=660" alt="connection"  /></p>
<h1><span style="line-height:1.5em;">Device</span></h1>
<p>The device object describes the device&#8217;s hardware and software. We&#8217;ll incorporate the code from this page: <a title="http://docs.phonegap.com/en/3.3.0/cordova_device_device.md.html#Device" href="http://docs.phonegap.com/en/3.3.0/cordova_device_device.md.html#Device" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_device_device.md.html#Device</a> Please read for more details on how it works.</p>
<p>1. Set the directory in Terminal and download the plugin:</p>
<pre>cordova plugin add org.apache.cordova.device</pre>
<p>2. Make sure it’s downloaded:</p>
<pre>cordova plugin ls</pre>
<p>3. Open CordovaAPI/platforms/android/res/xml/config.xml in a text file and add the following to just above &lt;/widget&gt; and save:</p>
<pre>&lt;feature name="Device"&gt;
 &lt;param name="android-package" value="org.apache.cordova.device.Device" /&gt;
&lt;/feature&gt;</pre>
<p>5. In index.html, add the following to just above &lt;/body&gt;:</p>
<pre>&lt;!-- ********************* Device begin *********************** --&gt;
&lt;div class="segment"&gt;&lt;h2&gt;Device&lt;/h2&gt;
&lt;p id="deviceProperties"&gt;Loading device properties...&lt;/p&gt;
 &lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/02/06/adding-cordova-apis-to-android-via-cli-compass-connection-device/"' value="View Code On iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
// Wait for device API libraries to load
 document.addEventListener("deviceready", onDeviceReady, false);
// device APIs are available
 function onDeviceReady() {
 var element = document.getElementById('deviceProperties');
 element.innerHTML = 'Device Model (Android: product name): ' + device.model + '&lt;br /&gt;' +
 'Cordova version: ' + device.cordova + '&lt;br /&gt;' +
 'Operating system: ' + device.platform + '&lt;br /&gt;' +
 'Device UUID: ' + device.uuid + '&lt;br /&gt;' +
 'Operating system version: ' + device.version + '&lt;br /&gt;';
 }
&lt;/script&gt;
&lt;!-- ********************* Device end *********************** --&gt;</pre>
<p>6. In Terminal, prepare the files:</p>
<pre>cordova prepare android</pre>
<p>7. Create the apk file:</p>
<pre>cordova compile android</pre>
<p>8. Navigate to /platforms/android/bin and copy the CordovaAPI-debug.apk  file to your device to test.</p>
<p>9. With the device in hand and the app running, you should see the device information appear.</p>
<p><img class="aligncenter size-large wp-image-1115" src="https://iphonedevlog.files.wordpress.com/2014/02/device.jpg?w=660" alt="device"  /></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/device/'>"Device"</a>, <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/compass/'>compass</a>, <a href='https://iphonedevlog.wordpress.com/tag/connection/'>connection</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova-apis/'>Cordova APIs</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1084/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1084/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1084/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1084/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1084/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1084/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1084/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1084/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1084/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1084/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1084/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1084/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1084&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/02/06/adding-cordova-apis-to-android-via-cli-compass-connection-device/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/02/compass.jpg?w=660" medium="image">
			<media:title type="html">compass</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/02/connection.jpg?w=660" medium="image">
			<media:title type="html">connection</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/02/device.jpg?w=660" medium="image">
			<media:title type="html">device</media:title>
		</media:content>
	</item>
		<item>
		<title>Adding Cordova APIs to Android via CLI: Accelerometer and Camera</title>
		<link>https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/</link>
		<comments>https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/#comments</comments>
		<pubDate>Fri, 31 Jan 2014 23:46:11 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Accelerometer]]></category>
		<category><![CDATA[Camera]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Cordova APIs]]></category>
		<category><![CDATA[export images from gallery]]></category>
		<category><![CDATA[Splashscreen API]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1078</guid>
		<description><![CDATA[In this beginner&#8217;s article, we&#8217;ll see what&#8217;s involved in adding the Cordova APIs to an PhoneGap Android project. It was written to help get your feet wet in case you&#8217;ve never tried it. An API (application programming interface) will allow us to use the features of the smartphone, such as accelerometer, camera, com pass, and [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1078&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p><span style="line-height:1.5em;">In this beginner&#8217;s article, we&#8217;ll see what&#8217;s involved in adding the Cordova APIs to an PhoneGap Android project. It was written to help get your feet wet in case you&#8217;ve never tried it. An API (application programming interface) will allow us to use the features of the smartphone, such as accelerometer, camera, com<a href="https://iphonedevlog.files.wordpress.com/2014/01/screenshot_cameraapi.jpg"><br />
</a>pass, and other features. In the case of Cordova&#8217;s PhoneGap, this APIs come in the form of plugins. They need to be added to the project on an as-needed basis.</span></p>
<p><span id="more-1078"></span></p>
<p>If you&#8217;ve never built a PhoneGap project before, it&#8217;s better to follow the steps in <a title="https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/" href="https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/" target="_blank">https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/</a> first so you&#8217;ll already have all program files need to create any Android project.</p>
<p>The Cordova APIs are found at <a title="http://www.phonegap.com" href="http://www.phonegap.com" target="_blank">phonegap.com</a> under Developer &gt; Docs. Scroll down to the API Reference section for the clickable list. We will open those links and copy/paste the code into our document. As usual, I&#8217;ll note every click needed to make the project.</p>
<h2>Set Up the Android Project</h2>
<p>1. Click on the Terminal icon in the dock to get it running.<br />
2. Type &#8220;cd&#8221; without the quotes, a space, then drag your containing folder (into which we&#8217;ll put a new project folder) from the Finder window to the Terminal screen, and hit Enter. This orients the Terminal to your new folder.<br />
3. In Terminal, type the following command to get the basic Cordova/PhoneGap files set up. I am going to think outside the box and cleverly call the project CordovaAPI:</p>
<pre>cordova create CordovaAPI com.stevehusting.CordovaAPI CordovaAPI</pre>
<p>(Notice that I am starting my commands with <strong>cordova</strong> and not <strong>phonegap.</strong> You may have installed phonegap instead, and if so, you should start all your commands with <strong>phonegap.</strong> This project will not be used for PhoneGap Build, so I use <strong>cordova</strong> in my commands.)</p>
<p>5. Type the following to see what Cordova version you have. Mine said 3.3.0-0.1.1:</p>
<pre>cordova -v</pre>
<p>6. We need to change directories to the project&#8217;s folder in Terminal so follow instructions in step 3 but drag the TestApp folder over. If you don&#8217;t do this, you&#8217;ll get the message: “Error: Current working directory is not a Cordova-based project&#8221; when trying to do a cordova command.</p>
<p>7. Create the platform files for the project, in our case, Android:</p>
<pre>cordova platform add android</pre>
<p>I received an error: &#8220;Error: An error occured during creation of android sub-project.<br />
Error: ERROR : executing command &#8216;ant&#8217;, make sure you have ant installed and added to your path.&#8221; I resolved this error. Scroll down to note in the comments for this step.</p>
<p>8. Verify the platform was installed:</p>
<pre>cordova platform list</pre>
<p>9. Open /TestApp/www/index.html in a text editor (I use TextWrangler). You might want to save a copy of it an put it somewhere.<br />
10. Copy and paste the below content in place of the current contents:</p>
<pre>&lt;!-- ********************* HMTL5 Skeleton begin *********************** --&gt; 
&lt;!DOCTYPE html&gt; 
&lt;html&gt; 
&lt;head&gt; 
&lt;meta charset="utf-8" /&gt; 
&lt;meta name="format-detection" content="telephone=no" /&gt; 
&lt;!-- WARNING from Cordova: for iOS 7, remove the width=device-width and height=device-height attributes. See https://issues.apache.org/jira/browse/CB-4323 --&gt; 
&lt;meta name="viewport" content="user-scalable=no, initial-scale=1, maximum-scale=1, minimum-scale=1, width=device-width, height=device-height, target-densitydpi=device-dpi" /&gt; 
&lt;title&gt;Cordova APIs&lt;/title&gt;

&lt;style type="text/css"&gt;
.buttonClass {
border-radius:8px; background-color:#fff;
border:#878787 solid 1px; padding:0 1em;margin:.5em;
height: 3em; width: 46%;
font-family: "Helvetica"; color: #000; font-size:1em; text-align:center;
-webkit-appearance:none;
}
.segment {
display:block; border-radius:8px; background-color:#eee;
border:#878787 solid 1px; padding:1em; margin:.5em;
font-family: "Helvetica"; color: #000; font-size:1.3em; text-align:left;
-webkit-appearance:none;
}
@media screen and (max-width:700px) {
.buttonClass { width: 100%;}
}
&lt;/style&gt;
 &lt;script type="text/javascript" src="cordova.js"&gt;&lt;/script&gt; 
&lt;/head&gt; 
&lt;body&gt;
&lt;/body&gt; 
&lt;/html&gt; 
&lt;!-- ********************* HMTL5 Skeleton end *********************** --&gt;</pre>
<p>Now we&#8217;re starting from the same code.</p>
<h1>Accelerometer</h1>
<p>The accelerometer captures the motion along the x, y, and z axis. We&#8217;ll follow this page from the docs to set it up: <a title="http://docs.phonegap.com/en/3.3.0/cordova_accelerometer_accelerometer.md.html#Accelerometer" href="http://docs.phonegap.com/en/3.3.0/cordova_accelerometer_accelerometer.md.html#Accelerometer" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_accelerometer_accelerometer.md.html#Accelerometer</a><br />
Please review the page to gain an understanding of the steps we&#8217;ll be following.</p>
<p>1. Download the plugin in terminal:</p>
<pre>cordova plugin add org.apache.cordova.device-motion</pre>
<p>2. Make sure it&#8217;s downloaded:</p>
<pre>cordova plugin ls</pre>
<p>3. Open CordovaAPI/platforms/android/res/xml/config.xml in a text file and add the following to just above &lt;/widget&gt; and save:</p>
<pre>&lt;feature name="Accelerometer"&gt;
 &lt;param name="android-package" value="org.apache.cordova.devicemotion.AccelListener" /&gt;
&lt;/feature&gt;</pre>
<p>4. In index.html, remove everything between the &lt;body&gt;&lt;/body&gt; tags and replace with the following. We will be updating the x, y, and z coordinates every 3 seconds:</p>
<pre>&lt;!-- ********************* Accelerometer begin *********************** --&gt;
&lt;div class="segment"&gt;&lt;h2&gt;Accelerometer&lt;/h2&gt;
&lt;p id="accelerometer"&gt;Waiting for accelerometer...&lt;/p&gt;
&lt;input type="button" class="buttonClass" onclick="stopWatch();" value="Stop Watching"&gt;
&lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/"' value="View Code On iPhoneDevLog"&gt;
&lt;/div&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
// The watch id references the current `watchAcceleration`
 var watchID = null;

// Wait for device API libraries to load
 document.addEventListener("deviceready", onDeviceReady, false);

// device APIs are available
 function onDeviceReady() {
 startWatch();
 }

// Start watching the acceleration, update every 3 seconds
 function startWatch() {
 var options = { frequency: 3000 };
watchID = navigator.accelerometer.watchAcceleration(onSuccess, onError, options);
 }

// Stop watching the acceleration
 function stopWatch() {
 if (watchID) {
 navigator.accelerometer.clearWatch(watchID);
 watchID = null;
 }
 }

// onSuccess: Get a snapshot of the current acceleration
 //
 function onSuccess(acceleration) {
 var element = document.getElementById('accelerometer');
 element.innerHTML = 'Acceleration X: ' + acceleration.x + '&lt;br /&gt;' +
 'Acceleration Y: ' + acceleration.y + '&lt;br /&gt;' +
 'Acceleration Z: ' + acceleration.z + '&lt;br /&gt;' +
 'Timestamp: ' + acceleration.timestamp + '&lt;br /&gt;';
 }

// onError: Failed to get the acceleration
 function onError() {
 alert('onError!');
 }
&lt;/script&gt; 
&lt;!-- ********************* Accelerometer end *********************** --&gt;</pre>
<p>6. In terminal, prepare the files:</p>
<pre>cordova prepare android</pre>
<p>7. Create the apk file:</p>
<pre>cordova compile android</pre>
<p>8. Navigate to /platforms/android/bin and copy the CordovaAPI-debug.apk file to your device to test. (I copy it to DropBox on my computer and retrieve it from the DropBox app on my device.)</p>
<p>9. With the device in hand and the app running, hold it parallel to the floor. The numbers change every 3 seconds.</p>
<p>Notice the Y number, then lift the top end so the device is perpendicular to the floor and see the number dramatically change. Mine went from 0.1 to 9.9.</p>
<p>Move it back to flat and notice the X number. Now turn the right edge up and watch the number change. Mine went from 0.1 to 9.8.</p>
<p>Move it back flat and notice the Z number, a positive number. Flip the device upside down over your head and it goes negative.</p>
<p><img class="aligncenter size-large wp-image-1110" src="https://iphonedevlog.files.wordpress.com/2014/01/accelerometer.jpg?w=660" alt="accelerometer"  /></p>
<h1>Camera</h1>
<p>[Frankly, the following project isn&#8217;t very practical; it&#8217;s just an introduction. Some time later I did a more advanced, but practical, camera application. You can see it here: <a title="https://iphonedevlog.wordpress.com/2014/03/24/adding-cordova-apis-to-android-via-cli-camera-and-file-apis-shoot-picture-and-upload-to-server-folder-with-php/" href="https://iphonedevlog.wordpress.com/2014/03/24/adding-cordova-apis-to-android-via-cli-camera-and-file-apis-shoot-picture-and-upload-to-server-folder-with-php/" target="_blank">https://iphonedevlog.wordpress.com/2014/03/24/adding-cordova-apis-to-android-via-cli-camera-and-file-apis-shoot-picture-and-upload-to-server-folder-with-php/</a>]</p>
<p>The camera API opens the device&#8217;s default camera application that allows users to snap pictures. Once the user snaps the photo, the camera application closes and the application is restored. Another script allows one to open the photo gallery and choose the captured image and display it onscreen in the app.</p>
<p>We&#8217;ll follow this page from the docs to set it up: <a title="http://docs.phonegap.com/en/3.3.0/cordova_camera_camera.md.html#Camera" href="http://docs.phonegap.com/en/3.3.0/cordova_camera_camera.md.html#Camera" target="_blank">http://docs.phonegap.com/en/3.3.0/cordova_camera_camera.md.html#Camera</a></p>
<p>According to this page, it works in Android versions before KitKat (4.4). Please review the page to gain an understanding of the steps we&#8217;ll be following.</p>
<p>1. Download the plugin in terminal:</p>
<pre>cordova plugin add org.apache.cordova.camera</pre>
<p>2. Make sure it&#8217;s downloaded:</p>
<pre>cordova plugin ls</pre>
<p>3. Open CordovaAPI/platforms/android/res/xml/config.xml in a text file and add the following to just above &lt;/widget&gt; and save:</p>
<pre>&lt;feature name="Camera"&gt;
 &lt;param name="android-package" value="org.apache.cordova.camera.CameraLauncher" /&gt;
&lt;/feature&gt;</pre>
<p>4. Open platforms/android/AndroidManifest.xml with a text editor and enter the following among the other &#8220;&lt;uses-permission&#8221; entries:</p>
<pre>&lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;</pre>
<p>5. Copy the following into your index.html file right above the &lt;/body&gt; tag:</p>
<pre>&lt;!-- ********************* Camera begin *********************** --&gt; 
&lt;div class="segment"&gt;&lt;h2&gt;Camera&lt;/h2&gt;
 &lt;p&gt;&lt;em&gt;Shoot photo with camera and display as thumbnail on this page.&lt;/em&gt;&lt;/p&gt;

 &lt;input type="button" class="buttonClass" onclick="capturePhotoEdit();" value="Capture Photo"&gt; &lt;br&gt;&lt;input type="button" class="buttonClass" onclick="removeImages();" value="Remove thumbnail"&gt;&lt;br&gt; 
 &lt;img style="display:none;width:60px;height:60px;" id="smallImage" src=""&gt;
 &lt;p id="smTitle"&gt;&lt;/p&gt;
 &lt;p&gt;&lt;em&gt;Display the captured photo from gallery on this page:&lt;/em&gt;&lt;/p&gt;
 &lt;input type="button" class="buttonClass" value="Browse Gallery" onclick="getPhoto(pictureSource.PHOTOLIBRARY);"&gt;&lt;br&gt;
 &lt;input type="button" class="buttonClass" onclick="removeLargeImage();" value="Remove below image"&gt;&lt;br&gt; 
 &lt;img style="display:none;" id="largeImage" src=""&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;input type="button" class="buttonClass" onclick='window.location="https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/"' value="View Code On iPhoneDevLog"&gt;
&lt;/div&gt;

&lt;script type="text/javascript" charset="utf-8"&gt;

 var pictureSource; // picture source
 var destinationType; // sets the format of returned value

 // Wait for device API libraries to load
 document.addEventListener("deviceready",onDeviceReady,false);

 // device APIs are available
 function onDeviceReady() {
 pictureSource=navigator.camera.PictureSourceType;
 destinationType=navigator.camera.DestinationType;
 }

// ---------------- CAMERA

// STEP 2. Show thumbnail
 function onPhotoFileSuccess(imageData) {
 var note = document.getElementById('smTitle');
 note.innerHTML = "Image location:&lt;br&gt;" + JSON.stringify(imageData); // put name of file onscreen
 var smallImage = document.getElementById('smallImage');
 smallImage.style.display = 'block';
 smallImage.src = imageData; // Show thumbnail
 }

// STEP 1. Capture photo.
 function capturePhotoEdit() {
 navigator.camera.getPicture(onPhotoFileSuccess, onFail, { quality: 90, destinationType: Camera.DestinationType.FILE_URI,
 sourceType : Camera.PictureSourceType.CAMERA, 
 allowEdit : true,
 encodingType: Camera.EncodingType.JPEG,
 // targetWidth: 200, // capture it at this size
 // targetHeight: 200, // capture it at this size
 popoverOptions: CameraPopoverOptions,
 saveToPhotoAlbum: true // saves photo to internal memory, viewed in Gallery
 });
 }
 
// ---------------- PHOTO GALLERY

 // STEP b. Called when a photo is successfully retrieved - gallery
 function onPhotoURISuccess(imageURI) {
 // Get image handle
 var largeImage = document.getElementById('largeImage');
 // Unhide image elements
 largeImage.style.display = 'block';
 // Show the captured photo
 largeImage.src = imageURI;
 navigator.camera.cleanup( cameraSuccess, cameraError );
 }

 // STEP a. A button will call this function
 function getPhoto(source) {
 // Retrieve image file location from specified source
 navigator.camera.getPicture(onPhotoURISuccess, onFail, { quality: 50,
 destinationType: destinationType.FILE_URI,
 sourceType: source });
 }
 
// ---------------- REMOVE IMAGES

 function removeImages() {
 var smallImage = document.getElementById('smallImage');
 smallImage.style.display = 'none';
 smallImage = null;
 }
 
 function removeLargeImage() {
 var largeImage = document.getElementById('largeImage');
 largeImage.style.display = 'none';
 largeImage = null;
 }

 // Called if something bad happens.
 function onFail(message) {
 alert('Response: ' + message);
 }
 &lt;/script&gt;

&lt;!-- ********************* Camera end *********************** --&gt;</pre>
<p>6. In Terminal, prepare the file:</p>
<p>cordova prepare android</p>
<p>7. Create the apk file:</p>
<pre>cordova compile android</pre>
<p>8. Navigate to /platforms/android/bin and copy the CordovaAPI-debug.apk and put the into your device to test.</p>
<p>9. With the device in hand and the app running, tap on Capture Photo and the camera app opens. Take the photo and tap done. See its thumbnail and file location in the device appear.</p>
<p>Click on Browse Gallery. I choose a photo. It appears in the app.</p>
<h2>Exporting the captured images</h2>
<p>What is curious is that I can see the image thumbnails in the gallery, but when I hook up the device to my PC, those images captured in the app show a zero byte count and are blank when opened. Fortunately, I found a way to export them.</p>
<p>1. I downloaded the <a title="https://play.google.com/store/apps/details?id=com.homeysoft.nexususb.importer" href="https://play.google.com/store/apps/details?id=com.homeysoft.nexususb.importer" target="_blank">Nexus Media Importer</a> software to my Nexus 7 (free).</p>
<p>2. I plugged a USB thumbdrive into the USB end of my <a title="http://www.amazon.com/IVSO%C2%AE-Nexus-Tablet-Micro-Cable/dp/B00932N46S/ref=sr_1_6?ie=UTF8&amp;qid=1396571508&amp;sr=8-6&amp;keywords=USB+OTG+cable" href="http://www.amazon.com/IVSO%C2%AE-Nexus-Tablet-Micro-Cable/dp/B00932N46S/ref=sr_1_6?ie=UTF8&amp;qid=1396571508&amp;sr=8-6&amp;keywords=USB+OTG+cable" target="_blank">USB OTG cable</a> and the other end into the Nexus 7.</p>
<p>3. The software recognized the cable. I selected the Export option (you can use this OTG cable to import files to the device), chose the images, and they were copied to the thumb drive.</p>
<p>4. I opened the images from the thumb drive on the PC and they were perfect.</p>
<p><a href="https://iphonedevlog.files.wordpress.com/2014/01/screenshot_cameraapi.jpg"><img class="aligncenter size-full wp-image-1195" src="https://iphonedevlog.files.wordpress.com/2014/01/screenshot_cameraapi.jpg?w=660" alt="Screenshot: Camera API"   /></a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/accelerometer/'>Accelerometer</a>, <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/camera/'>Camera</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova-apis/'>Cordova APIs</a>, <a href='https://iphonedevlog.wordpress.com/tag/export-images-from-gallery/'>export images from gallery</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/splashscreen-api/'>Splashscreen API</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1078/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1078/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1078/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1078/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1078/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1078/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1078/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1078/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1078/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1078/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1078/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1078/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1078&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2014/01/31/adding-cordova-apis-to-android-via-cli-accelerometer-and-camera/feed/</wfw:commentRss>
		<slash:comments>8</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/01/accelerometer.jpg?w=660" medium="image">
			<media:title type="html">accelerometer</media:title>
		</media:content>

		<media:content url="https://iphonedevlog.files.wordpress.com/2014/01/screenshot_cameraapi.jpg" medium="image">
			<media:title type="html">Screenshot: Camera API</media:title>
		</media:content>
	</item>
		<item>
		<title>Using PhoneGap 3.3 CLI on Mac OS X Mavericks to Build iOS Projects</title>
		<link>https://iphonedevlog.wordpress.com/2013/12/19/using-phonegap-3-3-cli-on-mac-os-x-mavericks-to-build-ios-projects/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/12/19/using-phonegap-3-3-cli-on-mac-os-x-mavericks-to-build-ios-projects/#comments</comments>
		<pubDate>Thu, 19 Dec 2013 22:42:40 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[App Store]]></category>
		<category><![CDATA[app submission]]></category>
		<category><![CDATA[config.xml]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[debug console plugin]]></category>
		<category><![CDATA[inAppBrowser]]></category>
		<category><![CDATA[iTunes Connect]]></category>
		<category><![CDATA[PhoneGap API]]></category>
		<category><![CDATA[Splashscreen API]]></category>
		<category><![CDATA[Xcode]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1037</guid>
		<description><![CDATA[This article gets you up to speed on how to integrate  your HTML/CSS/JS app with PhoneGap/Cordova into an iOS app using a Mac and prepare it for App Store submission. This article assumes you&#8217;ve already followed the steps on https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/ to: Download Node.js Add PATH statements to .profile Install Cordova CLI Install Homebrew In this [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1037&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p><strong>This article gets you up to speed on how to integrate  your HTML/CSS/JS app with PhoneGap/Cordova into an iOS app using a Mac and prepare it for App Store submission.</strong> This article assumes you&#8217;ve already followed the steps on <a title="https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/" href="https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/" target="_blank">https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/</a> to:</p>
<p>Download Node.js<br />
Add PATH statements to .profile<br />
Install Cordova CLI<br />
Install Homebrew</p>
<p>In this article, I am referencing Mac OS X Mavericks 10.8.5 and Xcode 5.0.2 on a Mac Mini. PhoneGap CLI 3.3.0 was downloaded. I am referencing &#8220;cordova&#8221; in the command-line interface, not &#8220;phonegap.&#8221; This project will not use the PhoneGap Build service.<span id="more-1037"></span></p>
<p><strong>Download:</strong><br />
OS X Mavericks and Xcode: <a title="http://www.apple.com/osx/apps/app-store.html " href="http://www.apple.com/osx/apps/app-store.html" target="_blank">http://www.apple.com/osx/apps/app-store.html </a><br />
PhoneGap: <a title="http://www.phonegap.com/" href="http://www.phonegap.com/" target="_blank">http://www.phonegap.com/</a></p>
<p>Before you can install the app you create with PhoneGap on your device, you need to sign up as a Developer with Apple and go through the business documentation, Certificate Signing, Developer Certificate process, and more, all of which are detailed on Apple’s web site (<a title="https://developer.apple.com/programs/ios/" href="https://developer.apple.com/programs/ios/" target="_blank">https://developer.apple.com/programs/ios/</a>), under Prepare for App Submission. Nevertheless, you can skip all those steps and still see your work in the the iOS Simulator included with Xcode — you just won’t be able to view the app in your device or App Store. Xcode is a free download you can download now, but the Developer status comes at $99 a year.</p>
<p>Although you can develop the HTML/CSS/JS portion of an iPhone app on a Windows machine, you’ll still need a Mac with Xcode to convert the code to the binary that is uploaded to the App Store. You need a Mac to make iPhone apps. (PhoneGap Build can create this binary for you from your files, but you still need a Mac to download and install certain certificate files.)</p>
<p>If you are new to creating apps for the App Store, you’ll want to peruse the App Store Review Guidelines to make sure your app meets the rules (requires sign-in): <a title="https://developer.apple.com/devcenter/ios/index.action" href="https://developer.apple.com/devcenter/ios/index.action" target="_blank">https://developer.apple.com/devcenter/ios/index.action</a> You are strongly encouraged to make use of these documents before you start your project, lest you run afoul of Apple’s rules for what apps they will and will not allow in the App Store.</p>
<p>PhoneGap/Cordova now uses the command-line interface (CLI) to generate the files needed to start the project. However, one still needs to enter Xcode to create the final binary for uploading to Apple.</p>
<p>This article covers the creation of an app from CLI creation to upload binary to Apple.</p>
<p><strong>Resources:</strong><br />
<a title="http://docs.phonegap.com/en/3.0.0/guide_platforms_index.md.html#Platform%20Guides" href="http://docs.phonegap.com/en/3.0.0/guide_platforms_index.md.html#Platform%20Guides" target="_blank">http://docs.phonegap.com/en/3.0.0/guide_platforms_index.md.html#Platform%20Guides</a><br />
<a title="http://phonegap-tips.com/articles/the-nodejs-command-line-interface-for-phonegap.html" href="http://phonegap-tips.com/articles/the-nodejs-command-line-interface-for-phonegap.html" target="_blank">http://phonegap-tips.com/articles/the-nodejs-command-line-interface-for-phonegap.html</a></p>
<h2>Create PhoneGap Project Files With CLI</h2>
<p>1. Open a Finder window and select the folder you want to create your project&#8217;s folder inside of.<br />
2. Open the Terminal app (find it in the dock below, or click on the magnifying glass at top right and type in &#8220;terminal&#8221;), type cd (for &#8220;change directory&#8221;), drag the selected folder to the Terminal screen, let go, click on the Terminal to select it, then hit Return. This will orient the commands to that folder.</p>
<p>For this project, all of your commands will always begin with &#8220;cordova.&#8221; Some online tutorials and PhoneGap documentation will tell you to use &#8220;phonegap;&#8221; in that case, change it to &#8220;cordova&#8221; and it should work fine.</p>
<p>3. Type the following, replacing &#8220;YourCompany&#8221; with your name and &#8220;TestAppIos&#8221; with the name of your project:</p>
<pre>cordova create TestAppIos com.YourCompany.TestAppIos TestAppIos</pre>
<p>Preliminary files are generated. (In iOS lingo, com.YourCompany.TestAppIos is called the &#8220;Bundle Identifier.&#8221;)<br />
4. Enter the new folder you created in Terminal with the cd (change directory) command:</p>
<pre>cd TestAppIos</pre>
<p>5. CLI only downloaded the skeleton files needed for all platforms. Now you need to download the specific files for iOS:</p>
<pre>cordova platform add ios</pre>
<p>6. Build the default project with:</p>
<pre>cordova build ios</pre>
<p>If you get a message saying that codesign wants to sign using the key in your keychain, click on Allow or Always Allow.<br />
7. To see the project in a simulator, type:</p>
<pre>cordova emulate ios</pre>
<p>(That&#8217;s &#8220;emulate&#8221; not emulator.) This will work if you have Xcode installed; it uses Xcode&#8217;s simulator. You may receive an error in Terminal that the simulator session timed out. Just give it a minute and see if the simulator doesn&#8217;t start anyway. After it starts and the Cordova default &#8220;Device is Ready&#8221; page does not appear, leave it on and run the cordova emulate ios command in the terminal again.</p>
<p>An iPhone Retina (4-inch) screen appears, showing the PhoneGap logo above the words APACHE CORDOVA with &#8220;Device is Ready&#8221; pulsing. This shows that the project is successfully showing the default index.html screen.</p>
<p>8. Try this with the iPhone emulator:<br />
a) Click on the simulator then on Hardware &gt; Device and choose among the available devices.<br />
b) Click on Window &gt; Scale and resize the simulator.<br />
c) With Edit &gt; Copy Screen you can grab it and possibly save for uploading as screenshots, if your screen and simulator sizes are large enough.<br />
d) Click on Debug &gt; Open System Log&#8230; to view the console output in separate windows. I personally did not find this information helpful.</p>
<p>If you only have one platform installed, you can shorten the commands above to &#8220;cordova build&#8221; and &#8220;cordova emulate.&#8221;</p>
<p>If you have an earlier cordova version installed (check with cordova -v), you can update to the latest version with:</p>
<pre>npm update -g cordova</pre>
<h2>Getting familiar with the Xcode environment</h2>
<p>1. Navigate to the project’s platforms/ios directory and look at the files created. A /www folder has been created for you, complete with the cordova.js file and startup index.html page (the page you’ll see when opening your app in the device or emulator). The TestAppIos folder contains many Xcode files for your project.</p>
<p>2. Double-click on TestAppIos.xcodeproj to open the file in Xcode.</p>
<p>3. Click on the gray arrow by the project name in the upper left corner of the Xcode environment. Now you see the folders for the project appear below it.</p>
<p>4. Click on the gray arrow by the /www folder to open it. Single-click on the index.html file. The contents appear in the middle pane of the Xcode environment. I noticed a warning in mine: &#8220;for iOS7, remove the width=device-width and height=device-height attributes.&#8221; A URL is given for more info.</p>
<p>5. At top left, to the right of the large gray Run arrow, is the Scheme, spelling out the project name and the emulator, such as &#8220;iPhone Retina (3.5-inch).&#8221; Click on the Simulator name and change it to another if you wish. [When you archive (create your binary for the app store), you’ll change it to “iOS Device.”]</p>
<p>6. At top left, click on the large gray arrow Run icon. You should see the same contents appear in the simulator as when you ran the CLI command, cordova emulate ios.</p>
<p>7. Click on the Xcode window to bring to front. At the bottom you can see the console output when the project was Run.</p>
<p>8. To halt the process, click on the gray Stop square (next to the gray arrow Run button). Click on the Simulator, then hold down on the project’s icon until it quivers. Click on the X in the corner of the icon to delete the icon. Confirm, then Hardware &gt; Home. I recommend you delete the icon before creating a new build lest errors pile up. Sometimes the old code is not fully overwritten with a new cordova build/emulate process.</p>
<h2>Using the API Reference</h2>
<p>On the PhoneGap site at <a title="http://docs.phonegap.com/en/3.3.0/guide_cli_index.md.html#The%20Command-Line%20Interface" href="http://docs.phonegap.com/en/3.3.0/guide_cli_index.md.html#The%20Command-Line%20Interface" target="_blank">http://docs.phonegap.com/en/3.3.0/guide_cli_index.md.html#The%20Command-Line%20Interface</a> we can see the many device-level APIs available to us to interact with the mobile device (scroll down left column to see them). PhoneGap does not automatically install every feature or plugin, and that keeps the code footprint down. The page above gives the commands needed to download many different plugins. The following link gives us a chart showing plugin support: <a title="http://docs.phonegap.com/en/3.3.0/guide_support_index.md.html#Platform%20Support" href="http://docs.phonegap.com/en/3.3.0/guide_support_index.md.html#Platform%20Support" target="_blank">http://docs.phonegap.com/en/3.3.0/guide_support_index.md.html#Platform%20Support</a></p>
<p>Here, we&#8217;ll incorporate the InAppBrowser (IAB) API. The IAB allows us to open external URL links from within the app. Some developers would prefer this over the default of leaving the app and opening a web browser, shutting down the web browser when done, then restarting the app again. The IAB opens the link in its own frame with a Done button bringing the user back into the app.</p>
<p>We first download the IAB as a plugin using CLI. Here are the two steps to do it.<br />
<strong>Step I: download the plug-in</strong><br />
a. Still in your project&#8217;s folder in Terminal, type the add command:</p>
<pre>cordova plugin add org.apache.cordova.inappbrowser</pre>
<p>b. Verify that the plugin is installed with the ls (list) command:</p>
<pre>cordova plugin ls</pre>
<p><strong>Step II: add to the config.xml file</strong></p>
<p>a. Open the TestAppIos/www/config.xml file in a text editor (I use TextWrangler) and make sure the following is above the &lt;/widget&gt; line. Add it if it isn&#8217;t:</p>
<pre>&lt;feature name="InAppBrowser"&gt;
 &lt;param name="ios-package" value="CDVInAppBrowser" /&gt;
&lt;/feature&gt;</pre>
<p>While we&#8217;re on that page, change the other sections:</p>
<p>1. Change the version=&#8221;0.0.1&#8243; to the correct version, like version=&#8221;1.0.0&#8243; <strong>This MUST match the version you enter for the app in the developer console,</strong> or you will get errors when validating in Xcode later. &#8220;1.0.0&#8221; is not the same as &#8220;1.0&#8221;<br />
2. Change the &lt;description&gt; line.<br />
3. Change the &lt;author&gt; section.<br />
4. Make sure the &#8220;widget id&#8221; is (or will be) the same as what you enter in the developer console online as the AppID, include same case.</p>
<p>Now let&#8217;s test it. Completely replace PhoneGap&#8217;s TestAppIos/www/index.html page with the following lines that start and end with the HTML lines (open it from the Finder, not within Xcode):</p>
<p>***** START BELOW THIS LINE *****</p>
<pre>&lt;!DOCTYPE HTML&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
 &lt;meta http-equiv="content-type" content="text/html; charset=utf-8"&gt;
 &lt;meta name="viewpoint" content="user-scalable-no, initial-scale=1, width=device-width"&gt;
&lt;!-- Set the viewport width to device width for mobile. May introduce problems with iOS 7 on iPhone, though. --&gt;
 &lt;meta name="viewport" content="width=device-width"&gt;
&lt;title&gt;Hello World test&lt;/title&gt;

&lt;script src="cordova.js"&gt;&lt;/script&gt;
&lt;script&gt;
function onBodyLoad() {
document.addEventListener("deviceready", onDeviceReady, false);
}
&lt;/script&gt;
&lt;script&gt;
function onDeviceReady() {
}
&lt;/script&gt;
&lt;style type="text/css"&gt;
 html, body { background-color: #FFFFCC; margin: 0; padding: 0; }
 #wrapper { margin:0; width:100%; padding-top: 2em; }
 p { color: black; font-family: Helvetica; padding:.5em; margin: .5em; }
 p.button { font-size: .8em; border-radius: 8px; border: 1px gray solid; background-color: white; text-align: center; display: block; }
 p.note { font-family: Courier; color: black; font-size: .7em; font-style: italic; text-align: left;}
 a { text-decoration: none; }
&lt;/style&gt;
&lt;/head&gt;
&lt;body onLoad="onBodyLoad()"&gt;
 &lt;div id="wrapper"&gt;
 &lt;p class="button"&gt;&lt;a href="#" onclick="window.open('http://docs.phonegap.com/en/3.3.0/guide_support_index.md.html#Platform%20Support','_blank');"&gt; IAB with location bar (showing URL)&lt;/a&gt; 
 &lt;/p&gt;
 &lt;p class="note"&gt;
&amp;lt;a href="#" onclick="window.&lt;br&gt; 
open('http://URL',&lt;span style="color:red;"&gt;'_blank'&lt;/span&gt;);"&amp;gt;
 &lt;/p&gt; 
 &lt;p class="button"&gt;&lt;a href="#" onclick="window.open('https://groups.google.com/forum/#!forum/phonegap','_blank','location=no');"&gt; IAB without location bar&lt;/a&gt; 
 &lt;/p&gt;
 &lt;p class="note"&gt;
&amp;lt;a href="#" onclick="window.&lt;br&gt; 
open('http://URL','_blank',&lt;span style="color:red;"&gt;'location=no'&lt;/span&gt;);"&amp;gt;
 &lt;/p&gt; 
 &lt;p class="button"&gt;&lt;a href="#" onclick="window.open('http://docs.phonegap.com/en/3.2.0/cordova_inappbrowser_inappbrowser.md.html#InAppBrowser','_blank','closebuttoncaption=Return');"&gt;IAB with "Return" button text change&lt;/a&gt; 
 &lt;/p&gt;
 &lt;p class="note"&gt;
&amp;lt;a href="#" onclick="window.&lt;br&gt; 
open('http://URL','_blank',&lt;br&gt;
&lt;span style="color:red;"&gt;'closebuttoncaption=Return'&lt;/span&gt;);"&amp;gt;
 &lt;/p&gt; 
 &lt;p class="button"&gt;&lt;a href="#" onclick="window.open('https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/','_system');"&gt;URL opens in system web browser (must shut down browser then re-open app)&lt;/a&gt;
 &lt;/p&gt;
 &lt;p class="note"&gt;
&amp;lt;a href="#" onclick="window.&lt;br&gt; 
open('http://URL',&lt;span style="color:red;"&gt;'_system'&lt;/span&gt;);"&gt;
 &lt;/p&gt; 
 &lt;p class="button"&gt;&lt;a href="http://www.phonegap.com"&gt;Plain URL (no return to app; must remove app from memory before re-opening app)&lt;/a&gt; 
 &lt;/p&gt;
 &lt;p class="note"&gt;&lt;span style="color:red;"&gt;&amp;lt;a href="http://URL"&amp;gt;&lt;/span&gt;
 &lt;/p&gt;
 &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<p>***** END ABOVE THIS LINE *****</p>
<p>10. Save the page. In Terminal, type the following to build the project:</p>
<pre>cordova build ios</pre>
<p>11. Display it in the emulator with:</p>
<pre>cordova emulate ios</pre>
<p>In the Simulator, click on the links to see their effect. Click on Hardware &gt; Home to stop. Delete the icon from the screen. (If you get an error message, then download the ios-sim with the following and try the above command again:)</p>
<pre class="p1">npm install ios-sim -g</pre>
<p>Make sure all pages using a Cordova API reference has the following in the &lt;head&gt; above all other .js references, and references cordova.js as being in the root folder:</p>
<pre>&lt;script type="text/javascript" charset="utf-8" src="../cordova.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
 }
&lt;/script&gt;</pre>
<p>Don&#8217;t copy/paste the above as is into all relevant pages; src=&#8221;cordova.js&#8221; may need to be src=&#8221;../cordova.js&#8221; or even src=&#8221;../../cordova.js&#8221; depending on the folder. You won&#8217;t see cordova.js in your www/ folder; it appears in the platforms/ios folder.</p>
<h2>Splashscreen API</h2>
<p>We want to show a splashscreen on the device. This is the screen that displays AFTER the launch image has displayed and BEFORE the index.html page shows. Download and configure the plugin to enable this feature. If you just want a launch image to go straight to the index.html page, ignore this plugin; you configure the launch image in Xcode.</p>
<p>1. In Terminal:</p>
<pre>cordova plugin add org.apache.cordova.splashscreen</pre>
<p>2. Open config.xml and make sure the following is above &lt;/widget&gt; line; if not add it:</p>
<pre>&lt;feature name="SplashScreen"&gt;
 &lt;param name="ios-package" value="CDVSplashScreen" /&gt;
&lt;/feature&gt;</pre>
<p>3. Modify the event listener in index.html with:</p>
<pre>&lt;script&gt; 
function onBodyLoad() 
{ document.addEventListener("deviceready", onDeviceReady, false); } 
function onDeviceReady() 
{ navigator.splashscreen.show(); } 
setTimeout(function() { navigator.splashscreen.hide(); }, 1000); 
&lt;/script&gt;</pre>
<p>Note that every time a user goes to the home page of the app, this code will show the splash screen! I modified the page to keep count of the number of times it displayed; if it displayed once at startup , then it should not display again:</p>
<pre>&lt;script&gt;
function onBodyLoad() {
document.addEventListener("deviceready", onDeviceReady, false);
}

function onDeviceReady() {
// Check session storage to see if splash screen already appeared
 countLaunchImage();
}
function countLaunchImage() {
/* If the value is 0 then it has already displayed. If &gt; 0, then it hasn't yet shown and should display. */
 var name = sessionStorage.getItem("count");
 if (name &gt; 0) { showLaunchImage(); }
}
function showLaunchImage() {
// Show splash screen
navigator.splashscreen.show();
// Set value to 0 after it appears
sessionStorage.setItem("count", "0");
// countLaunchImage() should now see a 0 and not launch next time.
}
setTimeout(function() {
 navigator.splashscreen.hide();
}, 1000);
&lt;/script&gt;</pre>
<h2>Installing and using the debug console plugin</h2>
<p>As part of your debugging process, you may want to output your own messages in the console when certain code has been executed. The CLI page at <a title="http://docs.phonegap.com/en/3.3.0/guide_cli_index.md.html#The%20Command-Line%20Interface" href="http://docs.phonegap.com/en/3.3.0/guide_cli_index.md.html#The%20Command-Line%20Interface" target="_blank">http://docs.phonegap.com/en/3.3.0/guide_cli_index.md.html#The%20Command-Line%20Interface</a> tells of a debug console download.</p>
<p>1. Type in the terminal:</p>
<pre>cordova plugin add org.apache.cordova.console</pre>
<p>2. Add a console.log line in your index.html file:</p>
<pre>function onDeviceReady() {
 navigator.splashscreen.show();
 console.log("*** Device is ready! ***");
}</pre>
<p>3. Now let&#8217;s view the console message in Xcode. Whenever you&#8217;ll be running the app in Xcode, first type:</p>
<pre>cordova prepare</pre>
<p>4. Open the app in Xcode and do Product &gt; Clean.<br />
5. If you can&#8217;t see the console in Xcode, then View &gt; Debug Area &gt; Activate Console.<br />
6. Run the app in Xcode and watch your console message appear in Xcode&#8217;s console.</p>
<h2>Removing plugins</h2>
<p>1. To remove a plugin, first get a list of the plugins with:</p>
<pre>cordova plugin ls</pre>
<p>2. Then use the rm (remove) command to remove it:</p>
<pre>cordova plugin rm org.apache.cordova.console</pre>
<h2>Adding preferences to config.xml</h2>
<p>PhoneGap has several ways to add default behavior preferences to your app. Copy the following to your config.xml anywhere between the &lt;widget&gt; tags. To read more about them and get their optional values, see the URLs I included. At this point, I&#8217;m not sure config-xml entries listed prior to 3.3.0 will work in a 3.3.0 project, so use those at your own risk. However, the app performs as intended with all these.</p>
<pre>&lt;!-- from 3.3.0 and 3.1.0: <a title="http://docs.phonegap.com/en/3.3.0/guide_platforms_ios_config.md.html#iOS%20Configuration" href="http://docs.phonegap.com/en/3.3.0/guide_platforms_ios_config.md.html#iOS%20Configuration" target="_blank">http://docs.phonegap.com/en/3.3.0/guide_platforms_ios_config.md.html#iOS%20Configuration</a>
<a title="http://docs.phonegap.com/en/3.1.0/guide_platforms_ios_config.md.html#iOS%20Configuration" href="http://docs.phonegap.com/en/3.1.0/guide_platforms_ios_config.md.html#iOS%20Configuration" target="_blank">http://docs.phonegap.com/en/3.1.0/guide_platforms_ios_config.md.html#iOS%20Configuration</a> --&gt;
&lt;preference name="EnableViewportScale" value="false" /&gt;
&lt;preference name="MediaPlaybackRequiresUserAction" value="false" /&gt;
&lt;preference name="AllowInlineMediaPlayback" value="false" /&gt;
&lt;preference name="BackupWebStorage" value="cloud" /&gt;
&lt;preference name="TopActivityIndicator" value="gray" /&gt;
&lt;preference name="KeyboardDisplayRequiresUserAction" value="true" /&gt;
&lt;preference name="SuppressesIncrementalRendering" value="false" /&gt;
&lt;preference name="GapBetweenPages" value="0" /&gt;
&lt;preference name="PageLength" value="0" /&gt;
&lt;preference name="PaginationBreakingMode" value="page" /&gt;
&lt;preference name="PaginationMode" value="unpaginated"/&gt;
&lt;preference name="AutoHideSplashScreen" value="true" /&gt;
&lt;preference name="DisallowOverscroll" value="false" /&gt;
&lt;preference name="FadeSplashScreen" value="true" /&gt;
&lt;preference name="FadeSplashScreenDuration" value="0" /&gt;
&lt;!-- from 2.6.0: <a title="http://shazronatadobe.wordpress.com/2013/04/08/whats-new-in-cordova-ios-2-6-0/" href="http://shazronatadobe.wordpress.com/2013/04/08/whats-new-in-cordova-ios-2-6-0/" target="_blank">http://shazronatadobe.wordpress.com/2013/04/08/whats-new-in-cordova-ios-2-6-0/</a> --&gt;
&lt;preference name="HideKeyboardFormAccessoryBar" value="false" /&gt;
&lt;preference name="KeyboardShrinksView" value="false" /&gt;
&lt;!-- from 2.2.0: <a title="http://docs.phonegap.com/en/2.2.0/guide_project-settings_ios_index.md.html" href="http://docs.phonegap.com/en/2.2.0/guide_project-settings_ios_index.md.html" target="_blank">http://docs.phonegap.com/en/2.2.0/guide_project-settings_ios_index.md.html</a> --&gt;
&lt;preference name="ShowSplashScreenSpinner" value="true" /&gt;</pre>
<h2> Create and Add Your Icons and Launch Images (splash screens)</h2>
<p>PhoneGap has provided default icon and splash screen images. Replace all of the graphics in platforms/ios/TestAppIos/Resources/icons and /Resources/splash with your own if you want to support the full range of devices &#8212; keeping the same file names, file type, and file sizes. Consult <a title="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html#//apple_ref/doc/uid/TP40006556-CH27" href="https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html#//apple_ref/doc/uid/TP40006556-CH27" target="_blank">https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html#//apple_ref/doc/uid/TP40006556-CH27</a> for graphics sizes.</p>
<p>icon-40.png<br />
icon-40@2x.png (80&#215;80 pixels)<br />
icon-50.png<br />
icon-50@2x.png (100&#215;100 pixels)<br />
icon-60.png<br />
icon-60@2x.png (120&#215;120 pixels)<br />
icon-72.png<br />
icon-72@2x.png (144&#215;144 pixels)<br />
icon-76.png<br />
icon-76@2x.png (152&#215;152 pixels)<br />
icon-small.png (29&#215;29 pixels)<br />
icon-small@2x.png (58&#215;58 pixels)<br />
icon.png (57&#215;57 pixels)<br />
icon@2x.png (114&#215;114 pixels)</p>
<p>(If you removed any of these above files, carefully edit the listing in platforms/ios/TestAppIos/Resources/TestAppIos-Info.plist under the &#8220;Icon files&#8221; and &#8220;CFBundleIcons-ipad&#8221; headings. Open it in Xcode or a text editor.)</p>
<p>You can create your launch image (splash screen) from scratch in these sizes, or use a screengrab to get it (instructions for the latter appear later):</p>
<p>Default-568h@2x~iphone.png (640&#215;1136 pixels)<br />
Default-Landscape@2x~ipad.png (2048&#215;1496 pixels)<br />
Default-Landscape~ipad.png (1024&#215;748 pixels)<br />
Default-Portrait@2x~ipad.png (1536&#215;2008 pixels)<br />
Default-Portrait~ipad.png (768&#215;1004 pixels)<br />
Default@2x~iphone.png (640&#215;960 pixels)<br />
Default~iphone.png (320&#215;480 pixels)</p>
<p>Notice the tilde-like character (~) in the filenames? When I converted those to dashes, I got a &#8220;build failed&#8221; notice with cordova -d build ios. It was a failure of checking dependencies for some of the &#8220;Default&#8221; images. I copied and pasted the character into my image launch filenames, deleted the icon from the simulator, and all went well with a new build and emulate.</p>
<p>In addition, create the App Store artwork (JPG or PNG) that you&#8217;ll upload to the App Store later in iTunes Connect:<br />
1024×1024 (iPad)<br />
512 x 512 (iPhone)</p>
<p>Do a cordova build and cordova emulate to check the icons. Your launch image should show, then when you do a Hardware &gt; Home you should see your icon image.</p>
<h2> Test and Incorporate your Code</h2>
<ul>
<li>Double-check that your app meets the HIG (Human Interface Guidelines), the rules Apple uses to determine properly designed apps for the App Store. Link found in the iOS Dev Center online: <a title="https://developer.apple.com/devcenter/ios/index.action" href="https://developer.apple.com/devcenter/ios/index.action" target="_blank">https://developer.apple.com/devcenter/ios/index.action</a></li>
<li>Double-check that your app does not go afoul of these App Review Guidelines. Link found in the iOS Dev Center online: <a title="https://developer.apple.com/devcenter/ios/index.action" href="https://developer.apple.com/devcenter/ios/index.action" target="_blank">https://developer.apple.com/devcenter/ios/index.action</a></li>
<li>Make sure your HTML is valid. <a title="http://validator.w3.org/" href="http://validator.w3.org/" target="_blank">http://validator.w3.org/</a></li>
<li>Validate your Javascript. <a title="http://www.javascriptlint.com/online_lint.php" href="http://www.javascriptlint.com/online_lint.php" target="_blank">http://www.javascriptlint.com/online_lint.php</a></li>
<li>You may want to minify your JS. <a title="http://www.minifyjs.com/javascript-compressor/" href="http://www.minifyjs.com/javascript-compressor/" target="_blank">http://www.minifyjs.com/javascript-compressor/</a></li>
<li>Do image optimization/compression. <a title="http://imageoptim.com/" href="http://imageoptim.com/" target="_blank">http://imageoptim.com/</a></li>
<li>Remove the default folders CLI created in the /www folder: /js, /css, /img.</li>
<li>Make sure your index.html and all pages with a Cordova API references in the &lt;head&gt;:</li>
</ul>
<pre>&lt;script type="text/javascript" charset="utf-8" src="cordova.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" charset="utf-8"&gt;
document.addEventListener("deviceready", onDeviceReady, false);
function onDeviceReady() {
 }
&lt;/script&gt;</pre>
<p>Don&#8217;t just copy/paste the above everywhere; change src=&#8221;cordova.js&#8221; to ../cordova.js or even ../../cordova.js, depending on the folder.</p>
<ul>
<li>When done error-checking, drag or copy your project&#8217;s code to the TestAppIos/www folder.</li>
<li>You can run the project in a web server via CLI (although you can&#8217;t test all the plugins this way):</li>
</ul>
<p>1. cordova prepare ios<br />
2. cordova serve ios<br />
3. Open a web browser like Chrome or Firefox and paste the following into the URL field:<br />
<a href="http://localhost:8000" rel="nofollow">http://localhost:8000</a><br />
4. Open Firebug or Developer tools, then click on the ios link.<br />
4. Run your code thoroughly to look for problems.<br />
5. When finished, click on the Terminal screen to select it, then on Control + C keys to terminate the server.</p>
<p>I noticed that Developer Tools could not find cordova.js using the cordova serve method. That file is created in the platforms folder. So you can open platforms/ios/www/index.html in a browser to test.</p>
<ul>
<li>For more testing possibilities, use the weinre (Web Inspector Remote) software at <a title="http://people.apache.org/~pmuellr/weinre/docs/latest/" href="http://people.apache.org/~pmuellr/weinre/docs/latest/" target="_blank">http://people.apache.org/~pmuellr/weinre/docs/latest/</a></li>
<li>PhoneGap&#8217;s wiki has several suggestions for testing at <a title="https://github.com/phonegap/phonegap/wiki/Debugging-in-PhoneGap" href="https://github.com/phonegap/phonegap/wiki/Debugging-in-PhoneGap" target="_blank">https://github.com/phonegap/phonegap/wiki/Debugging-in-PhoneGap</a></li>
</ul>
<h2>Use Cordova CLI&#8217;s iOS Emulator</h2>
<p>1. Cordova CLI offers a &#8220;run&#8221; option, which allows you to view the app in an emulator. However, before doing that, we must download another piece of software. If you do a cordova run ios now, you&#8217;ll get this error message, which tells you of two ways to correct:</p>
<p><em>Error: An error occurred while running the ios project.<span style="color:#ff0000;">Error: ios-deploy was not found. Please download, build and install version 1.0.4 or greater from <a href="https://github.com/phonegap/ios-deploy" rel="nofollow">https://github.com/phonegap/ios-deploy</a> into your path. Or &#8216;npm install -g ios-deploy&#8217; using node.js: <a href="http://nodejs.org/" rel="nofollow">http://nodejs.org/</a></span></em></p>
<p>2. I will show you both ways of making this work. First, let&#8217;s use the latter method of &#8220;npm install -g ios-deploy.&#8221; But first we must set our user account as the owner of the /usr/local directory with:</p>
<pre>sudo chown -R $USER /usr/local</pre>
<p>(taken from: <a title="http://foohack.com/2010/08/intro-to-npm/#what_no_sudo" href="http://foohack.com/2010/08/intro-to-npm/#what_no_sudo" target="_blank">http://foohack.com/2010/08/intro-to-npm/#what_no_sudo)</a></p>
<p>3. Now we can follow the download instructions given us:</p>
<pre>npm install -g ios-deploy</pre>
<p>4. Now we can run the project in the emulator with:</p>
<pre>cordova run ios</pre>
<p>5. After you are finished checking the app, exit the iPhone Simulator with the Quit command in the upper menu bar.</p>
<p>6. If you ever need to uninstall this Node.js package:</p>
<pre>npm rm ios-deploy -g</pre>
<p><strong>Now let&#8217;s try the GitHub option:</strong></p>
<p>1. Go to GitHub and click on the Download ZIP button (at right): <a title="https://github.com/phonegap/ios-deploy" href="https://github.com/phonegap/ios-deploy" target="_blank">https://github.com/phonegap/ios-deploy</a> I used Chrome and unzipped the file by clicking on the name in the lower left of the window.</p>
<p>2. View the folder &#8220;ios-deploy-master&#8221; in Finder&#8217;s Downloads folder, and drag it to its final location.</p>
<p>3. Change to that folder in the terminal (type cd then drag the folder to the terminal window, then hit Enter).</p>
<p>4. Run in terminal:</p>
<pre>make ios-deploy prefix=/usr/bin/local</pre>
<p>Everything is now in place to use the run ios command.</p>
<p>5. Now cd to the app&#8217;s folder, then build the app with:</p>
<pre>cordova build</pre>
<p>6. Finally:</p>
<pre>cordova run ios</pre>
<p>Xcode&#8217;s iOS Simulator should start and display the app. I actually got several lines reporting errors before the return of the prompt while waiting for the app to start, but then the app&#8217;s launch image displayed, then the app itself.</p>
<p>Quit the simulator normally through its menu bar.</p>
<h2>Set up a Developer Account</h2>
<p>At this point, you&#8217;ll need a Developer account to install and test the project on your device: <a title="https://developer.apple.com/" href="https://developer.apple.com/" target="_blank">https://developer.apple.com/</a> In the Member Center of the iOS Dev Center you&#8217;ll learn about Apple ID accounts, device ID, certificates, identifiers, code signing, and development and distribution provisioning profiles. You&#8217;ll learn about this in the App Distribution Guide: <a title="https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html" href="https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html" target="_blank">https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html</a> This illustrated guide will show and tell you how to get the app ready for the App Store, including troubleshooting setup problems.</p>
<h2>Set Up in Xcode</h2>
<p>Follow these steps after setting up a Developer account.</p>
<p>1. In Xcode, click on the product name in the left column. To the right of the product name, and to the left of &#8220;General&#8221; in the middle pane is a right arrow. Click on that to reveal the Project and Targets. Click on the product name under Targets. Click on General.<br />
2. Insert the version number of the app in the Version field in this format: 1.0.0. The Build number must be updated each time an upgrade of the app is uploaded.<br />
3. Select the Team provisioning profile for this app. Read the above doc link to learn about this.<br />
4. Scroll down to the Deployment Target and choose the earliest iOS version your app was designed to accommodate.<br />
5. Select which Devices your app supports: only iPhone/iPod touch, iPad, or both (Universal).<br />
6. Under the Devices drop-down will be iPhone and iPad buttons; iPhone is highlighted in blue as the selected one. Choose all the device orientations the app supports. Under that, you may wish to hide the status bar style during app launch; if so, select it for each device.<br />
7. Scroll down to see the listing of all the icons and launch images associated with the app.<br />
8. If your app supports iPad, scroll up, select &#8220;iPad&#8221; and review the content below it.</p>
<h2>Set up your device for use</h2>
<p>1. Online, you should have created App ID, registered your device for testing, and the Development Provisioning Profile should have links to the App ID, Certificate, and Device. That provisioning profile should be downloaded and installed to your computer.<br />
2. Plug your device into your Mac.<br />
3. The Organizer opens. Click on Use for Development.<br />
4. Choose the development team for provisioning.</p>
<h2>More Xcode Settings: Target Build Settings</h2>
<p>1. Back in Xcode, click on &#8220;Build Settings&#8221; to the right of &#8220;General.&#8221;<br />
2. For Base SDK, make sure &#8220;Latest iOS&#8221; has been selected.<br />
3. Under Code Signing Identity, make sure &#8220;iOS Developer&#8221; has been selected for the &#8220;Debug&#8221; and Debug/Any iOS SDK&#8221; drop-down. Later, when you create a Distribution Provisioning Profile, you&#8217;ll change the &#8220;Release&#8221; and &#8220;Release/Any iOS SDK&#8221; to reflect an &#8220;iOS Distribution&#8221; setting in the drop-down.<br />
4. Scrolling down further, iOS Deployment Target should be the same as you indicated in the last section above, the earliest version your app will work. Do this for both middle columns.<br />
5. Capabilities Pane &#8212; If you are integrating iCloud, Game Center, Passbook, In-App Purchase, Maps, Push Notifications, and so on, you&#8217;ll need to work in this section. Again, the online documentation link given above covers these.</p>
<h2>Launching your app on a device</h2>
<p>1. Connect a device that’s enabled for development to your Mac.<br />
2. In the project navigator, choose your device from the destination Scheme pop-up menu. Remember, it&#8217;s located to the right of the Run triangle in Xcode. Xcode assumes you intend to use the selected device for development and automatically registers it for you.<br />
4. Click the large gray Run triangle button in Xcode. Xcode installs the app on the device before launching the app. Larger app = longer wait.<br />
5. If a prompt appears asking whether codesign can sign the app using a key in your keychain, click Always Allow.</p>
<p>As you use the app, keep looking at the console in Xcode for feedback.</p>
<p>When done, hit the square Stop button in Xcode.</p>
<p>Any time you make changes to the HTML etc. pages, do a cordova build in the terminal, then in Xcode do Product &gt; Clean. Then you are ready to Run again with all updates.</p>
<h2>Screenshots</h2>
<p>Images must be at least 72 dpi, in the RGB color space, and the file must be .jpeg, .jpg, .tif, .tiff, or .png. Choose up to 5.</p>
<p><strong>3.5-inch Retina Display Screenshots</strong><br />
Default@2x~iphone.png (640&#215;960 pixels)<br />
Default~iphone.png (320&#215;480 pixels)</p>
<p><strong>4-inch Retina Display Screenshots</strong><br />
Default-568h@2x~iphone.png (640&#215;1136 pixels)</p>
<p><strong>iPad Screenshots</strong><br />
Default-Landscape@2x~ipad.png (2048&#215;1496 pixels)<br />
Default-Landscape~ipad.png (1024&#215;748 pixels)<br />
Default-Portrait@2x~ipad.png (1536&#215;2008 pixels)<br />
Default-Portrait~ipad.png (768&#215;1004 pixels)</p>
<p>Here are a few ways to get screengrabs of your app.</p>
<p>I.<br />
1. Connect the device to your Mac.<br />
2. On the device, configure the screen the way you want it.<br />
3. In Xcode, choose Window &gt; Organizer, and click Devices to display the Devices organizer.<br />
4. In the Devices organizer, select Screenshots under the device.<br />
5. Click New Screenshot for each screen you want.</p>
<p>II.<br />
Or, to capture a screenshot on your device, you press the Lock and Home buttons simultaneously. Your screenshot is saved in the Saved Photos album in the iPhoto app.</p>
<p>III.<br />
Or, use cordova emulate to show the app in the simulator, then use File &gt; Save Screen Shot. The screen shots will be automatically saved as png to the Desktop. The 3.5-inch saved to 640&#215;960.</p>
<p>IV.<br />
If you don&#8217;t have a device, then you&#8217;ll need to do a screen grab of the pages in a browser and knit them together in an image editor.</p>
<p>Don&#8217;t forget image optimization/compression of all those launch images. <a title="http://imageoptim.com/" href="http://imageoptim.com/" target="_blank">http://imageoptim.com/</a></p>
<h2>Upload a launch image (splash screen)</h2>
<p>Launch Images for all apps:<br />
640 x 1136 iPhone 5 and iPod touch<br />
1536 x 2048 iPad, iPad Mini — portrait (high res.)<br />
768 x 1024 iPad, iPad Mini — portrait (standard res.)</p>
<p>Follow these steps if you want to use a screen grab as a launch image.</p>
<p>1. Connect the device to your Mac.<br />
2. On the device, configure the screen the way you want it.<br />
3. In Xcode, choose Window &gt; Organizer, and click Devices to display the Devices organizer.<br />
4. In the Devices organizer, select Screenshots for a device or in the Library section.<br />
5. Select an image.<br />
6. Click “Save as Launch Image.”</p>
<p>Xcode has &#8220;asset catalogs&#8221; which keep all your asset images in one place. You don&#8217;t have to use it. For more information, read <a title="https://developer.apple.com/library/ios/recipes/xcode_help-image_catalog-1.0/Recipe.html" href="https://developer.apple.com/library/ios/recipes/xcode_help-image_catalog-1.0/Recipe.html" target="_blank">https://developer.apple.com/library/ios/recipes/xcode_help-image_catalog-1.0/Recipe.html</a></p>
<h2>Final steps</h2>
<p>1. You’ll want to get rid of all those .DS_Store files cluttering up your app’s folders. They’re a security hazard if they fall into the wrong hands. To do this system-wide, close all those folders in Finder and copy and paste this into Terminal:</p>
<pre>sudo find / -name “.DS_Store” -depth -exec rm {} \;</pre>
<p>Wait a while as it goes to work and the prompt returns. (This tip from: <a title="http://helpx.adobe.com/dreamweaver/kb/remove-ds-store-files-mac.html" href="http://helpx.adobe.com/dreamweaver/kb/remove-ds-store-files-mac.html" target="_blank">http://helpx.adobe.com/dreamweaver/kb/remove-ds-store-files-mac.html</a> )</p>
<p>After that&#8217;s done, do a cordova prepare from within your project&#8217;s folder.</p>
<p>2. Remove or comment out all the development testing code, like console.log and alert().</p>
<p>3. I don&#8217;t know if this is necessary or not, but you can copy your www/config.xml contents to the config.xml file in platforms/ios/www/</p>
<p>4. Back up your files! Open Keychain Access (click on the magnifier icon at top right of your desktop and type in “keychain” and select the app). Right-click on the certificates and export each one to your computer (giving each one a name similar to the name in the Keychain Access line), then send it off to a safe backup location. Without these files, you wouldn’t be able to upload successive versions of your apps.</p>
<p>5. Back up your password files. Go to Users/[name]/Library/Keychains and copy the any.keychain files there to a safe place. /Library is a hidden folder.</p>
<p>To show the hidden files, type in Terminal:</p>
<pre>defaults write com.apple.finder AppleShowAllFiles TRUE</pre>
<p>and hit Return. Then type in Terminal:</p>
<pre>killall Finder</pre>
<p>and hit Return. The desktop will go blank, then after a while will refresh. Open the Documents folder, then in Finder, Go &gt; Enclosing Folder, and see the hidden files in gray, including /Library.</p>
<p>To hide the hidden files, repeat both commands, but substitute FALSE in place of TRUE.</p>
<p>6. Now would be a good time to create a &#8220;snapshot&#8221; in Xcode of your work at this point in time (File &gt; Create Snapshot). A Snapshot is a copy of the project stored away. You’ll be able to revert to this version at a later date if you need to. If everything is working fine, then do a File &gt; Create Snapshot of your current working project before the next steps so you can revert if necessary. You can delete these snapshots by going to Window &gt; Organizer, click on Projects at top, then on the project name at left. After clicking on a Snapshot, click on the Delete Snapshot icon at lower right. This will free up a lot of memory after you’re sure you will no longer need the earlier versions. If you need to revert to an earlier version (snapshot) of the project, you will first create a new folder in Finder, then click on the Restore Snapshot icon to save it to that folder. You’ll have two versions of the project; this way the reverted version will not overwrite the previous version.</p>
<p>7. Fill out the Application Assets Template located here: <a title="http://wp.me/pyIb9-1o" href="http://wp.me/pyIb9-1o" target="_blank">http://wp.me/pyIb9-1o</a></p>
<p>8. You’ll need to go online to the Apple Developer site, sign in, and click on the iTunes Connect link.</p>
<p>9. Click on Manage Your Applications and either Add New App, or choose an existing app to upgrade. Follow the steps online and transfer all the information into the fields from the Application Assets Template you just filled out, as well as the screengrabs you made.</p>
<p>10. You need to finish to the point you see a button saying that it is “Waiting for Binary.” With that status, you are ready to upload a binary.</p>
<h2>Upload a binary to the App Store</h2>
<p>1. A binary of the app is the compiled version of the app that is made up of 0s and 1s. To compile your app for the App Store, first make sure your device is unconnected.<br />
2. If you made any last-minute changes to the PhoneGap project, do a &#8220;cordova prepare ios&#8221; command in a terminal window.<br />
3. In Xcode, do a Product &gt; Clean while holding down the option key.<br />
4. Then set Product &gt; Destination &gt; iOS Device.<br />
5. Then do a Product &gt; Archive and wait for the app to build.<br />
6. The Organizer window should open. Click on Distribute. If all went well, then follow the steps until the app has been successfully validated and uploaded to the App Store. If you get errors, enter the error message into Google search and fix.<br />
7. Until you get an email saying the app is “Ready for Sale,” you’ll get notifications in your iPhone or iPod touch giving you the status of your app as it goes through the approval process.</p>
<p><strong>Credits:</strong><br />
Mac®, OS X®, Apple®, Xcode®, App Store℠, iPad®, iPhone®, iPod® and Finder® are trademarks of Apple Inc.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/app-store/'>App Store</a>, <a href='https://iphonedevlog.wordpress.com/tag/app-submission/'>app submission</a>, <a href='https://iphonedevlog.wordpress.com/tag/config-xml/'>config.xml</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/debug-console-plugin/'>debug console plugin</a>, <a href='https://iphonedevlog.wordpress.com/tag/inappbrowser/'>inAppBrowser</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/itunes-connect/'>iTunes Connect</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap-api/'>PhoneGap API</a>, <a href='https://iphonedevlog.wordpress.com/tag/splashscreen-api/'>Splashscreen API</a>, <a href='https://iphonedevlog.wordpress.com/tag/xcode/'>Xcode</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1037/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1037/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1037/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1037&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/12/19/using-phonegap-3-3-cli-on-mac-os-x-mavericks-to-build-ios-projects/feed/</wfw:commentRss>
		<slash:comments>19</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using Git Versioning Control Locally</title>
		<link>https://iphonedevlog.wordpress.com/2013/09/20/using-git-locally/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/09/20/using-git-locally/#respond</comments>
		<pubDate>Fri, 20 Sep 2013 18:43:39 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Tips]]></category>
		<category><![CDATA[Android]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[git]]></category>
		<category><![CDATA[github]]></category>
		<category><![CDATA[repository]]></category>
		<category><![CDATA[version control]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=1015</guid>
		<description><![CDATA[You can add a versioning control system to track and manage your project&#8217;s assets with Git locally &#8212; you don&#8217;t need to upload it to git.com. Here&#8217;s how. Downloading Git Download Git from http://git-scm.com. It will detect your OS and provide the correct download for it. For my Mac, it was version 1.8.3.2. The Mac [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1015&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>You can add a versioning control system to track and manage your project&#8217;s assets with Git locally &#8212; you don&#8217;t need to upload it to git.com. Here&#8217;s how.</p>
<h2>Downloading Git</h2>
<p>Download Git from <a title="http://git-scm.com" href="http://git-scm.com" target="_blank">http://git-scm.com</a>. It will detect your OS and provide the correct download for it. For my Mac, it was version 1.8.3.2.</p>
<p>The Mac version downloaded a dmg file to my Downloads folder. Double-click to open it, then double-click on the pkg file. (If your preferences prevent you from opening a file from an unidentified developer, then hold down Control, right-click on the pkg icon, and select open.) The Installer should appear; click to continue through the few steps, including providing your admin password. You&#8217;ll find a drive icon for the Git dmg package; right-click and select to Eject. (I believe &#8220;dmg&#8221; is short for &#8220;disc image.&#8221;) <span id="more-1015"></span></p>
<h2>Set Up a Local Git Repo</h2>
<p>Git is used with command line tools, such as the Mac&#8217;s Terminal app. Start up the Terminal app by either clicking on it in the Dock at the bottom of the screen, or by clicking on the Spotlight icon (magnifying glass) at top of the screen and typing Terminal in the Search field.</p>
<p>Type &#8220;cd &#8221; (without the quotes) in the Terminal, which is short for &#8220;change directory.&#8221;</p>
<p>Go to the project folder you wish to track and drag it to the Terminal window and release. Click on the Terminal window to select it, and hit Enter.</p>
<p>Type the following to set up a Git repo for that project:</p>
<pre>git init</pre>
<p>A message confirms that a git repo has been set up: &#8220;Initialized empty Git repository in&#8230;&#8221; If you can see your hidden files, you&#8217;ll see a .git folder in your project&#8217;s folder. All tracking is done here. Each project will have its own local git repo. (To get rid of your git repo, all you need to do is delete that file and all of its tracking information is gone.)</p>
<p><strong>Git has three stages: </strong></p>
<p><strong>1) Working stage.</strong> These are the files in your projects, changed and unchanged, also called the working directory. These are the files you create and/or edit.</p>
<p><strong>2) Staging Index.</strong> These are the files marked &#8220;add&#8221; to send to the repo (third stage) for tracking.</p>
<p><strong>3) Repo</strong> (repository). These files were put in the Staging Index and &#8220;committed&#8221; to git. Git is now tracking these files.</p>
<p>Type &#8220;git status&#8221; in the Terminal to see the status of your files. You&#8217;ll see the untracked files and folders in red. It will note the name of the branch; in this case &#8220;master.&#8221; Notes will tell you what you may want to do next: &#8220;(use &#8220;git add &lt;file&gt;&#8230;&#8221; to include in what will be committed)&#8221; and: &#8220;nothing added to commit but untracked files present (use &#8220;git add&#8221; to track).&#8221;</p>
<h2>Create a .gitignore File</h2>
<p>Before putting any files into the Staging Index, it&#8217;s best to decide what files we do NOT want to add to the index. Since we use git to track our document changes, we don&#8217;t want to add all those files that we never use, like system files or the binaries we upload to Apple. We just want git to track the files we have created ourselves and ignore the rest. We can add all the files or file types to a .gitignore file that we never want added to the index. Let&#8217;s do this next. Make a list of types of files in your project that you do not want in the repo. GitHub maintains an official list of recommended .gitignore files at this public repository: <a title="https://github.com/github/gitignore" href="https://github.com/github/gitignore" target="_blank">https://github.com/github/gitignore</a> You&#8217;ll find lists of file types to ignore from a wide variety of programming languages, including Android, Java, and Objective-C.</p>
<p>You may use regular expressions in this list.</p>
<ul>
<li>* as in &#8220;*.apk&#8221; or any other file extension to include all files with that extension.</li>
<li>[0-9] as in &#8220;version[0-9].txt&#8221; for a range of files with those variations. Can also use [aeiou] letter ranges.</li>
<li>/ as in &#8220;merges/&#8221; to ignore all the files in a directory with a trailing slash.</li>
</ul>
<p>To create the file locally to apply to this project only, type in Terminal:</p>
<pre>nano .gitignore</pre>
<p>This will open the GNU nano text editor in the Terminal. Go ahead and type &#8220;.DS_Store&#8221;, &#8220;.cordova&#8221;, and any other files, one per line. You may preface a line with # to create a comment on that line: &#8220;# This is a note.&#8221; At this point, my file references: .DS_Store, .cordova, *.txt, myFILES/, merges/, platforms/android/assets/, platforms/android/bin/, platforms/android/cordova/, platforms/android/gen/, platforms/android/lib/. You may copy/paste from your notes into nano.</p>
<p>At the bottom of GNU nano is a list of commands. Do Control-X, then type y to save the changes, then Enter to accept the name of the file as &#8220;.gitignore&#8221;.</p>
<p>.gitignore needs to be in the git repo in order for git to start using it, otherwise, git&#8217;ll treat it as any other file if you commit it to repo along with the rest of the files. To get it into the Staging Index, in the Terminal, type and hit Enter:</p>
<pre>git add .gitignore</pre>
<p>Check the status:</p>
<pre>git status</pre>
<p>This put the file into the Staging Index, showing as a green filename, and shows us in red the remaining, unstaged, files. The green files are tagged to go to the repo; the red files are not. It also tells you what to do in case you made a mistake and want to remove the file from staging: (use &#8220;git rm &#8211;cached &lt;file&gt;&#8230;&#8221; to unstage).</p>
<p>Let&#8217;s commit it to the Repo stage. In the Terminal, type and hit enter:</p>
<pre>git commit -m "Add .gitignore file"</pre>
<p>Check the status:</p>
<pre>git status</pre>
<p>We see the file is no longer in the staging area. Now type:</p>
<pre>git log</pre>
<p>We see the log that git keeps of our commits. The commit has several pieces of information, including the long SHA algorithm number, the parent (the previous commit), author, and the note we attached as part of our commit, &#8220;Add .gitignore file.&#8221;</p>
<p>The SHA number is the magic glue that keeps the git process working. Each commit references the commit before, the parent. If any SHA was missing, then it could no longer go back. To preserve the integrity of the repo, you cannot actually delete any of these commits.</p>
<h2>Commit Messages</h2>
<p>We kept the commit message simple (&#8220;Add .gitignore file.&#8221;). Here are some tips for good commit messages:</p>
<ul>
<li>Single-line summary, &lt;50 chars.</li>
<li>Optionally followed by a blank line and a more complete description if the commit is too complicated for one line. Write it so you&#8217;ll understand the commit among all the other commits you&#8217;ll do. These notes will show up when you do git log.</li>
<li>Use present tense.</li>
<li>Use consistent keywords to indicate type of commit and what kind of files were changed. &#8220;UPDATE [html,js] Fixes a form bug that &#8230;.&#8221;</li>
<li>Use asterisks for bullet points.</li>
<li>Use ticket tracking numbers.</li>
</ul>
<p>Here is why it&#8217;s important to have thorough commit messages &#8212; to make them searchable by git log. You can add various parameters to the git log command and bring up the logs you want.</p>
<p>This will list the last five commits:</p>
<pre>git log -n 5</pre>
<p>This will list commits since that date:</p>
<pre>git log --since=2012-06-15</pre>
<p>This will list commits up to that date:</p>
<pre>git log --until=2013-08-03</pre>
<p>This will list all commits with author of Steve.</p>
<pre>git log --author "Steve"</pre>
<p>Lists all commits containing a specified string of chars. So make sure your commit messages have important keywords:</p>
<pre>git log --grep="init"</pre>
<p>This will list a terse presentation of the log:</p>
<pre>git log --oneline</pre>
<p>This limits oneline list to last 3 commits:</p>
<pre>git log --oneline -3</pre>
<p>(Thanks to <a title="http://www.Lynda.com" href="http://www.Lynda.com" target="_blank">Lynda.com</a> for this information.)</p>
<h2>Set Some Defaults</h2>
<p>To set the author and email for all of your project&#8217;s git commits, type the following into Terminal and hit Enter:</p>
<pre>git config --global user.name "Your Name"</pre>
<p>Type the following and Enter for the email:</p>
<pre>git config --global user.email "email@company.com"</pre>
<p>See what&#8217;s in the config file:</p>
<pre>git config --list</pre>
<p>Check the log to see if your name and email entries are now included:</p>
<pre>git log</pre>
<h2>To the Staging Index</h2>
<p>With the .gitignore now in place as our filter, let&#8217;s move our working files to the Staging Index. There are three ways to go:</p>
<p>1) This will add one file to the staging area:</p>
<pre>git add file.html</pre>
<p>2) This will add all the files to the staging index:</p>
<pre>git add .</pre>
<p>3) This will add file directly to the repo, skipping the staging index. Use this method only for modified files, not new or deleted files:</p>
<pre>git add -am "This is a note about the commit"</pre>
<p>This is a new project, so do #2. When finished, type &#8220;git status&#8221; to see what changed. If you see a lot of files that should have been in .gitignore, it&#8217;s not too late to delete the git folder, open the .gitignore to edit it following the Nano steps above, and start over.</p>
<h2>Branching</h2>
<p>I&#8217;m going to add a new feature to my PhoneGap app. I&#8217;ll make a separate branch for creating and testing all the modified files. When I&#8217;m confident the new feature works well, I&#8217;ll merge the branch back into the main trunk.</p>
<p>What branches are present? Type the following to show all branches:</p>
<pre>git branch</pre>
<p>At this point, only the &#8220;master&#8221; branch is present. This is the group of files currently being worked on by you. When you switch branches, files will swap out of the .git folder into your project folder and you&#8217;ll see the files as they are on that branch. Whenever we switch to a different branch, your files will switch folder locations to that branch. That&#8217;s how git works.</p>
<p>Create new branch (name should have no spaces or punctuation):</p>
<pre>git branch UPDATE_Add_new_widget</pre>
<p>Check the branches present:</p>
<pre>git branch</pre>
<p>Two branches are now listed, but the asterisk is still on master, so master is still the current branch. To switch to a different branch, name the branch:</p>
<pre>git checkout UPDATE_Add_new_widget</pre>
<p>A list of files &#8220;checked out&#8221; appear, along with the summary: &#8220;Switched to branch &#8216;UPDATE_Add_new_widget&#8217;.&#8221; These are the files currently in your working directory. A shortcut way that combines these two steps is:</p>
<pre>git checkout -b UPDATE_Add_new_widget</pre>
<p>Confirm the branches present:</p>
<pre>git branch</pre>
<p>Now the new branch has the asterisk. This means that a copy of the master has been made, and my project files have been swapped out for this copy, and it is now the working directory on my hard drive. That is the branch that will be updated any time I make adds and commits.</p>
<p>I may be called away from the project for an extended time, or just leaving work for the day or weekend. When I return to this project, I&#8217;ll want to refresh my mind about where I left off. This process is a nice way to begin a workday. Here are helpful steps:</p>
<ul>
<li><strong>git branch</strong> Make sure what branch I&#8217;m working on.</li>
<li><strong>git status</strong> Tells me what files are changed. Files may appear in green with the word &#8220;modified&#8221; next to them if I&#8217;ve already done a git add.</li>
<li><strong>git diff &#8211;staged</strong> Will show me a summary of what changes I made to the files after I did a git add but before git commit. It gives the file names changed and excerpts from the file of the lines that were changed and a few lines above and below for context, with the changed lines in green. All-new files will be shown in their entirety. (A colon at the bottom of the screen means there is more content; use the Return key or down arrows to read further. Tap q to immediately return to the prompt.)</li>
<li><strong>git log &#8211;oneline -3</strong> A terse summary with SHA and commit message. Helps me see context by tracing the last three commits.</li>
<li><strong>git log &#8211;author=&#8221;Captain America&#8221;</strong> If I&#8217;m working with a team, I can check out what they&#8217;ve done, filtering by author name.</li>
</ul>
<p>If I&#8217;m ready to commit the files to tracking:</p>
<pre>git commit -m "This is a note about the commit"</pre>
<p>After testing thoroughly, I&#8217;ll merge the branch to the master. First step, return to master branch:</p>
<pre>git checkout master</pre>
<p>I received confirmation:</p>
<pre>Checking out files: 100% (495/495), done. 
Switched to branch 'master'</pre>
<p>Next, get a list of all the branches:</p>
<pre>git branch</pre>
<p>Copy the branch name to be merged, and paste it into place in this step:</p>
<pre>git merge UPDATE_Add_new_widget</pre>
<p>Do a git log to see the commits made so far.</p>
<p>I&#8217;ll no longer need the branch once it&#8217;s merged, so I can delete it with the -d parameter:</p>
<pre>git branch -d UPDATE_Add_new_widget</pre>
<p>Confirmation received:</p>
<pre>Deleted branch UPDATE_Add_new_widget (was 4e6b7fe).</pre>
<p>Now I&#8217;m ready to create a new branch for the next group of files. I can have several branches going at once, each one testing something different, like a branch for a new navigation system for the home page, insert and test a new plugin, a branch for pictures and new gallery, and so on.</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<h1>My Git Notes</h1>
<p>There are more things I can do with git. Here are my personal notes, some of which I haven&#8217;t incorporated into the above article.</p>
<p><strong>Cheat Sheet:</strong><br />
<a title="https://github.com/tiimgreen/github-cheat-sheet" href="https://github.com/tiimgreen/github-cheat-sheet" target="_blank">https://github.com/tiimgreen/github-cheat-sheet </a></p>
<p><strong>Download Git Bash console program:</strong><br />
<a href="http://git-scm.com" rel="nofollow">http://git-scm.com</a> (Mac or PC &#8211; will auto-detect)<br />
For Mac, downloads a .dmg file; open and double-click on the .pkg file.</p>
<p><strong>Branching model:</strong><br />
<a href="http://nvie.com/posts/a-successful-git-branching-model/" rel="nofollow">http://nvie.com/posts/a-successful-git-branching-model/</a></p>
<p><strong>Check installation</strong> (where it is stored) [$ = your command prompt in the console window &#8211; don&#8217;t type this!]<br />
$ which git</p>
<p><strong>Check version:</strong><br />
$ git &#8211;version</p>
<p><strong>Go to directory:</strong><br />
$ cd D:\Git</p>
<p><strong>Go backwards 1 directory:</strong><br />
$ cd ..</p>
<p>A colon at left on the console means there is more content. Type q to escape or Enter to continue reading.</p>
<p><strong>See directory listing</strong> [these are ells, not ones]:<br />
ls -la [ls to list the directory, -la to show hidden files, like .git]<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<br />
<strong>STORING CONFIGURATIONS</strong></p>
<p><strong>System-wide setting (the defaults are fine):</strong><br />
PC location (must start from this directory): Program Files/Git/etc/gitconfig<br />
$ git config &#8211;system</p>
<p><strong>User settings:</strong><br />
location: $HOME/.gitconfig<br />
PC location: Documents and Settings/shusting<br />
$ git config &#8211;global</p>
<p>Project (settings specific to a project):<br />
location: my_project/.git/config<br />
$ git config</p>
<p><strong>More basic configurations:</strong><br />
$ git config &#8211;global user.name &#8220;name&#8221;<br />
$ git config &#8211;global user.email &#8220;email&#8221;<br />
$ git config &#8211;list<br />
[result]<br />
$ git config &#8211;global core.editor &#8220;notepad++.exe -wl1&#8243;<br />
[above is: w L 1&#8221;]<br />
$ git config &#8211;global color.ui true</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-<br />
First thing is to bring the git console to the project&#8217;s folder and type &#8230;<br />
$ git init<br />
&#8230; to get a git repo started on the hard drive. This tells Git to create a tracking system there.<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</p>
<p><strong>Helpful commands:</strong><br />
$ git help<br />
$ git help &lt;command&gt;<br />
$ q [to quit]<br />
$ cat .gitconfig [look inside the file]<br />
$ ls -la [list the files, including hidden files]</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;<br />
<strong>COMMITS</strong></p>
<p>3-tree Architecture, moving from one to the other</p>
<p>Tree: &#8220;WORKING&#8221; (on hard drive)<br />
Make changes to Working directory, then:<br />
$ git add &#8220;note&#8221; file.txt [move to Staging Index with note, below]<br />
$ git add . [add all files to Staging Index]<br />
$ git add -am &#8220;note&#8221; [add and commit ALL working directory files to repo, skipping Staging Index. Not good for new and deleted files, only modifying files.]</p>
<p>Tree: &#8220;STAGING INDEX&#8221;<br />
Can pick which of the files to send to Repo<br />
$ git commit file.txt [1 file to Repo]<br />
$ git commit -m &#8220;describe changes taking place here&#8221; [to Repo]</p>
<p>Tree: &#8220;REPO&#8221; (Git is now tracking these files)</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
$ git status [tells us the status among the 3 trees]:<br />
Will say what branch we are on<br />
Will list any untracked files<br />
Will give sample commands for what to do next<br />
&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p><strong>Writing Commit Messages</strong></p>
<p>Single-line summary, &lt;50 chars.<br />
Optionally followed by a blank line and a more complete description if change is too complicated for 1 line.<br />
Keep lines to &lt;72 chars.<br />
Use present tense. &#8220;UPDATE [html,js] Fixes a form bug that &#8230;.&#8221;<br />
Use asterisks for bullet points.<br />
Use ticket tracking numbers.<br />
Use shorthand to indicate what kind of files were changed. &#8220;[css]&#8221;</p>
<p><strong>Using Git Log to list things</strong> (and why it&#8217;s important to have thorough commit messages &#8211; to make them searchable by git.)<br />
$ git log -n 5 [List the last 5 commits]<br />
$ git log &#8211;since=2012-06-15 [List commits since that date.]<br />
$ git log &#8211;until=2013-08-03 [List commits up to that date.]<br />
$ git log &#8211;author &#8220;Steve&#8221; [List all commits with author of Steve.]<br />
$ git log &#8211;grep=&#8221;init&#8221; [List all commits containing that string of chars.]</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p><strong>Referring to Commits</strong></p>
<p>Checksums ensure the data in the commit set is the same (essential for data integrity).<br />
Uses SHA-1 hash algorithm, a 40-char string.<br />
It&#8217;s seen next to our commit line in the git log.</p>
<p>A commit set has:</p>
<p>SHA hash value at top<br />
Parent (links to immediately prior SHA or commit)<br />
Author<br />
Commit Message</p>
<p>Tree-ish: something that references a part of the tree; it references a commit, and then to the tree. &#8220;-ish&#8221; because what that something is can vary widely. A tree is a directory. A blob is a file.</p>
<p>$ git ls-tree HEAD [shows what files are in the HEAD. Current set of repo files.]<br />
$ git ls-tree master www/ [shows commit of master]<br />
$ git ls-tree master^ www/ [shows previous commit/state of master]<br />
$ git ls-tree sha8q9qp4qg1gh1p5g12p5p5 [shows tree/directory&#8217;s contents]</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;<br />
<strong>HEAD pointer</strong></p>
<p>Points to next spot, or where last repo stopped; points to tip of current branch in repo. Like a playback-and-record head in a VCR. It points to the SHA of the last parent, for that will be put in the next repo&#8217;s SHA, referencing the last parent. It will point to where we will record next, so if we move the Head further back, it will overwrite from there.</p>
<p><strong>Drill-down sequence:</strong><br />
$ ls -la [to see list. will see file named HEAD]<br />
$ cat HEAD [will show file structure of HEAD]<br />
$ cd refs [first folder of above structure.]<br />
$ ls -la [to see list. Will see file named heads]<br />
$ cd heads<br />
$ ls -la [to see content list. will see file named master]<br />
$ cat master [result will show 40-char SHA of the commit set]</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p><strong>Ignoring Files: using .gitignore</strong></p>
<p>Use basic regular expr: * ? [aeiou] [0-9]<br />
Negate expressions with !<br />
Ignore all files in a directory with a trailing slash: assets/<br />
Comment lines: # comment</p>
<p>Can create this file with the command line:<br />
$ nano .gitignore</p>
<p>Can globally ignore files so that file applies to all files on my machine.<br />
1. Create the file and contents:<br />
$ nano /Users/Me/.gitignore</p>
<p>2. Add the above to the config file:<br />
git config &#8211;global core.excludesfile ~/.gitignore_global</p>
<p>Ignoring tracked files (deletes from the staging index, but not the working):<br />
$ git rm &#8211;cached filename.html</p>
<p>Git ignores directories with no files. So create a hidden file with no content in it to track the directory:<br />
touch directory/new-directory/.gitkeep</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</p>
<p><strong>Git Log</strong><br />
$ git log to see what changes have been made.<br />
$ git log &#8211;oneline [a terse presentation of the log]<br />
$ git log &#8211;oneline -3 [limits list to last 3 commits]<br />
$ git log &#8211;since=&#8221;2013-08-05&#8243; [entries since that date. May use after instead of since]<br />
$ git log &#8211;until=&#8221;2013-08-05&#8243; [may use before instead of until]<br />
$ git log &#8211;since=&#8221;2 weeks ago&#8221; &#8211;until=&#8221;today&#8221; [shows commits within time range]<br />
$ git log &#8211;author=&#8221;Steve H&#8221;</p>
<p>Use GREP [GREP = global regular expression]:<br />
$ git log &#8211;grep=&#8221;TUT&#8221; [show lists with those chars]<br />
$ git log -n 5 [to get 5 most recent logs]<br />
$ git log aw4tq4t4.. index.html [show what happened to a file from a particular commit, using SHA.]<br />
$ git show &lt;SHA&gt; [show the difference]</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</p>
<p><strong>Comparing changed files in master and working trees:</strong><br />
$ git status<br />
$ git diff<br />
or<br />
$ diff &#8211;color-words filename.txt</p>
<p>Comparing files in staged tree to repo:<br />
$ git status<br />
$ git diff &#8211;staged</p>
<p>$git diff &lt;SHAa&gt;..&lt;SHAb&gt; &lt;filename.html&gt; [show changes just to that file between those two SHAs]</p>
<p>$ git log &#8211;oneline<br />
$ git diff &#8211;stat &#8211;summary &lt;SHA&gt;..HEAD [show summary of what&#8217;s changed]</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p><strong>Editing files</strong></p>
<p>Deleting files from repo, 2 methods:<br />
1.<br />
Drag file from folder on hard drive to trash can.<br />
$ git rm file-to-delete.txt<br />
$ git commit -m &#8220;removed deleted file&#8221;<br />
[this method will &#8220;save&#8221; the file in the trash can for later retrieval]<br />
2.<br />
$ git rm file-to-delete.txt<br />
[this method will completely delete the file from your hard drive; no trash can]</p>
<p>Moving and renaming files<br />
$ git mv file.txt new_folder/renamed_file.txt</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;</p>
<p><strong>Undoing working directory changes</strong></p>
<p>UNDO<br />
Pulling a file out of Repo, switching from the one in Working<br />
$ git checkout &#8212; index.html [the &#8221; &#8212; &#8221; means to stay in the same branch. useful in case a branch has the same name.]</p>
<p>Unstaging a file while keeping the working file<br />
$ git reset HEAD filename.txt</p>
<p>Amending Commits<br />
This is trickier because changing a commit means if changing the SHA, the snapshots after that would be affected, and this would affect data integrity. So, you can only make changes to the last commit.</p>
<p>$ git log [top of the listing is latest commit we could change]<br />
Put changed files into the staging area, then:<br />
$ git commit &#8211;amend -m &#8220;note changed&#8221;<br />
Or do the above second step by itself if you just want to change the note of the commit.</p>
<p>To change earlier commits, one must make a copy of the version previous to the wrong commit and change and commit that. Steps:<br />
$ git log<br />
copy the SHA of the commit before the wrong file.<br />
$ git checkout &lt;SHA&gt; &#8212; filename.txt<br />
$ git status [moved above file into Staging Index]<br />
$ git diff &#8211;staged [to see the revisions]<br />
$ git reset HEAD filename.txt [puts it in working directory]<br />
$ git commit -m &#8220;note about changed commit&#8221;</p>
<p>A faster way than above to revert a commit:<br />
$ git log<br />
copy the SHA of the commit of the prior(?) file<br />
$ git revert &lt;paste SHA here&gt;<br />
My text editor should mention the changes and make them, and give room for me to make a comment of my own about it.</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p><strong>BRANCHING</strong></p>
<p>One working directory. Git uses &#8220;Fast context switching&#8221; when going between branches, making the working directory match the branch.</p>
<p>$ git branch [show all branches]<br />
* master [* next to the branch name indicates the current checked-out branch. What your working directory matches.]<br />
$ cat .git/HEAD [show current tip of branch, where the Head is now]<br />
$ ls -la .git/refs/heads [show all branches listed]<br />
$ cat .git/refs/heads/master [show SHA of current branch tip]</p>
<p>$ git branch UPDATE_Add_New_2013_Pix [create branch; no spaces or punctuation]<br />
$ git branch [shows all branches, including new one made]<br />
$ cat .git/HEAD [shows us the checked out branch]</p>
<p>$ git checkout branch-name [switch to named branch]<br />
$ git checkout -b UPDATE_Add_2014_Pix [create new branch off of the current branch and switch to it]<br />
$ git checkout &#8212; filename.html [&#8211; means checkout file in same branch, not checkout branch.]</p>
<p><strong>How do I merge a branch back to the master?</strong></p>
<p>$ git checkout master<br />
$ git merge &lt;branch name&gt;</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/category/tips/'>Tips</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/git/'>git</a>, <a href='https://iphonedevlog.wordpress.com/tag/github/'>github</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/repository/'>repository</a>, <a href='https://iphonedevlog.wordpress.com/tag/version-control/'>version control</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/1015/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/1015/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/1015/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/1015/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/1015/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/1015/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/1015/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/1015/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/1015/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/1015/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/1015/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/1015/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=1015&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/09/20/using-git-locally/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Easily Add Search Functions to Your App</title>
		<link>https://iphonedevlog.wordpress.com/2013/09/02/easily-add-search-functions-to-your-app/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/09/02/easily-add-search-functions-to-your-app/#comments</comments>
		<pubDate>Mon, 02 Sep 2013 02:55:04 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Tips]]></category>
		<category><![CDATA[Javascript]]></category>
		<category><![CDATA[Zoom Search Engine]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=988</guid>
		<description><![CDATA[I have been adding a Search function to my Cordova PhoneGap apps for a few years now. It is so easy that I want to share it with you who have wondered how to do the same. I use a product that works in Windows, and it creates a search database of all words in [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=988&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I have been adding a Search function to my Cordova PhoneGap apps for a few years now. It is so easy that I want to share it with you who have wondered how to do the same. I use a product that works in Windows, and it creates a search database of all words in the HTML pages using Javascript. I&#8217;m using <strong>Zoom Search Engine 6.0 Professional Edition,</strong> available from <a title="http://www.wrensoft.com/zoom/" href="http://www.wrensoft.com/zoom/" target="_blank">http://www.wrensoft.com/zoom/</a>. <span id="more-988"></span></p>
<p>I&#8217;m using the software&#8217;s CD-ROM Javascript implementation, so all the files are put right on the app. Here are the more notable features I use.</p>
<p>1. I copy the app to my Windows machine, remove all the files I don&#8217;t want searched, and put them in a zoom/ folder on my desktop. The folders should be as they appear in the www/ folder. Then I open the Zoom program and the Wizard comes on, which takes me through the steps I need to scan the files. I point the software to the desktop zoom/ location, then specify that I want only HTML files to be searched. Otherwise, one could also search PDF, doc, Shockwave, and so on. Rather than starting the search immediately, I cancel at that point and look at the tabbed options.</p>
<p>2. The Configure screen has many tabbed options. Here are the major ones. The <strong>Scan Options</strong> tab lets you specify the file extensions to scan (htm, html, txt, and so on).</p>
<p>3. <strong>Skip Options</strong> allow you to specify words to skip scanning. A skip word list is already supplied, and includes<em> and, or, the, it,</em> and similar common words.</p>
<p>4. The <strong>Search Page</strong> tab asks you what features you want the user to enable on the page before searching. Includes &#8220;Default to &#8216;match all search words'&#8221; (which I have checked), &#8220;Show time taken to perform search&#8221; (unchecked), &#8220;Show Zoom info line&#8221; (unchecked), &#8220;Provide option to &#8216;Sort results by date'&#8221; (unchecked). You can check them all to see what they are.</p>
<p>The search page was originally styled for the clickable world of the Internet. I altered the CSS to make the buttons large and tappable. The search page is static; that is, it is the same code generated irrespective of the scanning database, which means that I can use the same page in all of my apps. I don&#8217;t need to style it over and over. So when the search.html page is generated, I replace it with the search.html page from one of my apps.</p>
<p>5. The <strong>Results Layout</strong> tab tells me what information should be returned on the search page. All I have checked is &#8220;Title of page,&#8221; but other options (which I feel only serve to clutter up a mobile window) are available, such as: Result number, Meta description, Image, Terms matched, Score, Date, File size, URL.</p>
<p>The &#8220;Title of page&#8221; means the words in the &lt;title&gt;&lt;/title&gt; tags will be returned for the pages containing the search term. So it&#8217;s important to make all the title tags meaningful and representative of the information on its page. Please don&#8217;t put a generic title on multiple pages, like &#8220;Manual.&#8221; Depending on your app, this may be the most extensive editing you&#8217;ll need to do to your pages to integrate a search page.</p>
<p>6. The<strong> Indexing Options</strong> tab asks us what parts of a page to include or exclude from indexing. I have checked &#8220;Title of page&#8221; and &#8220;Page content.&#8221; You also have the option of Meta description (the content in the &lt;meta&gt; tags), Filename, Link text, ALT text for image links, and so on.</p>
<p>7. The<strong> Limits</strong> tab specifies the various limits on searches, such as the maximum number of files to index (I put it high enough to include all of my files), and other limits.</p>
<p>8. The <strong>Categories</strong> tab gives you the option of specifying an option box on the search page to limit the search in certain ways. For instance, I broke down the Bible in an app by sections and specified which files belonged to each section, and the phrase that would appear for that category. So a person could specify &#8220;Major Prophets&#8221; when doing a search.</p>
<p>9. You can enable the option to highlight the word searched after they tap on the result link. The page will move to show the search term on the screen. To enable this feature, it has to be checked in Zoom, and you need to add this code to the bottom of every page:</p>
<pre>&lt;script&gt;highlight();&lt;/script&gt;</pre>
<p>It was easy to do: just do a multiple-page search-and-replace for &#8220;&lt;/body&gt;&#8221; replacing it with &#8220;&lt;script&gt;highlight();&lt;/script&gt;&lt;/body&gt;&#8221;</p>
<p>These are the tabs I pay the most attention to; there are several more tabs. The actual scanning takes a few seconds to a few minutes to complete, and it generates four text Javacript files. Those files are placed relative to where they were placed by Zoom Engine. So if you recreated the www/ folder structure of your app, and Zoom saved the js files in the root www/ folder, then those files need to be placed in the same place in order to work. The search.html page references all those js files, so it has to be placed in the same folder as the js files. If you want to move the search.html page to a different folder, then the references in the search.html&#8217;s &lt;head&gt; need to be adjusted.</p>
<p>How large are these files? It depends on the amount of words scanned. For instance, scanning the whole Bible results in a 3MB index js file.</p>
<p>I&#8217;m very happy with this program and recommend that you try the free version (which allows only a limited number of pages to be searched) and see how well it works for you.</p>
<p>Here is the CSS styling I use for the search.html page for mobile screens. It completely replaces the stock search page&#8217;s CSS generated by Zoom:</p>
<pre>&lt;style type="text/css"&gt;
body { color:#000;}
 .highlight { background: #FFFF40; }
 .searchheading { font-size: 120%; font-weight: bold; color:red; clear:both; float:left;clear:right;margin-top:.5em;}
 .summary { font-size: 120%; font-style: normal; clear:left;float:left;padding-bottom:.5em;}
 .suggestion { font-size: 100%; }
 .results { font-size: 100%; margin-top:.5em;}
 .category { color: #999999; clear:both;float:right;}
 .sorting { text-align: right; }
.result_title { font-size: 120%; } 
 .description { font-size: 100%; color: #000000;}
 .context { font-size: 100%; }
 .infoline { font-size: 110%; font-style: italic; color: #000;padding-top:.5em;padding-bottom:1em;border-bottom:2px dotted gray;}
.zoom_searchform { font-size: 1em; }
 .zoom_results_per_page { font-size: 1em; padding: .3em;margin-left: 0px; clear:left; float:left;}
 .zoom_match { font-size: 100%; margin-left: 0px; clear:left; float:left;} 
 .zoom_categories { font-size: 1em; padding:.3em; }
 .zoom_categories ul { display: inline; margin: 0px; padding: .3em;}
 .zoom_categories li { display: inline; margin-left: 15px; list-style-type: none; }

 .cat_summary ul { margin: 0px; padding: 0px; display: inline; }
 .cat_summary li { display: inline; margin-left: 15px; list-style-type: none; }
input.zoom_button { 
font-family:Helvetica, Arial, sans-serif; font-size:1.2em;font-weight:bold;
text-align:left;margin:0;padding:0;float:left; clear:both;
-webkit-border-radius: 5px;
-moz-border-radius: 5px;
border-radius: 5px;
margin-top:.5em;
height:3em;width:100%;
text-align:center; 
color:#fff;background-color:#333;
}
input.zoom_searchbox { height:2em; width:98%;
-webkit-border-radius: 5px;
-moz-border-radius: 5px;
border-radius: 5px; font-size:1.5em;
}
select {
width:98%; -webkit-border-radius: 5px;
-moz-border-radius: 5px;
border-radius: 5px;
font-size:1.2em;
} 
 .result_image { float: left; display: block; }
 .result_image img { margin: 10px; width: 80px; border: 0px; }
.result_block { margin-top: 15px; margin-bottom: 15px; clear: left; }
 .result_altblock { margin-top: 15px; margin-bottom: 15px; clear: left; }

.result_pages { font-size: 2em;line-height:2.0em; color:#666;}

.result_pages a { 
border:1px solid black;padding:.3em .5em;
-webkit-border-radius: 5px;
-moz-border-radius: 5px;
border-radius: 5px;background-color:#ccc;}
.result_pagescount { font-size: 1em;float:right;}

.searchtime { font-size: 17px; }

.recommended 
 { 
 background: #DFFFBF; 
 border-top: 1px dotted #808080; 
 border-bottom: 1px dotted #808080; 
 margin-top: 15px; 
 margin-bottom: 15px; 
 }
 .recommended_heading { float: right; font-weight: bold; }
 .recommend_block { margin-top: 1em; margin-bottom: 1em; clear: left; } 
 .recommend_title { font-size: 1px; }
 .recommend_description { font-size: 1px; color: #008000; }
 .recommend_infoline { font-size: 15px; font-style: normal; color: #808080;}
 .recommend_image { float: left; display: block; }
 .recommend_image img { margin: 10px; width: 80px; border: 0px; }
&lt;/style&gt;</pre>
<p>Android users (both phone and tablet) can download one of my free apps to see this Search feature (and the above CSS) in action: <a title="https://play.google.com/store/apps/details?id=com.stevehusting.RC10B42Essentials" href="https://play.google.com/store/apps/details?id=com.stevehusting.RC10B42Essentials" target="_blank">https://play.google.com/store/apps/details?id=com.stevehusting.RC10B42Essentials </a></p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/category/tips/'>Tips</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/javascript/'>Javascript</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/zoom-search-engine/'>Zoom Search Engine</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/988/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/988/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/988/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/988/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/988/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/988/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/988/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/988/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/988/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/988/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/988/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/988/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=988&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/09/02/easily-add-search-functions-to-your-app/feed/</wfw:commentRss>
		<slash:comments>2</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Using PhoneGap 3.0 CLI on Mac OS X to Build iOS and Android Projects</title>
		<link>https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/#comments</comments>
		<pubDate>Fri, 16 Aug 2013 20:48:08 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[CLI]]></category>
		<category><![CDATA[command line]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[inAppBrowser]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[plugin]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=938</guid>
		<description><![CDATA[At the time this was written PhoneGap Build does not support PG 3.0. These instructions assume Cordova PhoneGap is being used, not Build. I highly recommend following the latest version of PhoneGap or Cordova. For instance, try these pages: iOS: https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/ Android: https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/ In this article, you will use CLI to build iOS and Android [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=938&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>At the time this was written PhoneGap Build does not support PG 3.0. These instructions assume Cordova PhoneGap is being used, not Build.</p>
<blockquote><p><strong>I highly recommend following the latest version of PhoneGap or Cordova. For instance, try these pages:</strong></p>
<p>iOS: <a title="https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/" href="https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/">https://iphonedevlog.wordpress.com/2014/06/24/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-ios-apps/</a></p>
<p>Android: <a title="https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/" href="https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/">https://iphonedevlog.wordpress.com/2014/06/20/using-cordova-3-5-cli-on-mac-os-x-mavericks-to-build-android-apps/</a></p></blockquote>
<p><strong>In this article, you will use CLI to build iOS and Android projects:</strong></p>
<ul>
<li>Install Cordova</li>
<li>Create a project with all necessary www folders and files</li>
<li>Add iOS and Android platform version folders and files</li>
<li>Build an Android debug apk for installation on a device for previewing</li>
<li>Build an Android project and view on a browser for previewing</li>
<li>Add the InAppBrowser and Splashscreen plugins</li>
<li>Update icons and splash screens for each platform</li>
<li>Update the config.xml, AndroidManifest.xml, and index.html files</li>
<li>Customize content for a particular platform</li>
<li>Finalize a product apk for Google Play upload, including keys and certificates</li>
</ul>
<p><span id="more-938"></span>PhoneGap&#8217;s next releases will rely heavily on PhoneGap CLI (Command Line Interface), and to use it requires the installation of Node.js. Because Node.js will interface with the Eclipse (for Android) and Xcode (for Apple iOS) SDKs, the latest versions of those programs need to be installed as well. To read more about Node.js, one good read is the following (obviously for the technically minded among us): <a title="http://digitalfireflymarketing.com/what-nodejs-good" href="http://digitalfireflymarketing.com/what-nodejs-good" target="_blank">http://digitalfireflymarketing.com/what-nodejs-good</a></p>
<p>This article assumes you already have the latest version Xcode installed on your Mac. If not, download from here (I have articles on my site that give more directions).<br />
Xcode: <a title="http://www.apple.com/osx/apps/app-store.html" href="http://www.apple.com/osx/apps/app-store.html" target="_blank">http://www.apple.com/osx/apps/app-store.html </a><br />
Android SDK + Eclipse + ADT plugin: <a title="http://developer.android.com/sdk/index.html" href="http://developer.android.com/sdk/index.html" target="_blank">http://developer.android.com/sdk/index.html</a></p>
<p>I am using part of Kerri Shott&#8217;s instructions for installing PhoneGap CLI, here:<br />
<a title="http://photokandy.tumblr.com/post/46289610781/getting-started-with-cordova-cli " href="http://photokandy.tumblr.com/post/46289610781/getting-started-with-cordova-cli" target="_blank">http://photokandy.tumblr.com/post/46289610781/getting-started-with-cordova-cli </a><br />
My article goes into more detail for the non-tech-savvy; hers assumes you already have some familiarity with using vi, among other things. I fill in the missing spaces in this article. Also, if you encounter something different from my experience, take a look at her article and see if it is addressed, or better yet, look at the PhoneGap resources following. My installation was not exactly the same.</p>
<p>Resources:<br />
<a title="http://docs.phonegap.com/en/3.0.0/guide_platforms_index.md.html#Platform%20Guides" href="http://docs.phonegap.com/en/3.0.0/guide_platforms_index.md.html#Platform%20Guides" target="_blank">http://docs.phonegap.com/en/3.0.0/guide_platforms_index.md.html#Platform%20Guides</a><br />
<a title="http://phonegap-tips.com/articles/the-nodejs-command-line-interface-for-phonegap.html" href="http://phonegap-tips.com/articles/the-nodejs-command-line-interface-for-phonegap.html" target="_blank">http://phonegap-tips.com/articles/the-nodejs-command-line-interface-for-phonegap.html</a></p>
<h1>Install Node.js</h1>
<p>1. I downloaded nodejs from <a title="http://nodejs.org/" href="http://nodejs.org/" target="_blank">http://nodejs.org/</a> It downloaded as node-v0.10.13.pkg in the Downloads folder. I double-clicked its icon to start the installation.</p>
<p>2. An installer appeared saying, &#8220;This package will install node and npm into /usr/local/bin.&#8221; I hit Continue and followed the prompts. The download came to 37.7MB of space. The final screen said,</p>
<pre>Node was installed at 
/usr/local/bin/node
npm was installed at 
/usr/local/bin/npm</pre>
<p>Make sure that /usr/local/bin is in your $PATH. To do so, type in the Terminal:</p>
<pre>sudo pico /etc/paths</pre>
<p>You&#8217;ll see a listing of paths. Add /usr/local/bin to the top and press enter if it isn&#8217;t. (It&#8217;s pretty standard and should be there already.)</p>
<pre>/usr/local/bin</pre>
<p>Node.js&#8217;s code in the Terminal references the $PATH, so let&#8217;s follow that instruction about the $PATH. (The $PATH is a listing of all directories where the system will look for commands. So if you type &#8220;ls&#8221; in the Terminal, it will look in those directories in order to find the file that executes the ls command.)</p>
<p>3. Open the Terminal and type the following to get to your root, then press Enter:</p>
<pre>cd ~</pre>
<p>4. Type the following to open the .profile hidden file, and then hit Enter (vi = visual editor):</p>
<pre>vi .profile</pre>
<p>I see on my screen:</p>
<pre>".profile" [New File]</pre>
<p>5. When I clicked to enter more text, I got white text on a red background saying,</p>
<pre>E348: No string under cursor</pre>
<p>That&#8217;s because I should have first typed i for the insert command. (To learn more about commands in this environment, see: <a href="http://www.cs.colostate.edu/helpdocs/vi.html" rel="nofollow">http://www.cs.colostate.edu/helpdocs/vi.html</a> ) While that text is still there go ahead and type i. &#8212; INSERT &#8212; should appear, telling you what mode you are in (you were in the command mode earlier). Type the following. When you start typing, your text will appear at the top of the Terminal window, not at the INSERT line. Type as shown on separate lines. Do NOT hit Enter when you are done:</p>
<pre># for NODE
PATH="${PATH}:/usr/local/bin"
export PATH
# for npm
PATH="${PATH}:/usr/local/bin/npm"
export PATH</pre>
<p>6. Do not hit Enter just yet! Press the ESC key to enter command mode.</p>
<p>7. Type the following command to write the files and hit Enter:</p>
<pre>:w</pre>
<p>This should write the contents to file. At the bottom of my screen, it said,</p>
<pre>".profile" [New] 3L, 54C written</pre>
<p>Evidently, three lines of 54 characters were written. Quit the vi editor by typing:</p>
<pre>:q</pre>
<p>This will return you to Terminal&#8217;s bash screen. Go ahead and quit Terminal. If you wish, you can open the file again following steps 3-4 and see if the file retained the contents you typed in.</p>
<h1>Xcode Command Line Tool</h1>
<p>7. Open Xcode and select to start a new project. When I did that, a notice appeared that a Command Line Tools update was available. I installed at that point. If you have not installed the tools yet, follow these steps to do so.</p>
<p>8. In Xcode: Xcode &gt; Preferences&#8230; &gt; Downloads. Click on Install to install. This is a hefty 118MB, so it&#8217;ll take a while.</p>
<h1>Add PATH Statements to .profile</h1>
<p>9. We need to add Android Tools to the $PATH via the .profile file. First you need to find your path to it. Try &#8220;adt-bundle&#8221; or &#8220;android-sdk&#8221; in the Spotlight and see which one you get. Or try &#8220;tools.&#8221; When you click on a result, the Finder will open the folder.<br />
10. Click on Go &gt; Enclosing folder and Finder opens the enclosing folder. Make sure it&#8217;s the right tools folder; it should have an &#8220;android&#8221; command file in it.<br />
11. Open up Terminal and drag the tools folder to it. Make a note of the folder path. Mine was:</p>
<pre>/Users/Steve/Developer/adt-bundle-mac-x86/sdk/tools</pre>
<p>We can safely shorten it to:</p>
<pre>~/Developer/adt-bundle-mac-x86/sdk/tools</pre>
<p>12. Follow steps 4-6 above, but use the arrow keys to get to the end of the previous entries, then starting on a new line with Enter, enter your PATH information like this (you can actually copy/paste in the information in the Terminal window from your own notes). You&#8217;ll need two entries, one to the tools folder and the other to the platform-tools folder:</p>
<pre># for android
PATH="${PATH}:~/Developer/adt-bundle-mac-x86/sdk/tools:~/Developer/adt-bundle-mac-x86/sdk/tools"
export PATH
# for adb
PATH="${PATH}:~/Developer/adt-bundle-mac-x86/sdk/platform-tools:~/Developer/adt-bundle-mac-x86/sdk/platform-tools"
export PATH</pre>
<p>Add the above information on separate lines as shown. Remember, after adding the above lines, to hit ESC to go into command mode, then type :w to save the contents, then :q to quit vi. Quit Terminal.</p>
<h1>Install Cordova CLI</h1>
<p>13. Open Terminal and issue the following command:</p>
<pre>sudo npm install -g cordova</pre>
<p><em><strong>Pay attention to the inconsistency in the PhoneGap documentation between the use of &#8220;phonegap&#8221; and &#8220;cordova&#8221; in the command line. For instance, the Command-line Interface online page uses &#8220;phonegap&#8221; while the InAppBrowser API online page uses &#8220;cordova.&#8221; They are not interchangeable when using CLI. As seen in the above command, we are asking to download &#8220;cordova.&#8221; So we would replace all instances of &#8220;phonegap&#8221; in the documentation with &#8220;cordova,&#8221; or the command will generate a &#8220;not found&#8221;-type error.</strong></em></p>
<p>Use &#8220;phonegap&#8221; in place of &#8220;cordova&#8221; if you expect to use the PhoneGap Build service.</p>
<p>14. Give the root password and hit Enter. I got a series of ERR lines, ending with:</p>
<pre>npm ERR! not ok code 0</pre>
<p>I kept pasting the command and hitting Enter over and over until it completed (maybe three times). When successful, you should get a long list of lines beginning with &#8220;npm http,&#8221; then finally ending with a series of words containing the @ symbol and digit/dot pairings, terminating with your username at the end.</p>
<p>15. Quit Terminal.</p>
<h1>Create a Test Project</h1>
<p>16. Ready to give it a dry run? Open Terminal and type the following:</p>
<pre>cordova create FolderName com.myproject MyProject</pre>
<p>We are not done with the installation yet. If we want to use the iOS emulator, we&#8217;ll need to install a few more files.</p>
<h1>Homebrew</h1>
<p>Homebew installs packages to their own directory and then symnlinks their files into /usr/local. To learn more about Homebrew visit: <a href="http://mxcl.github.com/homebrew/" rel="nofollow">http://mxcl.github.com/homebrew/</a>. [link no longer exists.]</p>
<p>17. Homebrew directs us to paste the following into Terminal to install itself:</p>
<pre>ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"</pre>
<p>It will tell you what it is about to do; just press Enter to continue or any other key to stop the program. If you trust what it wants to do to your system, then press Enter, enter your root password, and wait a while. It ended with:</p>
<pre>==&gt; Installation successful!
You should run 'brew doctor' *before* you install anything.
Now type: brew help</pre>
<p>18. We&#8217;ll follow the advice above to run &#8220;brew doctor.&#8221; Brew doctor seems to be a fix-it program to get Homebrew ready to use.</p>
<p>Type the following into the Terminal:</p>
<pre>brew doctor</pre>
<p>I waited until the command prompt was returned and got:</p>
<pre>Your system is ready to brew.</pre>
<p>19. Let&#8217;s use Homebrew to install the ios simulator. Type the following into the Terminal:</p>
<pre>brew install ios-sim</pre>
<p>I received the output (including a color icon of a mug of beer!):</p>
<pre>==&gt; Downloading https://github.com/phonegap/ios-sim/archive/1.7.tar.gz
######################################################################## 100.0%
==&gt; /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/rake install pr
&lt;color pic of beer&gt;/usr/local/Cellar/ios-sim/1.7: 4 files, 100K, built in 25 seconds</pre>
<h1>Project Creation, PhoneGap CLI-style</h1>
<p>20. I wanted to create an app called TestApp2 in the folder /Documents/AndroidApps/TestApp2. So I built up the command line like the following and hit Enter:</p>
<pre>cordova create ./Documents/AndroidApps/TestApp2 com.stevehusting.TestApp2 TestApp2</pre>
<p>It took several minutes to create on my Mac Mini.</p>
<p>21. After the above create command, indicate what platform you are building. Make sure the Terminal indicates that the current folder is the TestApp2 folder<strong> (if not, type cd in the Terminal,</strong> drag the TestApp2 folder to the Terminal, click on the Terminal to activate it, hit Enter), and type:</p>
<pre>cordova platform add ios</pre>
<p>*** ERROR ***</p>
<p>I received the error when I started the command from the TestApp2 folder:</p>
<pre>[Error: An error occured during creation of ios sub-project. /bin/sh: /Users/Steve/.cordova/lib/ios/cordova/2.9.0/bin/create: No such file or directory]</pre>
<p>error went away when I followed step 2 to enter the Node and npm lines in the $PATH</p>
<p>*****</p>
<p>I asked the program to list the platforms associated:</p>
<pre>cordova platform list</pre>
<p>Terminal showed:</p>
<pre>[ 'ios' ]</pre>
<p>22. Now let&#8217;s add the Android platform. Type:</p>
<pre>cordova platform add android</pre>
<p>I get the error message:</p>
<pre>cordova platform add android
[Error: The command 'android' failed. Make sure you have the latest Android SDK installed, and the 'android' command (inside the tools/ folder) added to your path. Output: /bin/sh: android: command not found</pre>
<p>a. After asking for help on the PhoneGap group, I was told to add the path to a .bash_profile hidden file. To do this, type the following and press Enter in Terminal. To get to the home directory:</p>
<pre>cd ~/</pre>
<p>b. Now type the following to create a .bash_profile in case there isn&#8217;t one already (don&#8217;t worry &#8211; it won&#8217;t overwrite an existing one):</p>
<pre>touch .bash_profile</pre>
<p>c. Then open the file with the following, and press Enter:</p>
<pre>open -e .bash_profile</pre>
<p>d. Enter the following into the new window that opens, and press Enter (remember to change the path, since yours is different from mine):</p>
<pre>export PATH=~/Developer/adt-bundle-mac-x86/sdk/tools:~/Developer/adt-bundle-mac-x86/sdk/tools:$PATH</pre>
<p>e. Save and exit that window. Now type the following in Terminal to activate the file and press Enter to switch to the new file:</p>
<pre>. .bash_profile</pre>
<p>24. Now let&#8217;s try again to add the Android platform from within the TestApp2 folder (type cd in the Terminal, drag the TestApp2 folder to the Terminal, click on the Terminal to activate it, hit Enter), and type:</p>
<pre>cordova platform add android</pre>
<p>25. The Terminal should return normally. Now test whether the platform has been added. Type the following and press Enter:</p>
<pre>cordova platform list</pre>
<p>The Terminal should return:</p>
<pre>[ 'android', 'ios' ]</pre>
<p>26. Now open your TestApp2 folder. Open the folder for &#8220;platforms&#8221; and see two folders, &#8220;android&#8221; and &#8220;ios.&#8221; If you look in there, you&#8217;ll see that PG has already created a skeleton site. Let&#8217;s run a CLI build command and see what happens.</p>
<h1>Testing various CLI Commands</h1>
<p>1. All the CLI commands will start with your project&#8217;s folder; in my case, TestApp2. From there, in Terminal:</p>
<pre>phonegap emulate ios</pre>
<p>Uh-oh, I got the result:</p>
<pre>-bash: phonegap: command not found</pre>
<p>I should have typed cordova, not phonegap. Some online instructions will say to use phonegap, some will say cordova. Which one to use? It depends on step 13 above, in which we typed &#8220;sudo npm install -g cordova.&#8221; In this case, it should be &#8220;cordova&#8221; in all commands in this installation. Now type:</p>
<pre>cordova emulate ios</pre>
<p>The title bar of Terminal will update with different messages, then the iOS Simulator should start, showing in a faux iPhone Retina/iOS 6.1 the home page with the Apache Cordova logo, name under it, and DEVICE IS READY below that.</p>
<p>When you typed this command, it built the app in your TestApp2/www folder, and overwrote some of the contents of the TestApp2/platforms/ios folder.</p>
<p>To return to the device&#8217;s home page and check out your device&#8217;s icon, go to Hardware &gt; Home. I notice in the Simulator a new Debug menu and Window &gt; Scale menu item. Try those out. The Scale 75% helped me to fit the simulator comfortably on my screen.</p>
<p>Click on the simulator to select it, then in the menu bar, turn it off with iOS Simulator &gt; Quit iOS Simulator.</p>
<p><strong>2. Now try:</strong></p>
<pre>cordova build ios</pre>
<p>After the Terminal finishes, look in the project folder&#8217;s platforms &gt; ios &gt; build folder to view the .app file that was was created.</p>
<p><strong>3.  Let&#8217;s try another command:</strong></p>
<pre>cordova build android</pre>
<p>This resulted in:</p>
<pre>BUILD FAILED
/Users/Steve/Developer/adt-bundle-mac-x86/sdk/tools/ant/build.xml:955: The following error occurred while executing this line:
/Users/Steve/Developer/adt-bundle-mac-x86/sdk/tools/ant/build.xml:966: The following error occurred while executing this line:
/Users/Steve/Developer/adt-bundle-mac-x86/sdk/tools/ant/build.xml:310: com.android.sdklib.build.ApkCreationException: Debug Certificate expired on 4/24/12 3:57 PM</pre>
<p>It failed because of an expired certificate. I found the issue resolved here: <a title="http://stackoverflow.com/questions/2194808/debug-certificate-expired-error-in-eclipse-android-plugins" href="http://stackoverflow.com/questions/2194808/debug-certificate-expired-error-in-eclipse-android-plugins" target="_blank">http://stackoverflow.com/questions/2194808/debug-certificate-expired-error-in-eclipse-android-plugins</a></p>
<p>I deleted the certificate (a hidden file at ~/.android/debug.keystore) and ran the command again. This time it rebuild the certificate and I got no errors. Go to your TestApp2/platforms/android/bin folder to see the apk generated. Mine was called TestApp2-debug.apk</p>
<p>I dragged the file to my Dropbox folder, waited until the blue loading symbol turned into a checkmark, accessed it through my device&#8217;s Dropbox app, selected it, and installed the app. I notice it had &#8220;Full network access&#8221; permission and none else, which was fine. The app played back flawlessly, with &#8220;Device is Ready&#8221; pulsating and the page displaying the Cordova icon.</p>
<p><strong>4. Plugins are not added automatically,</strong> according to the docs: &#8220;For the app to communicate closely with various device-level features, you need to add plugins that provide access to core PhoneGap APIs.&#8221; Each plugin is in its own repository and must be downloaded separated via CLI. When we look up the InAppBrowser page in the API Reference online for 3.0 (<a title="http://docs.phonegap.com/en/3.0.0/cordova_inappbrowser_inappbrowser.md.html#InAppBrowser" href="http://docs.phonegap.com/en/3.0.0/cordova_inappbrowser_inappbrowser.md.html#InAppBrowser" target="_blank">http://docs.phonegap.com/en/3.0.0/cordova_inappbrowser_inappbrowser.md.html#InAppBrowser</a>), we find the URL. There, we also learn how to change the config.xml page differently for each platform.</p>
<p>Special note: you add the config.xml information for each platform to the SAME file; no multiple config.xml files needed.</p>
<p>To add the InAppBrowser using CLI, for example, start the command line from within your app&#8217;s folder and type:</p>
<pre>cordova plugin add https://git-wip-us.apache.org/repos/asf/cordova-plugin-inappbrowser.git</pre>
<p>Wait a while for the command line to update. When the command line returns, take a look in your TestApp2/platforms/ios/www/plugins folder to see the inappbrowser file. It should appear in the Android plugins folder as well.</p>
<p>Then we view the online API reference to find out how to modify the TestApp2/www/config.xml page with a text editor, in this case, for iOS, right above the &lt;/widget&gt; line:</p>
<pre>&lt;feature name="InAppBrowser"&gt;
    &lt;param name="ios-package" value="CDVInAppBrowser" /&gt;
&lt;/feature&gt;</pre>
<p>Save and close the document, then do a build for iOS:</p>
<pre>cordova build ios</pre>
<p>When the command line returns, take a look in your TestApp2/platforms/ios/www/config.xml to see the change we made.</p>
<p>Now we go back to the config.xml file opened previously and add:</p>
<pre>&lt;feature name="InAppBrowser"&gt;
    &lt;param name="android-package" value="org.apache.cordova.InAppBrowser" /&gt;
&lt;/feature&gt;</pre>
<p>Save and close the document, then do a build for Android to test. At one point during testing in my device, I got the &#8220;[ERROR] Error initializing Cordova: Class not found&#8221; alert message. That&#8217;s because I was referring to cordova-2.9.0.js instead of cordova.js on that page. With the change corrected, the error was gone. Since this app was build on top of an earlier app, I did a search for that old js file for all pages.</p>
<p><strong>5. View the app in the browser with:</strong></p>
<pre>cordova serve android</pre>
<p>I get this returned in the Terminal:</p>
<pre>Static file server running at:  =&gt; http://localhost:8000/
CTRL + C  to shutdown</pre>
<p>I opened a browser and copied/pasted the above URL in and the app startup screen appeared. The message displayed was, &#8220;Connecting to Device.&#8221; I also received a popup with a text field containing text I wasn&#8217;t sure what to do with. Clicking on OK turned it off.</p>
<p>This is a &#8220;static&#8221; file, meaning if you opened the html page, made a change, and saved it, refreshing the browser will not show the changes. Not sure what the advantage is over opening the file by double-clicking it. However, Google Tools works both ways.</p>
<p>I clicked on the Terminal and then CTRL + C returned me to the prompt.</p>
<p><strong>6. Don&#8217;t forget to read the help section:</strong></p>
<pre>cordova help</pre>
<h1>Updating Icons through CLI</h1>
<p>How do we supply the icons for each platform? TestApp2/www/res has folders for icons and screens; within each of these folders are supported platform names, including android and ios. Those folders are NOT duplicated or copied into the platforms/ folders when you do a build. Don&#8217;t update those. I&#8217;m not sure of their purpose. They are probably used for PhoneGap Build, and if they are, you&#8217;ll want your files in those locations if you are using Build.</p>
<p>Replace the Android icons within TestApp2/platforms/android/res/drawable. Do a build for Android and test.</p>
<p>Part of the build result was:</p>
<pre>clean:
 [delete] Deleting directory /Users/Steve/Documents/AndroidApps/TestApp2/platforms/android/bin
 [delete] Deleting directory /Users/Steve/Documents/AndroidApps/TestApp2/platforms/android/gen</pre>
<p>This tells me that the /bin and /gen directories are overwritten at build time.</p>
<p><em>Update: for 3.4.0, the directories are different:platforms/android/ant-build and platforms/android/ant-gen. The apk file is found in platforms/android/ant-build.</em></p>
<h3>WHOA! It just hit me &#8211; I just fully compiled an Android apk without ever using Eclipse!</h3>
<h1>Updating Android Splashscreens through CLI</h1>
<p><strong>1. Starting from within the app&#8217;s folder, type in Terminal this information, which we get from the Splashscreen API page on phonegap.com:</strong></p>
<pre>cordova plugin add https://git-wip-us.apache.org/repos/asf/cordova-plugin-splashscreen.git</pre>
<p><strong>2. Update for iOS in config.xml:</strong></p>
<pre>&lt;feature name="SplashScreen"&gt;
    &lt;param name="ios-package" value="CDVSplashScreen" /&gt;
&lt;/feature&gt;</pre>
<p>Update for Android in config.xml:</p>
<pre>&lt;feature name="SplashScreen"&gt;
    &lt;param name="android-package" value="org.apache.cordova.SplashScreen" /&gt;
&lt;/feature&gt;</pre>
<p><strong>3. The Splashscreen API doc says,</strong> &#8220;Copy the splash screen image into the Android project&#8217;s res/drawable directory.&#8221; This is not strictly true if you have multiple images. I copied/pasted each of the of the project&#8217;s screen folder portrait splash screen images into its appropriate platforms/android/res/drawable folder. Then I renamed each of the portrait versions as &#8220;splash.png.&#8221;</p>
<p>For iOS, the doc says, &#8220;Copy your splash screen images into the iOS project&#8217;s Resources/splash directory. Only add the images for the devices you want to support, such as iPad or iPhone.&#8221; I would drag the splash screens right into the Xcode program.</p>
<p><strong>4. Go to</strong> platforms/android/src/com/name/TestApp2/TestApp2.java and open it in a text editor (I use TextWrangler). &#8220;In the onCreate method of the class that extends DroidGap, add the following two lines:&#8221;<br />
super.setIntegerProperty(&#8220;splashscreen&#8221;, R.drawable.splash);<br />
super.loadUrl(Config.getStartUrl(), 10000);</p>
<p>Change this:</p>
<pre>super.onCreate(savedInstanceState);
 // Set by &lt;content src="index.html" /&gt; in config.xml
 super.loadUrl(Config.getStartUrl());
 //super.loadUrl("file:///android_asset/www/index.html")</pre>
<p>to this:</p>
<pre>super.onCreate(savedInstanceState);
super.setIntegerProperty("splashscreen", R.drawable.splash);
super.loadUrl(Config.getStartUrl(), 2000);
 // Set by &lt;content src="index.html" /&gt; in config.xml
 // super.loadUrl(Config.getStartUrl());
 // super.loadUrl("file:///android_asset/www/index.html")</pre>
<p>The &#8220;2000&#8221; means show the splash screen for two seconds. The &#8220;R.drawable.splash&#8221; means it expects to find a file called &#8220;splash.png&#8221; in the drawable folders. We did that when we renamed all the splash screens in each drawable folder in step 2.</p>
<p>Highly recommended that you use a 9patch image for your splash screen. For full instructions on this, see:  <a title="https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/" href="https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/" target="_blank">https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/</a></p>
<p><strong>5. Open the project&#8217;s index.html</strong> and add the following right after the cordova.js line:</p>
<pre>&lt;script type="text/javascript" charset="utf-8"&gt;
// Wait for device API libraries to load
 //
 document.addEventListener("deviceready", onDeviceReady, false);
// device APIs are available
 //
 function onDeviceReady() {
 navigator.splashscreen.show();
 }
&lt;/script&gt;</pre>
<p>A little more work needs to be done for the iOS splash screen. Modify the above code&#8217;s last lines so it looks like:</p>
<pre>function onDeviceReady() {
 navigator.splashscreen.show();
 setTimeout;
 }

 setTimeout(function() {
 navigator.splashscreen.hide();
 }, 2000);
&lt;/script&gt;</pre>
<h1>More About Icons and Splash Screens</h1>
<p>When I built my Android app as is, the size of the default Cordova app was 8.6MB. Pretty heavy for displaying only one HTML page! It was loading all the icons and splash screens for all the platforms into the same app &#8212; after all, they are all in the TestApp2/www folder. When I removed all the TestApp2/www/res/icon/ and screen/ folders other than android/ and did a build, the app came to 2.9MB. That&#8217;s more like it.</p>
<p>Since I was building for more than one platform, I created two folders on my desktop, naming one &#8220;temp www icon folders&#8221; and the other &#8220;temp www screen folders&#8221; and dragged the bada, etc. folders unrelated to the platform I&#8217;m building at the time from the www directory to those temp folders. It&#8217;s a simple matter to drag them back when building for the other platforms.</p>
<p>It seems, though, that Cordova should be coded to recognize that with &#8220;cordova build ios&#8221; it should copy only ios folders. I hope this will be done with a later version.</p>
<h1>Updating PhoneGap</h1>
<p>First check what version you are running:</p>
<pre>cordova -v</pre>
<p>My output was:</p>
<pre>3.0.6</pre>
<p>Update to the latest version of via CLI like:</p>
<pre>sudo npm update -g cordova</pre>
<p>[or replace cordova with phonegap, whichever one you started out with]</p>
<p>I get this output:</p>
<pre>npm http GET https://registry.npmjs.org/cordova
npm http 304 https://registry.npmjs.org/cordova</pre>
<p>I still got the 3.0.6 returned, so there was no update available. A few days later, I used the above to updat to 3.0.7, but it was a build with problems that prevented any CLI commands from working. Is it possible to revert to an earlier version? Yes.</p>
<p>We can learn what versions we can update to (or revert to) with:</p>
<pre>npm info cordova</pre>
<p>I reverted to 3.0.6 with this command, and my commands started working again:</p>
<pre>sudo npm install -g cordova@3.0.6</pre>
<p>To upgrade from versions prior to 3.0, follow the Platform Guides: <a title="http://docs.phonegap.com/en/3.0.0/guide_platforms_index.md.html#Platform%20Guides" href="http://docs.phonegap.com/en/3.0.0/guide_platforms_index.md.html#Platform%20Guides" target="_blank">http://docs.phonegap.com/en/3.0.0/guide_platforms_index.md.html#Platform%20Guides</a></p>
<h1>Updating config.xml</h1>
<p>For Android: Make sure you open TestApp2/platforms/android/res/xml/config.xml to change the Android app version when updating the app. You&#8217;ll want to change the name, description, and author information there to match your app. Right now, for instance, it says:</p>
<pre>&lt;name&gt;Hello Cordova&lt;/name&gt;
&lt;description&gt;
 A sample Apache Cordova application that responds to the deviceready event.
&lt;/description&gt;
&lt;author email="dev@cordova.apache.org" href="http://cordova.io"&gt;
 Apache Cordova Team
&lt;/author&gt;</pre>
<p><em>The above &lt;name&gt;&lt;/name&gt; space is where you&#8217;ll put the text that goes under the launch icon on the device&#8217;s home screen. </em></p>
<p>This default entry permits full access to any URL (all URLs are &#8220;whitelisted&#8221;):</p>
<pre>&lt;access origin="*" /&gt;</pre>
<p>For more about whitelisting, see <a title="http://docs.phonegap.com/en/edge/guide_whitelist_index.md.html#Domain%20Whitelist%20Guide" href="http://docs.phonegap.com/en/edge/guide_whitelist_index.md.html#Domain%20Whitelist%20Guide" target="_blank">http://docs.phonegap.com/en/edge/guide_whitelist_index.md.html#Domain%20Whitelist%20Guide</a></p>
<p>If you are using PhoneGap Build, you&#8217;ll need to customize this file more (when PG Build supports 3.0+).</p>
<p>Default preference name/values in Android config.xml are:</p>
<pre>&lt;preference name="useBrowserHistory" value="true" /&gt;
&lt;preference name="exit-on-suspend" value="false" /&gt;
&lt;preference name="fullscreen" value="true" /&gt;
&lt;preference name="webviewbounce" value="true" /&gt;</pre>
<p><strong>Please read</strong> the following documents for further steps to customize for your platform:</p>
<p>iOS configuration: <a title="http://docs.phonegap.com/en/3.0.0/guide_platforms_ios_config.md.html#iOS%20Configuration" href="http://docs.phonegap.com/en/3.0.0/guide_platforms_ios_config.md.html#iOS%20Configuration" target="_blank">http://docs.phonegap.com/en/3.0.0/guide_platforms_ios_config.md.html#iOS%20Configuration </a></p>
<p>Android configuration: <a title="http://docs.phonegap.com/en/3.0.0/guide_platforms_android_config.md.html#Android%20Configuration" href="http://docs.phonegap.com/en/3.0.0/guide_platforms_android_config.md.html#Android%20Configuration" target="_blank">http://docs.phonegap.com/en/3.0.0/guide_platforms_android_config.md.html#Android%20Configuration </a></p>
<p>More suggested changes are noted here: <a title="http://docs.phonegap.com/en/edge/guide_project-settings_index.md.html#Project%20Settings" href="http://docs.phonegap.com/en/edge/guide_project-settings_index.md.html#Project%20Settings" target="_blank">http://docs.phonegap.com/en/edge/guide_project-settings_index.md.html#Project%20Settings</a></p>
<h1>Updating AndroidManifest.xml</h1>
<p>You&#8217;ll want to update TestApp2/platforms/android/AndroidManifest.xml with your permissions. Almost all of these are missing; enter what&#8217;s required for your app:</p>
<pre>&lt;uses-permission android:name="android.permission.CAMERA"/&gt;
 &lt;uses-permission android:name="android.permission.VIBRATE"/&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/&gt;
 &lt;uses-permission 
 android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS"/&gt;
 &lt;uses-permission android:name="android.permission.INTERNET"/&gt;
 &lt;uses-permission android:name="android.permission.RECEIVE_SMS"/&gt;
 &lt;uses-permission android:name="android.permission.RECORD_AUDIO"/&gt;
 &lt;uses-permission android:name="android.permission.RECORD_VIDEO"/&gt;
 &lt;uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/&gt;
 &lt;uses-permission android:name="android.permission.READ_CONTACTS"/&gt;
 &lt;uses-permission android:name="android.permission.WRITE_CONTACTS"/&gt;
 &lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/&gt;
 &lt;uses-permission android:name="android.permission.GET_ACCOUNTS"/&gt;
 &lt;uses-permission android:name="android.permission.BROADCAST_STICKY"/&gt;</pre>
<p>Update the version code as well if it&#8217;s more than version 1. VersionCode is what will display in the store; versionName is for your internal use and won&#8217;t be shown:</p>
<pre>android:versionCode="1" android:versionName="1.0.0"</pre>
<h1>Customizing a Platform</h1>
<p>What if I wanted a css file in Android, but not in iOS? Cordova provides a merges/ folder so we can customize our apps. The merges/ folder has folders for each platform. You&#8217;ll need to manually recreate the folder structure in those folders. Here is a sample:</p>
<p>1. Double-click on android/ to open it in its own window.</p>
<p>2. Click on the gear symbol in the window&#8217;s menu bar, then on New Folder.</p>
<p>3. Call the folder new-css/</p>
<p>5. Copy the TestApp2/www/css/index.css file into that folder.</p>
<p>6. Delete everything in the copied file so it contains only the following, and save.</p>
<pre>/* Android */
.customized {
font-family:serif;
font-size:12px;
 padding: 10px; margin: 10px;
 color: green;
text-transform:none;
}</pre>
<p>7. Copy/paste the merges/android/new-css/ folder to the merges/ios/ folder, open the index.css file, and modify it so it contains only:</p>
<pre>/* iOS */
.customized {
font-family:serif;
font-size: 36px;
 padding: 10px; margin: 10px;
color: red;
text-transform:none;
}</pre>
<p>8. Open index.html and add this line under the css/index.css line and save. It will  point to the new file you just made:</p>
<pre>&lt;link rel="stylesheet" type="text/css" href="new-css/index.css" /&gt;</pre>
<p>9. In the same index.html file, modify the following lines  and save:</p>
<pre>    &lt;body onload="onLoad()"&gt;
            &lt;p class="customized"&gt;Android: Small green text. iOS: Huge red text.&lt;/p&gt;
        &lt;div&gt;
            &lt;h1&gt;Apache Cordova&lt;/h1&gt;</pre>
<p>10. In Terminal, starting from your TestApp2 folder, build the Android project (cordova build android), then view in browser (cordova serve android). The text will be smaller (12pt) than the APACHE CORDOVA line (24pt), and green.</p>
<p>11. Click in Terminal to select it and tap CTRL + C to shut down the server. Run cordova build ios. Now open platforms/ios/ and double-click on TestApp2.xcodeproj to open it in Xcode. Click on the round Run button in Xcode at upper left to view it in the Simulator. The text will be large and red. In Xcode, click on Stop to stop the Simulator. Click on the Simulator to select it, then click on iOS Simulator &gt; Quit.</p>
<p>You&#8217;ve customized the text in two different platforms. This is a stilly example, though. I can think of using it in a page of links in which I&#8217;d want a button in the iOS version to link to the Apple App Store for my iOS apps, and in the Android platform a link to my Google Play store. Linking to a different js page in each folder (same file name, remember?) will do this nicely.</p>
<p>Think of it as an extra tool that Cordova has provided for us to make small tweaks to our apps for different platforms.</p>
<h1>Prepare Promotional Artwork</h1>
<p>You’ll want to include screen captures for upload to Google Play. Choose screens carefully to present your app in its best light. What if your device doesn’t do screen captures? My Google Nexus 7 did not have this native functionality, nor did I find apps that performed this function. All is not lost, though; here is what I did.</p>
<p>1. Just double-click the index.html file in the Finder (workspace folder) to open it in a the Google Chrome browser, then narrow the browser window (if you want a Portrait view) to approximate the device screen proportion.<br />
2. Use your favorite screen grab utility to get the picture.<br />
3. Use GIMP or other photo-retouching program to crop it appropriately.</p>
<h1>Prepare Copy and Graphic Assets for App Store</h1>
<p>You’ll need this information on hand when filling out the form for apk submission in Google Play. Follow this template:</p>
<p><a title="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" href="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" target="_blank">https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/</a></p>
<h1>Build your App in Eclipse</h1>
<p>You have two options to create your app in Eclipse: project from existing code or as a new project. The first way lets your AndroidManifest and config.sys files set up everything for you. The second way means entering a lot of the information into Eclipse that you&#8217;ve already entered in those two files. The first way is the short way; the second way is the long way. I will present both options to you. If you have problems with the first option, then in Eclipse, Refactor &gt; Rename the project, and try the second option.</p>
<h3><span style="color:#ff0000;">Option 1: From Existing Code</span></h3>
<p>First check for updates to Eclipse and install: Help &gt; Check for Updates.</p>
<p>1. File &gt; New &gt; Project&#8230;<br />
2. Android &gt; Android Project from Existing Code<br />
3. Click on Browse and select the Root Directory of the project, AppProject. The Root Directory field should then be filled in, and Project to Import will show &#8220;platforms/android&#8221; selected. Now select Copy projects into workspace if you wish. Click Finish.</p>
<p><span style="color:#ff0000;"><strong>END OF OPTION 1.</strong></span> Continue to &#8220;Check Your Work.&#8221;</p>
<h3><span style="color:#ff0000;">Option 2: As New Project</span></h3>
<p>First check for updates to Eclipse and install: Help &gt; Check for Updates.</p>
<p>1. Launch Android&#8217;s ADT + Eclipse and select menu item File &gt; New &gt; Project.<br />
2. Under Wizards, select Android &gt; Android Application Project, then Next.<br />
3. In the New Android Application screen, fill out:<br />
Application Name (as it will appear under the icon on the home screen).<br />
Project Name (usually same as app name, but no spaces allowed).<br />
Package Name (in this format: com.your_domain_name.app_name).<br />
Minimum SDK (I put API 8)<br />
Target SDK (put the highest number your test device will use)<br />
Compile with (I put 18)<br />
Theme: (none)<br />
4. Check: Create custom launcher icon, Create Activity, Create project in workspace and indicate your workspace location. Next.<br />
5. Configure Launch Icon. click on Browse and select your project&#8217;s drawable-xhdpi/ icon.png in platforms/android/bin/res. You should see the default icon updated with your own. Next.<br />
6. Create Activity; leave defaults. Next.<br />
7. Blank Activity; leave defaults. Finish.</p>
<h2>Copy your PhoneGap files to Eclipse</h2>
<p>1. Select your project&#8217;s www/ folder in the Finder window and copy.<br />
2. In Eclipse, right-click on the assets/ folder and paste.<br />
3. In Eclipse, open assets/www/ and delete the res/ folder.<br />
4. In Eclipse, right-click on your project&#8217;s name and select New &gt; Folder.<br />
5. In the Folder window enter libs in the Folder name box, and click Finish (check to see if /libs is already present).<br />
6. We need to copy over the Cordova jar (<strong>J</strong>ava <strong>AR</strong>chive) file. In Eclipse, right-click on the /libs folder and go to Build Path &gt; Configure Build Path. Then, click on the Libraries button or tab, click on Add External JARs, and navigate again to the cordova-3.0.0.jar file in TestApp2/platforms/android/libs to add it to the project. You should see it appear at the top of the list. Click OK to finish.<br />
7. Now we need to copy over all the icon and splash screens. In Eclipse, delete all the /drawable folders (but NOT the /res folder) and replace them with the ones from TestApp2/platforms/android/res/ BUT retain the /drawable-xxhdpi folder. Copy the /drawable-xhdpi content into that folder.</p>
<h2>Update AndroidManifest.xml</h2>
<p>1. Our icons were named &#8220;icon.png&#8221; so we need to make sure Android recognizes them. In Eclipse, Right-click on AndroidManifest.xml choose Open with &gt; Text editor, and change:</p>
<pre>android:icon="@drawable/ic_launcher"</pre>
<p>to:</p>
<pre>android:icon="@drawable/icon"</pre>
<p>2. Right above &lt;application, put the following:</p>
<pre>&lt;supports-screens
 android:largeScreens="true"
 android:normalScreens="true"
 android:smallScreens="true"
 android:resizeable="true"
 android:anyDensity="true" /&gt;
 &lt;uses-permission android:name="android.permission.VIBRATE" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" /&gt;
 &lt;uses-permission android:name="android.permission.READ_PHONE_STATE" /&gt;
 &lt;uses-permission android:name="android.permission.INTERNET" /&gt;
 &lt;uses-permission android:name="android.permission.RECEIVE_SMS" /&gt;
 &lt;uses-permission android:name="android.permission.RECORD_AUDIO" /&gt;
 &lt;uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" /&gt;
 &lt;uses-permission android:name="android.permission.READ_CONTACTS" /&gt;
 &lt;uses-permission android:name="android.permission.WRITE_CONTACTS" /&gt;
 &lt;uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /&gt;
 &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
 &lt;uses-permission android:name="android.permission.GET_ACCOUNTS" /&gt;
 &lt;uses-permission android:name="android.permission.BROADCAST_STICKY" /&gt;</pre>
<p><strong>3. Remove all the above permissions your app doesn’t need.</strong> Or comment them out NOW with /* at left and */ at right of each line. To learn more about permissions, see<br />
<a title="http://developer.android.com/guide/topics/manifest/uses-feature-element.html" href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html" target="_blank">http://developer.android.com/guide/topics/manifest/uses-feature-element.html</a><br />
<a title="http://developer.android.com/guide/topics/manifest/uses-permission-element.html" href="http://developer.android.com/guide/topics/manifest/uses-permission-element.html" target="_blank">http://developer.android.com/guide/topics/manifest/uses-permission-element.html</a><br />
<a title="http://developer.android.com/reference/android/Manifest.permission.html" href="http://developer.android.com/reference/android/Manifest.permission.html" target="_blank">http://developer.android.com/reference/android/Manifest.permission.html</a></p>
<p>4. Make sure the following two lines show the correct version numbers, the second being the actual version shown to users:</p>
<pre>android:versionCode="1"
android:versionName="1.0" &gt;</pre>
<p>5. Support orientation changes by pasting the following right after the &lt;intent-filter&gt; line:</p>
<pre>android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale"</pre>
<h2>Update Activity.java</h2>
<p>1. [Steps 1-2 may be optional; may be able to leave as is.] In Eclipse, open src/ and navigate to the projectnameActivity.java file (or MainActivity.java). Right-click, Open With &gt; Text Editor. We need to add in the information we used to update the same file earlier, located at platforms/android/src/com/name/projectname/projectname.java. Right now this section in Eclipse reads:</p>
<pre>@Override
 public void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.main);
 }
}</pre>
<p>I copied pasted from the earlier file to change it to:</p>
<pre>@Override
 public void onCreate(Bundle savedInstanceState)
 {
super.onCreate(savedInstanceState);
// super.setIntegerProperty("splashscreen", R.drawable.splash);
super.loadUrl(Config.getStartUrl(), 2000);
 // Set by &lt;content src="index.html" /&gt; in config.xml
 // super.loadUrl(Config.getStartUrl());
 // super.loadUrl("file:///android_asset/www/index.html")
 }
}</pre>
<p>2. In the same file, change:</p>
<pre>import android.app.Activity;
import android.os.Bundle;</pre>
<p>to:</p>
<pre>import android.app.Activity;
import android.os.Bundle;
import org.apache.cordova.*;</pre>
<p>3. In the same file, change:</p>
<pre>extends Activity {</pre>
<p>to:</p>
<pre>extends DroidGap {</pre>
<p>4. Save the file.</p>
<p><span style="color:#ff0000;"><strong>END OF OPTION 2.</strong></span></p>
<h1>Check Your Work</h1>
<p>1. Let Eclipse check your work for errors. First click on <strong>Project &gt; Clean.</strong> The lower right of the window will show the progress. Use Project &gt; Clean between each of the following steps.</p>
<p>2. Now right-click on your project name and select <strong>Validate.</strong> If it mentioned errors or warnings in a popup, then you can find those messages in Window &gt; Show View &gt; Problems. You can actually double-click on the lines and Eclipse will open to the page and line of the problem. Fix all those problems, Clean, and Validate again.</p>
<p>3. Right-click on your project name and select <strong>Android Tools &gt; Run Lint</strong> and fix those errors. If you find errors under Eclipse&#8217;s Lint Warnings tab, use this article to help deal with some of them: <a href="https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/" rel="nofollow">https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/</a></p>
<p>4. Right-click on your project name again, and select <strong>Run As &gt; Android Application.</strong> If you have a working emulator installed, then it will launch and you’ll see the home screen. Slide the lock over and the app will launch, if all is well (or you&#8217;ll need to tap on the app icon to start it).</p>
<p>Also, you’ll see the LogCat and Error Log screens at the bottom of the Eclipse environment as it records what is happening in the emulator. If you don&#8217;t understand the errors, you can double-click on the line, copy, and paste it into Google for a search.</p>
<p>If you get this in the emulator before the app has even opened: &#8220;The application . . . has stopped unexpectedly. Please try again,&#8221; problems may exist in AndroidManifest.xml, because that has to be processed before the index.html file starts. One of the three parts of the &#8220;package=&#8221; line may be wrong. the name may have upper/lowercase inconsistencies. You may not have the right AVD.</p>
<p>If you get a &#8220;Failed to load properties file for android project&#8221; message in Eclipse when testing, right-click on the project name in Eclipse, select Android Tools &gt; Fix project properties, do a Clean, and see if that helps.</p>
<p>If you get in the Console tab: &#8220;Could not find appName.apk!&#8221; then this may help: Right-click on the project name in Eclipse, then on Properties. Select the latest Project Build Target, then click on OK. Restart Eclipse.</p>
<p>If you get lost among the log messages and want to get back to the key windows, go to Window &gt; Open Perspective &gt; Java.</p>
<p>5. You can choose among Android devices to target for testing. In menu bar at top use <strong>Run &gt; Debug Configurations &gt; Target</strong> tab to choose which Android API to test in the emulator. Click on the AVD Name then Debug. Create new AVDs with Window &gt; Android Virtual Device Manager. Resource: <a title="http://developer.android.com/tools/devices/managing-avds.html" href="http://developer.android.com/tools/devices/managing-avds.html" target="_blank">http://developer.android.com/tools/devices/managing-avds.html</a></p>
<h1>Sign the App</h1>
<p>Apps in the app store must be “signed” with keys. Here are the steps to accomplish this. These steps create the “apk” file that is uploaded to the app store for purchasers’ download.</p>
<p>1. Right-click on the project name in Eclipse, then click on Android Tools &gt; Export Signed Application Package.<br />
2. “Project Checks” dialog:<br />
This screen will tell you if you have serious errors that need to be fixed before you can go further. If you have problems, copy the error into Google and search for resolutions if you are unfamiliar with these problems.<br />
3. “Keystore selection” selection dialog:<br />
Create the key using the app name, no spaces, ending in “.keystore”. WARNING: if this is an upgrade, use the same name as the earlier version! Browse to the location to save the keystore and in the same box give the name of the keystore. Back in the Keystore selection dialog, add the password twice and hit Next.<br />
4. Key [&#8220;Private Key&#8221;] Creation dialog:<br />
Alias: same as app_name, no spaces.<br />
password of keystore.<br />
validity: 50 [meaning, good for 50 years].<br />
First and Last name:<br />
Organizational unit: [division of company, or leave blank]<br />
Organization: [use no punctuation &#8211; only letters and numbers, or you&#8217;ll get an &#8220;keytool error&#8221; notice later.]<br />
City:<br />
State: [2-letter abbr. is fine.]<br />
Country: 01. [which is U.S.]<br />
Destination APK file: This is the hard disk location where Eclipse will save the program’s .apk file that you will later upload to Google Play or other app store. Browse, then click Finish when done.</p>
<p>Write down the above Key Creation information, passwords, and APK destination and keep it safe for later retrieval and app updates. If it is lost, you can’t upgrade the app any further. To release the app after this file has been lost, you’ll have to create a whole new app and release it separately, making your customers ineligible for any updates.</p>
<p>Perhaps make a separate private key for each app, especially if you expect to sell the rights to an app to someone else. Save the keystore and apk files to a separate location for safety.</p>
<p>If you get: “keytool error: java.io.IOException: Incorrect AVA format,” then an invalid character was used in one of the previous screens. Solution: remove any punctuation so only letters, spaces, and numbers remain.</p>
<h1>Test the apk File in Device</h1>
<p>1. Check with your device as to how to install the apk file. In my defunct eLocity tablet, it was s a simple matter of copying the file to the SD card, navigating to it from Settings, and selecting and choosing to install it. My Google/Asus Nexus 7 does not include an SD card. So I downloaded DropBox.com software to the computer and the DropBox app to the Nexus. Once I signed up for a Dropbox account, I copied the apk file to the computer’s DropBox, then it was accessible on the Nexus. Then I tapped on the file and it asked if I wanted to install. Simple.<br />
2. Once installed, you’d click on Open, and you should see it on the home screen. If not, tap the middle button at the bottom of the screen to see all the installed apps and look for your icon. Check your app title underneath to make sure it is not truncated.<br />
3. Tap the icon and check out your work.<br />
4. Make changes to the files as necessary and redo.</p>
<h1>Ready For Public Release</h1>
<p>Congratulations! You are now ready to show off your baby to the world!</p>
<p>To register as a Google Play developer and set up your publisher account, visit the Google Play publisher site: <a title="https://play.google.com/apps/publish/Home" href="https://play.google.com/apps/publish/Home" target="_blank">https://play.google.com/apps/publish/Home</a></p>
<p>My Helpful Links page gives a small listing of other sites where you can upload your apps. Visit <a title="https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/" href="https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/" target="_blank">https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/</a> and look under “App Stores.”</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cli/'>CLI</a>, <a href='https://iphonedevlog.wordpress.com/tag/command-line/'>command line</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/inappbrowser/'>inAppBrowser</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/plugin/'>plugin</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/938/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/938/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/938/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/938/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/938/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/938/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/938/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/938/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/938/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/938/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/938/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/938/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=938&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/08/16/using-phonegap-3-0-cli-on-mac-osx-10-to-build-ios-and-android-projects/feed/</wfw:commentRss>
		<slash:comments>26</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Cordova 2.9.0: &#8220;[ERROR] Error initializing Cordova: Class not found&#8221;</title>
		<link>https://iphonedevlog.wordpress.com/2013/07/05/cordova-2-9-0-error-error-initializing-cordova-class-not-found/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/07/05/cordova-2-9-0-error-error-initializing-cordova-class-not-found/#comments</comments>
		<pubDate>Fri, 05 Jul 2013 16:49:19 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA["getDeviceInfo"]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[cordova_plugins.json]]></category>
		<category><![CDATA[Error initializing Cordova: Class not found]]></category>
		<category><![CDATA[Falling back on PROMPT mode]]></category>
		<category><![CDATA[XMLHttpRequest cannot load file]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=900</guid>
		<description><![CDATA[When I preview a page of my Android app with cordova.js (2.9.0) in Google Chrome, the page appears with an alert message saying, The page at file://localhost/ says: [ ] gap:["Device","getDeviceInfo","Device1830682625"] Cancel, OK If I click on OK another alert appears, saying: The page at file://localhost/ says: [ ] gap:["Device","getDeviceInfo","Device889844386"] Cancel, OK When I click [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=900&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p><span style="font-size:13px;line-height:19px;">When I preview a page of my Android app with cordova.js (2.9.0) in Google Chrome, the page appears with an alert message saying,</span></p>
<blockquote>
<pre>The page at file://localhost/ says:
[ ]
gap:["Device","getDeviceInfo","Device1830682625"]
Cancel, OK</pre>
</blockquote>
<p>If I click on OK another alert appears, saying:</p>
<blockquote>
<pre>The page at file://localhost/ says:
[ ]
gap:[<span style="color:#ff0000;">"Device","getDeviceInfo","Device889844386"]</span>
Cancel, OK</pre>
</blockquote>
<p>When I click on OK, the alert stops with no issues. These alerts pop up only on pages where cordova.js (2.9.0) are called, such as when the page contains external links and invokes the InAppBrowser. No other pages are affected.</p>
<p>I get these alerts on the Mac and PC. I&#8217;ve never received these alerts before 2.9.0.<span id="more-900"></span></p>
<p><span style="font-size:13px;line-height:19px;">On my Android Nexus 7 device these alerts don&#8217;t show. Instead, I get this alert on pages containing cordova.js:</span></p>
<blockquote>
<pre>Alert
[ERROR] <span style="color:#0000ff;">Error initializing Cordova: Class not found</span>
OK</pre>
</blockquote>
<p>I filed a bug report with <a title="https://issues.apache.org/jira/browse/CB#selectedTab=com.atlassian.jira.plugin.system.project%3Asummary-panel" href="https://issues.apache.org/jira/browse/CB#selectedTab=com.atlassian.jira.plugin.system.project%3Asummary-panel" target="_blank">Jira.</a> Still, I wanted to figure this out so I could get my app on the store.</p>
<p>Since these are alert messages, they must be generated from cordova.js, I reasoned. So I opened the file and did a search for &#8220;alert.&#8221; For the alerts found on Chrome, I found this on line 5139:</p>
<blockquote>
<pre>Device.prototype.getInfo = function(successCallback, errorCallback) {
argscheck.checkArgs('fF', 'Device.getInfo', arguments);
exec(successCallback, errorCallback, <span style="color:#ff0000;">"Device", "getDeviceInfo", []);</span>
};</pre>
</blockquote>
<p>I commented out these four lines with /* and */ before and after the section and tried again in Chrome. The pages worked with no problems.</p>
<p>What about &#8220;Error initializing Cordova&#8221;? I found this function containing the device&#8217;s alert on line 5126:</p>
<blockquote>
<pre>function Device() {
this.available = false;
this.platform = null;
this.version = null;
this.uuid = null;
this.cordova = null;
this.model = null;

var me = this;

channel.onCordovaReady.subscribe(function() {
me.getInfo(function(info) {
var buildLabel = info.cordova;
if (buildLabel != CORDOVA_JS_BUILD_LABEL) {
buildLabel += ' JS=' + CORDOVA_JS_BUILD_LABEL;
}
me.available = true;
me.platform = info.platform;
me.version = info.version;
me.uuid = info.uuid;
me.cordova = buildLabel;
me.model = info.model;
channel.onCordovaInfoReady.fire();
},function(e) {
me.available = false;
<span style="color:#0000ff;">utils.alert("[ERROR] Error initializing Cordova: " + e);</span> // line 5126
});
});
}</pre>
</blockquote>
<p>I decided to comment out line the entire section that contains the function above:</p>
<blockquote>
<pre>function Device() {
this.available = false;
this.platform = null;
this.version = null;
this.uuid = null;
this.cordova = null;
this.model = null;

var me = this;

channel.onCordovaReady.subscribe(function() {
me.getInfo(function(info) {
var buildLabel = info.cordova;
if (buildLabel != CORDOVA_JS_BUILD_LABEL) {
buildLabel += ' JS=' + CORDOVA_JS_BUILD_LABEL;
}
me.available = true;
me.platform = info.platform;
me.version = info.version;
me.uuid = info.uuid;
me.cordova = buildLabel;
me.model = info.model;
channel.onCordovaInfoReady.fire();
},function(e) {
me.available = false;
utils.alert("[ERROR] Error initializing Cordova: " + e);
});
});
}

/**
* Get device info
*
* @param {Function} successCallback The function to call when the heading data is available
* @param {Function} errorCallback The function to call when there is an error getting the heading data. (OPTIONAL)
*/

Device.prototype.getInfo = function(successCallback, errorCallback) {
argscheck.checkArgs('fF', 'Device.getInfo', arguments);
exec(successCallback, errorCallback, "Device", "getDeviceInfo", []);
};

module.exports = new Device();

});</pre>
</blockquote>
<p>Chrome tools just shows:</p>
<blockquote>
<pre>Uncaught SyntaxError: Unexpected token /</pre>
</blockquote>
<p>&#8230; the same line in which I had placed my final */</p>
<p>I created another signed app and loaded it in my device. The alert did not show. However, the InAppBrowser (IAB) failed to work; external links opened in a browser. Clearly, IAB depends on the code I commented out. This workaround is therefore unsatisfactory.</p>
<p>I removed the comments and just commented out this line that shows on the device:</p>
<blockquote>
<pre>//    utils.alert("[ERROR] Error initializing Cordova: " + e);</pre>
</blockquote>
<p>Pulling up the page in Chrome with Tools shows me this:</p>
<blockquote>
<pre>XMLHttpRequest cannot load file://localhost/Users/.../assets/www/cordova_plugins.json. Cross origin requests are only supported for HTTP.</pre>
</blockquote>
<p><a title="http://stackoverflow.com/questions/16095757/what-is-the-cordova-plugins-json-file-for-cordova-is-requesting-it-at-initializ" href="http://stackoverflow.com/questions/16095757/what-is-the-cordova-plugins-json-file-for-cordova-is-requesting-it-at-initializ" target="_blank">That&#8217;s a known error</a> and seems to be safe to ignore.</p>
<p>And this was in Tools console &#8230;</p>
<blockquote>
<pre>Failed to load resource</pre>
</blockquote>
<blockquote>
<pre> file://localhost/Users/dragonhu/Documents/workspace/doubtbusters/assets/www/cordova_plugins.js</pre>
</blockquote>
<p>That is supposed <a title="https://github.com/clelland/cordova-js/commit/c21a9f264af9e858e31b11aead43641e739749ff" href="https://github.com/clelland/cordova-js/commit/c21a9f264af9e858e31b11aead43641e739749ff" target="_blank">to be fixed</a> for the next release. And also in the console &#8230;</p>
<blockquote>
<pre>Falling back on PROMPT mode since _cordovaNative is missing. Expected for Android 3.2 and lower only. cordova.js:912</pre>
</blockquote>
<p>Line 912 in cordovo.js is the line in red, and is a console output:</p>
<blockquote>
<pre>androidExec.setJsToNativeBridgeMode = function(mode) { if (mode == jsToNativeModes.JS_OBJECT &amp;&amp; !window._cordovaNative) { <span style="color:#ff0000;">    console.log('Falling back on PROMPT mode since _cordovaNative is missing. Expected for Android 3.2 and lower only.');</span> mode = jsToNativeModes.PROMPT; } nativeApiProvider.setPreferPrompt(mode == jsToNativeModes.PROMPT); jsToNativeBridgeMode = mode; };</pre>
</blockquote>
<p>I commented out that line. I tested in my device and all is working, including IAB.</p>
<p>I am going to release my app with my fingers crossed! I uploaded it to Google Play, and for so many problems, I&#8217;m surprised it accepted the app on the very first upload!</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/getdeviceinfo/'>"getDeviceInfo"</a>, <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova_plugins-json/'>cordova_plugins.json</a>, <a href='https://iphonedevlog.wordpress.com/tag/error-initializing-cordova-class-not-found/'>Error initializing Cordova: Class not found</a>, <a href='https://iphonedevlog.wordpress.com/tag/falling-back-on-prompt-mode/'>Falling back on PROMPT mode</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/xmlhttprequest-cannot-load-file/'>XMLHttpRequest cannot load file</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/900/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/900/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/900/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/900/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/900/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/900/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/900/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=900&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/07/05/cordova-2-9-0-error-error-initializing-cordova-class-not-found/feed/</wfw:commentRss>
		<slash:comments>4</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Adding Picture Zooming to Your PhoneGap App with iScroll4</title>
		<link>https://iphonedevlog.wordpress.com/2013/07/03/adding-picture-zooming-to-your-phonegap-app-with-iscroll4/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/07/03/adding-picture-zooming-to-your-phonegap-app-with-iscroll4/#comments</comments>
		<pubDate>Wed, 03 Jul 2013 18:40:49 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[iscroll]]></category>
		<category><![CDATA[iscroll.js]]></category>
		<category><![CDATA[pinch/zoom]]></category>
		<category><![CDATA[user-scalable=yes]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=892</guid>
		<description><![CDATA[I thought that by simply adding &#8220;user-scalable=yes&#8221; to the meta tag it would enable my pictures  to be pinch/zoom scalable. But such was not the case. Something more was needed, and iScroll4 supplied the missing functionality. What&#8217;s extra nice is that doesn&#8217;t need Jquery. Here are the simple steps I took to enable my pictures [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=892&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I thought that by simply adding &#8220;user-scalable=yes&#8221; to the meta tag it would enable my pictures  to be pinch/zoom scalable. But such was not the case. Something more was needed, and iScroll4 supplied the missing functionality. What&#8217;s extra nice is that doesn&#8217;t need Jquery. Here are the simple steps I took to enable my pictures to have pinch/zoom. This was tested on a Nexus 7. <span id="more-892"></span></p>
<p>Instructions were taken from:<br />
<a title="http://cubiq.org/iscroll-4 " href="http://cubiq.org/iscroll-4" target="_blank">http://cubiq.org/iscroll-4 </a></p>
<p>1. On the page where you want scrolling, make sure the viewport line in the &lt;head&gt; section allows scaling by adding <em>user-scalable=yes:</em></p>
<pre>&lt;meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes"&gt;</pre>
<p>2. Download iscroll4 from <a title="http://cubiq.org/iscroll-4" href="http://cubiq.org/iscroll-4" target="_blank">http://cubiq.org/iscroll-4</a></p>
<p>3. Unzip, then open iscroll-4/src and copy iscroll.js to your project&#8217;s javascripts folder.</p>
<p>3. Copy and paste the contents to just after the last &lt;script&gt; in the &lt;head&gt; section:</p>
<pre>&lt;script type="application/javascript" src="../javascripts/iscroll.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript"&gt;
var myScroll;
function loaded() {
myScroll = new iScroll('wrapper',
{ zoom:true, zoomMax: 4 });
}

document.addEventListener('DOMContentLoaded', loaded, false);
&lt;/script&gt;</pre>
<p>3a. Change the following to the correct location of your iscroll.js file:</p>
<pre>&lt;script type="application/javascript" src="../javascripts/iscroll.js"&gt;&lt;/script&gt;</pre>
<p>3b. You can change the maximum zoom allowed in the zoomMax section. &#8220;zoomMax: 4&#8221; means it will zoom to 4x the size.</p>
<p>4. Just above the &lt;/body&gt; tag add the following line to execute, or call, the function:</p>
<pre>&lt;script&gt;loaded();&lt;/script&gt;</pre>
<p>5. Now make a div with<em> id=&#8221;wrapper&#8221;</em> (or apply the<em> id=&#8221;wrapper&#8221;</em> to an existing div) that encloses the picture you want scalable. Or change &#8220;wrapper&#8221; in the function to an id you are already using.</p>
<p>I did this so only the image scales:</p>
<pre>&lt;div id="wrapper" style="width:100%"&gt;
&lt;img src="../kit-images/blueprint.jpg" width="800" alt="" style="max-width:100%; height:auto;"&gt;
&lt;/div&gt;</pre>
<p>Now do a Project &gt; Clean in Eclipse, and test in a device.</p>
<p>The content in the &#8220;wrapper&#8221; div will be scrollable AND scalable as though inside a frame. If the user needs to scroll to information below the div, he&#8217;ll need to be able to touch somewhere around the div to scroll beyond.</p>
<p>You might find it advantageous to add <em>-webkit-transform:translate3d(0,0,0)</em> to see if the area scales more smoothly. Unfortunately, it uses more resources, so test. Add the following above the &lt;/head&gt; tag:</p>
<pre>&lt;style type="text/css"&gt;
div#wrapper img { -webkit-transform:translate3d(0,0,0) }
&lt;/style&gt;</pre>
<h2>Zooming More Than One Picture on a Page</h2>
<p>I wanted to zoom more than one picture on the page, so I changed my code like this for three pictures.</p>
<p>The &lt;head&gt; script became the following, duplicating the function as many times as there were pictures, and appending a digit after each function name (in two places)  and wrapper name (in one place) within the &lt;script&gt; tags:</p>
<pre>&lt;script type="text/javascript"&gt;
var myScroll;
function <span style="color:#ff0000;">loaded</span>() {
myScroll = new iScroll('<span style="color:#ff0000;">wrapper</span>',
{ zoom:true, zoomMax: 4 });
}
function <span style="color:#ff0000;">loaded2<span style="color:#000000;">()</span></span> {
myScroll = new iScroll('<span style="color:#ff0000;">wrapper2</span>',
{ zoom:true, zoomMax: 4 });
}
function <span style="color:#ff0000;">loaded3</span>() {
myScroll = new iScroll('<span style="color:#ff0000;">wrapper3</span>',
{ zoom:true, zoomMax: 4 });
}

document.addEventListener('DOMContentLoaded', <span style="color:#ff0000;">loaded</span>, false);
document.addEventListener('DOMContentLoaded', <span style="color:#ff0000;">loaded2</span>, false);
document.addEventListener('DOMContentLoaded', <span style="color:#ff0000;">loaded3</span>, false);
&lt;/script&gt;</pre>
<p>The script above the &lt;/body&gt; tag received two more lines:</p>
<pre>&lt;script&gt;<span style="color:#ff0000;">loaded</span>();&lt;/script&gt;
&lt;script&gt;<span style="color:#ff0000;">loaded2</span>();&lt;/script&gt;
&lt;script&gt;<span style="color:#ff0000;">loaded3</span>();&lt;/script&gt;</pre>
<p>And each picture had its own id:</p>
<pre>&lt;p style="color:blue; font-style:italic;"&gt;(Double-tap to enlarge pictures.)&lt;/p&gt;
&lt;div <span style="color:#ff0000;">id="wrapper"</span> style="width:100%"&gt;
&lt;img src="../kit-images/radio-installation-2.jpg" width="813" alt=""&gt;&lt;/div&gt;&lt;br&gt;
&lt;div <span style="color:#ff0000;">id="wrapper2"</span> style="width:100%"&gt;
&lt;img src="../kit-images/radio-installation-3.jpg" width="813" alt=""&gt;&lt;/div&gt;&lt;br&gt;
&lt;div <span style="color:#ff0000;">id="wrapper3"</span> style="width:100%"&gt;
&lt;img src="../kit-images/radio-installation-4.jpg" width="793" alt=""&gt;&lt;/div&gt;</pre><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/iscroll/'>iscroll</a>, <a href='https://iphonedevlog.wordpress.com/tag/iscroll-js/'>iscroll.js</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/pinchzoom/'>pinch/zoom</a>, <a href='https://iphonedevlog.wordpress.com/tag/user-scalableyes/'>user-scalable=yes</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/892/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/892/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/892/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/892/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/892/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/892/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/892/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/892/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/892/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/892/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/892/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/892/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=892&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/07/03/adding-picture-zooming-to-your-phonegap-app-with-iscroll4/feed/</wfw:commentRss>
		<slash:comments>5</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Installing a 9-Patch Splash Screen for Android using draw9patch and PhoneGap</title>
		<link>https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/#comments</comments>
		<pubDate>Tue, 02 Jul 2013 20:40:13 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[9-patch]]></category>
		<category><![CDATA[9patch]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[draw9patch]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[splash page]]></category>
		<category><![CDATA[Splashscreen API]]></category>
		<category><![CDATA[startup screen]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=888</guid>
		<description><![CDATA[Cordova includes a Splashscreen API so you can add a splash screen to your app, which consists of a still graphic image displaying before your app starts. If you create your Android splash screen as a 9-patch image, then the image will resize proportionally when displayed in either portrait or landscape mode. Helpful links: 3.4.0: https://github.com/apache/cordova-plugin-splashscreen/blob/master/doc/index.md [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=888&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>Cordova includes a Splashscreen API so you can add a splash screen to your app, which consists of a still graphic image displaying before your app starts.</p>
<p>If you create your Android splash screen as a 9-patch image, then the image will resize proportionally when displayed in either portrait or landscape mode.<span id="more-888"></span></p>
<p>Helpful links:<br />
3.4.0: <a title="https://github.com/apache/cordova-plugin-splashscreen/blob/master/doc/index.md" href="https://github.com/apache/cordova-plugin-splashscreen/blob/master/doc/index.md" target="_blank">https://github.com/apache/cordova-plugin-splashscreen/blob/master/doc/index.md</a><br />
<a title="http://developer.android.com/tools/help/draw9patch.html" href="http://developer.android.com/tools/help/draw9patch.html" target="_blank">http://developer.android.com/tools/help/draw9patch.html</a></p>
<p>1. Create png images of your splash screen in these sizes. All should have the filename of splash.png and be placed in the following folders in Eclipse:</p>
<p>xlarge (xhdpi): at least 720 x 960 (Cordova used 720 x 1280)<br />
large (hdpi): at least 480 x 640 (Cordova used 480 x 800)<br />
medium (mdpi): at least 320 x 470 (Cordova used 320 x 480)<br />
small (ldpi): at least 200 x 320 (Cordova used 200 x 320)</p>
<p><span style="font-size:13px;line-height:19px;">For best effect (in my opinion) use your 512 x 512px app store image and fit it in the center (or slightly above center) of each of the above sizes. Fill the space around it with a design-appropriate solid color. </span></p>
<p>I created a 720 x 1280 image in Photoshop, then cropped it to the other sizes proportionally, saving each to the correct size and reducing the center image appropriately. Copy the files into the res/drawable folders already existing in Eclipse, matching the image size to each folder as noted above in step 1. Again, all these images should be called splash.png</p>
<h2>Creating a 9-Patch Image</h2>
<p>2. Now go ahead and open each one and put a 5px solid border or stroke around each, and save over the old file &#8212; IF  you are converting existing splash screens to 9-patch. Otherwise, you would do this all in step 1 when first creating your splashes. When we are finished with this tutorial, that border color will fill the space to the left/right or top/bottom of the image, leaving the inner areas in the correct proportions. So choose a border color that fits in with the color scheme. Leave a window open on your desktop so we can drag the files to the 9-patch tool.</p>
<p>2. Double-click on the draw9patch.bat file found in your adt-bundle-windows/sdk/tools folder, or android-sdk-mac_x86/tools folder. (Mine was in my /Program Files folder on my PC. This opens up the Java program. If you have a slow system, it will take a while to open. (Android Studio has this tool as part of the environment. Put the png in your project and double-click to open it in the 9-Patch tool.) OR, you can simply type draw9patch in your Terminal app and it will open.</p>
<p>3. Drag your smallest png onto the application window. The application interface changes. In the right pane, scroll up and down to see what your image looks like in three different configurations. (If your image is huge, like 720 x 1280, you may not see them at right.)</p>
<p>4. Slide the scrollbars in the left pane so you see the upper right corner of the image. You should see a white/gray checkerboard line around the image. That is your one-pixel drawing area.</p>
<p>The top and left side lines you draw will define the design areas that are flexible, that will stretch/squash with the screen size. The right and bottom lines will define the static areas of the design that doesn&#8217;t change. In my case, the design is composed of a square icon in the middle with plain space around it. So a line you draw at top or bottom will define a vertical path of that width that extends down the entire screen. A line you draw at left or right will define a horizontal path of that width that extends across the entire screen.</p>
<blockquote><p>a. So my top will be composed of a 5px line going from upper left corner to 5px right, and a 5px line going from upper right corner to 5px left. (This 5px is based on the solid color I put around the image in step 2.)</p>
<p>b. My left side will be composed of a 5px line going from upper left corner to down, and a 5px line going from lower left corner to top. Following step a and b means that only the 5px border all around will stretch and squash.</p>
<p>c. My right side will be composed of a vertical line that is in line with the vertical height of the icon design, and lined up with it in the middle of the right side, opposite the design. (The vertical line&#8217;s top will line up with the top of the icon design.)</p>
<p>d. My bottom side will be composed of a line that is the horizontal width of the icon design, and lined up with it. Following steps c and d will define the area that is static, and the lines should not overlap the lines at top or left.</p></blockquote>
<p>Place the cursor in the extreme edges and draw the lines. (You won&#8217;t draw anything in the corner itself.) Draw too fast with an unsteady hand and you&#8217;ll create gaps in the line; we don&#8217;t want that. If you draw too far, you can hold down the Shift key and retrace to erase. Make sure you don&#8217;t leave any gaps.</p>
<p>5. Do this for all four sides.</p>
<p>6. Scroll up and down in the right pane to see your work in the three configurations. The center should stay the same while the area around it stretches and squashes.</p>
<p>7. Click on File &gt; Save 9-patch and save as splash.png. &#8220;.9&#8221; will be appended to your filename (to become splash.9.png). Click on File &gt; Open to work on the next splash.png. Click on File &gt; Quit to exit the program.</p>
<p>8. In Eclipse, delete all the splash.png files and retain the splash.9.png versions. Add each of the splash screens to your project&#8217;s platforms/android/res/drawable folders.</p>
<h2>Splashscreen API</h2>
<p>1. In console, grab the splashscreen API, starting from within your project&#8217;s folder:</p>
<pre>cordova plugin add org.apache.cordova.splashscreen</pre>
<p>2. In config.xml:</p>
<pre>&lt;preference name="splashscreen" value="splash" /&gt; &lt;!-- Assumes your splash images in /myApp/res/drawable/ are named "splash.png" --&gt;
&lt;feature name="SplashScreen"&gt;
 &lt;param name="android-package" value="org.apache.cordova.SplashScreen" /&gt;
&lt;/feature&gt;</pre>
<p>In index.html, set the hide() to stop the splashscreen when the program starts:</p>
<pre>&lt;script type="text/javascript" charset="utf-8" src="cordova.js"&gt;&lt;/script&gt;
 &lt;script type="text/javascript" charset="utf-8"&gt;

 // Wait for device API libraries to load
 //
 document.addEventListener("deviceready", onDeviceReady, false);

 // device APIs are available
 //
 function onDeviceReady() {
 // Now safe to use device APIs
 <span style="color:#ff0000;">navigator.splashscreen.hide();</span>
 }
&lt;/script&gt;</pre><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/9-patch/'>9-patch</a>, <a href='https://iphonedevlog.wordpress.com/tag/9patch/'>9patch</a>, <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/draw9patch/'>draw9patch</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/splash-page/'>splash page</a>, <a href='https://iphonedevlog.wordpress.com/tag/splashscreen-api/'>Splashscreen API</a>, <a href='https://iphonedevlog.wordpress.com/tag/startup-screen/'>startup screen</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/888/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/888/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/888/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/888/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/888/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/888/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/888/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/888/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/888/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/888/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/888/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/888/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=888&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/feed/</wfw:commentRss>
		<slash:comments>6</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Implementing inAppBrowser into a Cordova PhoneGap Project</title>
		<link>https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/#comments</comments>
		<pubDate>Thu, 27 Jun 2013 18:37:41 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[inAppBrowser]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=884</guid>
		<description><![CDATA[If you want to link to an external site and make it easy for the user to return to your PhoneGap app, try the well-named inAppBrowser (IAB for short). Here are the simple steps to implement it into an already-working PhoneGap project for iOS and Android. You&#8217;ll need to style your external links with JavaScript. [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=884&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>If you want to link to an external site and make it easy for the user to return to your PhoneGap app, try the well-named inAppBrowser (IAB for short). Here are the simple steps to implement it into an already-working PhoneGap project for iOS and Android.<span id="more-884"></span></p>
<p>You&#8217;ll need to style your external links with JavaScript. Instead of &#8230;</p>
<pre>&lt;a href="http://bit.ly/iphonedevlog"&gt;Click here&lt;/a&gt;</pre>
<p>use &#8230;</p>
<pre>&lt;a href="#" ontouchend="window.open('http://bit.ly/iphonedevlog','<span style="color:#ff0000;">_blank</span>','<span style="color:#ff0000;">location=yes</span>','<span style="color:#ff0000;">closebuttoncaption=Return</span>');"&gt;Click Here&lt;/a&gt;</pre>
<p>or as a button &#8230;</p>
<pre>&lt;input type="button" id="button1" onclick="window.open('http://bit.ly/iphonedevlog','_blank','location=yes','closebuttoncaption=Return');" value="Click Here"&gt;</pre>
<p><em>Options </em>(these work in Android and iOS):</p>
<p><span style="color:#ff0000;">_blank:</span> Opens in the IAB. This is used in the example above. Replace _blank with any of the following if necessary:<br />
_self: Opens in the Cordova WebView if the URL is in the white list, otherwise it opens in the InAppBrowser.<br />
_system: Opens in the system&#8217;s web browser.</p>
<p><span style="color:#ff0000;">location=yes:</span> This is used in the example above. It displays the full URL of the page in the inAppBrowser in a location bar. This is the default IAB behavior, so if you leave the option out, IAB will show the location bar. Replace yes with no to refrain from displaying the location bar: location=no</p>
<p><em>Captioning the Done button:</em><br />
The default return button in the IAB is to display the word &#8220;Done&#8221; in the button. I changed it to Return in the example above. I notice that when I used this option in the first of my links, all the following links on the page (which omitted this option) adopted the same wording as the first link. You can change it to another word by adding your own text after the equal sign: <span style="color:#ff0000;">closebuttoncaption=</span></p>
<p>There are many more options for the IAB, especially for iOS. See one of the resource links at top.</p>
<p>1. Download the plugin. In your project’s folder in Terminal, type the <strong>add</strong> command::</p>
<pre>cordova plugin add cordova-plugin-inappbrowser --save</pre>
<p>2. Above all of your other js scripts between your &lt;head&gt; tags, put:</p>
<pre>&lt; script src="cordova.js"&gt;&lt;/script&gt; 
&lt; script type="text/javascript" charset="utf-8"&gt;


function onLoad() {
document.addEventListener("deviceready", onDeviceReady, false);
}

// cordova is ready
//
function onDeviceReady() {
 
}
&lt;/script&gt;
</pre>
<p>(My WordPress site is no longer displaying scripts when the angled brackets are closed, so I put a space after the first angled bracket like this: &lt; script&gt; so the whole script would display.)</p>
<p>3. Change your &lt;body&gt; to execute the script to &#8230;</p>
<pre>&lt;body onLoad="onLoad()"&gt;</pre>
<p>4. Create the file and test on your device.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/inappbrowser/'>inAppBrowser</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/884/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/884/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/884/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/884/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/884/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/884/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/884/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/884/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/884/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/884/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/884/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/884/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=884&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/feed/</wfw:commentRss>
		<slash:comments>10</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Fixing Android Lint Warnings Found when Building a PhoneGap Project</title>
		<link>https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/#respond</comments>
		<pubDate>Wed, 26 Jun 2013 03:23:53 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Tips]]></category>
		<category><![CDATA[Android debugging]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Eclipse]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=867</guid>
		<description><![CDATA[One of the checks you should make before creating your apk file for testing or uploading to an Android-based app store is the Run Lint command in Eclipse. This is found when you right-click on your project name in the Project Explorer, and select Android Tools &#62; Run Lint&#8230; The Lint Warnings view will show [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=867&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p><span style="font-size:13px;line-height:19px;">One of the checks you should make before creating your apk file for testing or uploading to an Android-based app store is the Run Lint command in Eclipse. This is found when you right-click on your project name in the Project Explorer, and select Android Tools &gt; Run Lint&#8230;</span></p>
<p>The Lint Warnings view will show various performance, correctness, security, and other Android-environment-specific problems that may give rise to your app not loading or working in your device. (You would not use Lint to check for the validity of your HTML; you would use Validate for that.)<span id="more-867"></span></p>
<p>Here are the issues that arise again and again, some new and some old, when building a PhoneGap project and checking them with Run Lint. I put them here so I can take care of the issues right away instead of figuring them out over and over.</p>
<p><strong>1. Launcher icons should not fill every pixel of their square region; see the design guide for details.</strong><br />
Fix: According the the design guidelines (<a title="http://developer.android.com/design/style/iconography.html" href="http://developer.android.com/design/style/iconography.html" target="_blank">http://developer.android.com/design/style/iconography.html</a>), when you make an icon png, the outline should be irregular, as though following a shape within a square, such as an open book silhouette. What&#8217;s outside the icon shape up to the edge of the square should be transparent. Since you&#8217;ll have the app name under the icon, there&#8217;s no need to add text to the icon. Replace your icons with these guidelines in view.</p>
<p><strong>2. &lt;uses-sdk&gt; tag appears after &lt;application&gt; tag.</strong><br />
Fix: Open AndroidManifest.xml. Move this line &#8230;</p>
<pre>&lt;uses-sdk android:minSdkVersion="7" android:targetSdkVersion="17"/&gt;</pre>
<p>&#8230; to underneath the last &#8220;&lt;uses-permission&#8221; line higher up.</p>
<p><strong>3. Avoid hardcoding the debug mode; leaving it out allows debug and release builds to automatically assign one.</strong><br />
Fix: Open AndroidManifest.xml. You will remove android:debuggable=&#8221;true&#8221; Change this&#8230;</p>
<pre>android:hardwareAccelerated="true"
android:debuggable="true"&gt;</pre>
<p>&#8230; to this &#8230;</p>
<pre>android:hardwareAccelerated="true"&gt;</pre>
<p><strong>4. Found bitmap drawable res/drawable/ic_launcher.png in densityless folder.</strong><br />
Fix: Open res/drawable and delete the icon there.</p>
<p><strong>5. [I18N] Hardcoded string &#8220;Hello World, your-app-name-here&#8221;, should use @string resource.</strong><br />
Fix: Open main.xml and change &#8230;</p>
<pre>android:text="Hello World, your-app-name"</pre>
<p>&#8230; to &#8230;</p>
<pre>android:text="@string, app_name"</pre>
<p>(Note that you do not put your app name in place of &#8220;app_name&#8221; above, but type it exactly as literally written here.)</p>
<p><strong>6. The resource R.xml.config appears to be unused.</strong><br />
<em>Tentative fix:</em> I suspect we need only open res/xml and delete config.xml. Waiting for confirmation from PG support. Harmless if left as is.</p>
<p><strong>7. The resource R.layout.main appears to be unused.</strong><br />
<em>Tentative fix:</em> I suspect we need only open res/Layout and delete main.xml. Waiting for confirmation from PG support. Harmless if left as is.</p>
<p><strong>8. Should explicitly set android:allowBackup to true or false</strong> (it&#8217;s true by default, and that can have some security implications for the application&#8217;s data).<br />
Fix: Open AndroidManifest.xml and add the following after the &lt;application line:</p>
<pre>android:allowBackup="true"</pre>
<p>Read more about whether to set to true or false here: <a title="http://developer.android.com/reference/android/R.attr.html#allowBackup" href="http://developer.android.com/reference/android/R.attr.html#allowBackup" target="_blank">http://developer.android.com/reference/android/R.attr.html#allowBackup</a></p>
<p><strong>9. The &lt;activity&gt; element must be a direct child of the &lt;application&gt; element.</strong><br />
Fix: This one is difficult to describe because each AndroidManifest will be different. But following is a working, no-error version of my latest manifest. Watch the placement of closing angle brackets. Put the starting and closing &lt;activity&gt; tags above and below the &lt;intent&gt; tags. These are the last lines of my AndroidManifest.xml file:</p>
<pre>&lt;application

android:icon="@drawable/icon" android:label="@string/app_name"&gt;
&lt;activity android:name="my-app-name-is-here"
android:hardwareAccelerated="true"
android:allowBackup="true"
android:theme="@android:style/Theme.Black.NoTitleBar"
android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale"&gt;

&lt;intent-filter&gt;
&lt;action android:name="android.intent.action.MAIN" /&gt; 
&lt;category android:name="android.intent.category.LAUNCHER" /&gt;
&lt;/intent-filter&gt;

&lt;/activity&gt;

&lt;/application&gt;

&lt;/manifest&gt;</pre>
<p><strong>10. Random inexplicable errors.</strong><br />
Now and then I find errors that halt my app and no amount of searching helps. Before too many days go by, first restart Eclipse to see if that resolves everything, and if not, then create a new project from scratch using the existing PhoneGap files. I have saved potentially days of work by just renaming the old project and creating a new one in its place &#8212; error free!</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/category/tips/'>Tips</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/android-debugging/'>Android debugging</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/867/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/867/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/867/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/867/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/867/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/867/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/867/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/867/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/867/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/867/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/867/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/867/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=867&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Cordova PhoneGap 2.7.0 in Windows with Eclipse: Install to Release (updated 6/25/13)</title>
		<link>https://iphonedevlog.wordpress.com/2013/05/24/cordova-phonegap-2-7-0-in-windows-with-eclipse/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/05/24/cordova-phonegap-2-7-0-in-windows-with-eclipse/#respond</comments>
		<pubDate>Fri, 24 May 2013 23:06:05 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Android debugging]]></category>
		<category><![CDATA[app submission]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[inAppBrowser]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=843</guid>
		<description><![CDATA[I already have the major software installed on my Windows machine from my last Eclipse build, detailed in https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/. If this is your first time with Eclipse and PhoneGap, follow the link above and pay careful attention to the following setup sections: Install Eclipse Juno IDE Install Java JDK Install ADT Install the Android SDK [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=843&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I already have the major software installed on my Windows machine from my last Eclipse build, detailed in <a title="https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/" href="https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/" target="_blank">https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/</a>. If this is your first time with Eclipse and PhoneGap, follow the link above and pay careful attention to the following setup sections:</p>
<blockquote><p>Install Eclipse Juno IDE<br />
Install Java JDK<br />
Install ADT<br />
Install the Android SDK<br />
Android SDK Manager<br />
Set up your PATH environment variables</p></blockquote>
<p>The steps following will take up where these left off.<br />
<span id="more-843"></span></p>
<p>For system requirements to build Android apps, see: <a title="http://developer.android.com/sdk/index.html" href="http://developer.android.com/sdk/index.html" target="_blank">http://developer.android.com/sdk/index.html</a></p>
<p>For best practices for Google Play apps, see:<br />
<a title="http://support.google.com/googleplay/android-developer/bin/topic.py?hl=en&amp;topic=2364761&amp;parent=2365624&amp;ctx=topic" href="http://support.google.com/googleplay/android-developer/bin/topic.py?hl=en&amp;topic=2364761&amp;parent=2365624&amp;ctx=topic" target="_blank">http://support.google.com/googleplay/android-developer/bin/topic.py?hl=en&amp;topic=2364761&amp;parent=2365624&amp;ctx=topic</a></p>
<p><a title="http://developer.android.com/distribute/googleplay/publish/preparing.html " href="http://developer.android.com/distribute/googleplay/publish/preparing.html" target="_blank">http://developer.android.com/distribute/googleplay/publish/preparing.html </a></p>
<p>For a FAQ and content guidelines on submitting apps to Amazon, see:<br />
<a title="https://developer.amazon.com/help/faq.html" href="https://developer.amazon.com/help/faq.html" target="_blank">https://developer.amazon.com/help/faq.html</a></p>
<h2>Download Cordova 2.7.0</h2>
<p>1. From <a title="http://www.phonegap.com" href="http://www.phonegap.com" target="_blank">http://www.phonegap.com</a>, I downloaded version 2.7.0.<br />
2. It was downloaded to my Downloads folder as: phonegap-2.7.0 I extracted it to</p>
<blockquote><p>D:/PhoneGap/phonegap-2.7.0</p></blockquote>
<p>3. In the phonegap.com download page, I clicked on Getting Started Guides, then chose Getting Started with Android. This tutorial will follow the Apache Cordova Getting started Guide steps outlined in: <a title="http://docs.phonegap.com/en/2.7.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android" href="http://docs.phonegap.com/en/2.7.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android" target="_blank">http://docs.phonegap.com/en/2.7.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android</a></p>
<h2>Set Up Your Project&#8217;s Cordova Files</h2>
<p>Cordova will create the core files for your project via the console.</p>
<p>1. Open a command prompt: Go to Start, Run. . ., and type <strong>cmd.exe</strong> to open the command prompt console window.<br />
2. Get the address to the \bin directory within the Android subfolder of the Cordova distribution. In my case it was:</p>
<blockquote><p>D:\PhoneGap\phonegap-2.7.0-0\lib\android\bin</p></blockquote>
<p>If you look in the /bin folder, you’ll see the &#8220;create&#8221; file there that will execute the following command.<br />
3. Decide on:<br />
a. the path where your project will reside (like D:\Android\RivalEssentials)<br />
b. the package name (like com.stevehusting.RivalEssentials)<br />
c. the project name (RivalEssentials; no dashes or spaces allowed).<br />
Put all four pieces of information together:</p>
<blockquote><p>create &lt;Android_bin_path_to_create_file&gt; &lt;project_folder_path&gt; &lt;package_name&gt; &lt;project_name&gt;</p></blockquote>
<p>(Do not include the &lt; or &gt;, and put a space between each component.)<br />
4. My phonegap files resided on my D: drive, so at the command prompt I entered D: to change to that drive. (If you were in My Computer, you could drag the D: icon to the command prompt screen, then hit Backspace to remove the slash, then hit Enter to change to that directory.)<br />
5. Once the command prompt started with D:\&gt;, I typed the change directory command (cd) as follows, then hit Enter (note that I used the normal forward slashes and not back slashes):</p>
<blockquote><p>cd D:/PhoneGap/phonegap-2.7.0/phonegap-2.7.0/lib/android/bin</p></blockquote>
<p>(If you get the message, &#8220;The system cannot find the path specified,&#8221; then you have a typo in your command.)</p>
<p>6. Then I followed the steps to create the project with:</p>
<blockquote><p>create D:\Android\RivalEssentials com.stevehusting.RivalEssentials RivalEssentials</p></blockquote>
<p>(You can type these long strings of text in a text editor and copy/paste them into the command prompt window. To paste, click on the icon at upper left of the command prompt window, then navigate: Edit &gt; Paste.)<br />
7. Shut down the command prompt window by clicking on the icon in the upper right.</p>
<p>8. When the command prompt finished, I found all the files set in the location I indicated.</p>
<h2>Set Up Project in Eclipse</h2>
<p>1. Start up Eclipse. You&#8217;ll see the progress bar in the lower right.</p>
<p>If you are impatient, skip all the notices saying that updates are available, and go right to step 2, then go back and do them at a more convenient time (by restarting Eclipse). Nevertheless, you are encouraged to keep the software up to date.</p>
<p>If you get a notice regarding updates available in the lower right of the screen, click on the notice&#8217;s box and a dialog will open with software checked for download. Hit Next then Next, then on the I Accept radio button, then on Finish. Watch awhile to click on any permission notices that require you to affirm. You&#8217;ll need to restart Eclipse to finish installation.</p>
<p>Upon restart, you may get a notice about updating the ADT. Click on Open SDK Manager in that popup. The Android SDK Manager will open and you&#8217;ll see in the Status column the updates available. Click on the Install X packages&#8230; button, Accept the license, and Install. Don&#8217;t let the progress bar fool you: it is per install, NOT the total install time. This can take a while!</p>
<p>2. Back in Eclipse: File &gt; New &gt; Project (if &#8220;Not Applicable&#8221; is seen instead of a list of items, check the upper right of the Eclipse screen and make sure Java is selected, not Java EE).<br />
3. Click on the + button to the left of Android to show its contents if it&#8217;s not open already.<br />
4. Choose &#8220;Android Project from Existing Code,&#8221; and hit Next. The &#8220;existing code&#8221; will be the files created by PhoneGap, NOT your own HTML code.<br />
5. Click on the Browser button and select the folder you used for &lt;project_folder_path&gt;. Mine was D:\Android\RivalEssentials.<br />
6. If you have a workspace already, check Copy projects into workspace; otherwise, leave it unchecked. Mine was left unchecked.<br />
7. Hit Finish and wait.<br />
8. Click on the + to the left of the project name in Eclipse to show the files.<br />
9. Right-click on AndroidManifest.xml and select Open With &gt; Text Editor. Remove or comment out all the permissions your app doesn’t need. To learn more about permissions, see:<br />
<a title="http://developer.android.com/guide/topics/manifest/uses-feature-element.html" href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html" target="_blank">http://developer.android.com/guide/topics/manifest/uses-feature-element.html</a><br />
<a title="http://developer.android.com/guide/topics/manifest/uses-permission-element.html" href="http://developer.android.com/guide/topics/manifest/uses-permission-element.html" target="_blank">http://developer.android.com/guide/topics/manifest/uses-permission-element.html</a><br />
<a title="http://developer.android.com/reference/android/Manifest.permission.html" href="http://developer.android.com/reference/android/Manifest.permission.html" target="_blank">http://developer.android.com/reference/android/Manifest.permission.html</a></p>
<p><strong>Some explanatory notes on this page:</strong></p>
<blockquote><p>android:versionCode=&#8221;1&#8243;</p></blockquote>
<p>This is the first version of your app. Subsequent versions are always sequentially numbered. Not shown to the public.</p>
<blockquote><p>android:versionName=&#8221;1.0&#8243;</p></blockquote>
<p>This is the actual version shown to users.</p>
<p>The &lt;uses-sdk&gt; section: For the minSdkVersion, put the lowest version your app is designed to use, such as 8 for Android 2.2. For the targetSdkVersion, put the number for the highest device you’ve tested it against (my current &#8220;Nexus 7&#8221; device would be &#8220;15.&#8221; If you see a maxSdkVersion, it’s recommended that you leave it blank (according to <a title="http://developer.android.com/guide/topics/manifest/uses-sdk-element.html" href="http://developer.android.com/guide/topics/manifest/uses-sdk-element.html" target="_blank">http://developer.android.com/guide/topics/manifest/uses-sdk-element.html</a>).</p>
<p>If you started clicking around in Eclipse like I did, and you are unfamiliar with the IDE (integrated development environment with its myriad of views), you may lose the Project Explorer view. Just go to Window &gt; Show View &gt; Project Explorer to bring it back. You may have to first go to Window &gt; Show Perspective &gt; Other&#8230; and click on the line with (default). Mine was &#8220;Java EE (default).&#8221; Learn more: <a title="http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcprbview.htm" href="http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcprbview.htm" target="_blank">http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcprbview.htm</a></p>
<h2>Test in the Emulator</h2>
<p>Let&#8217;s test PhoneGap&#8217;s sample page in the emulator.</p>
<p>1. Click on Project &gt; Clean&#8230;, make sure your project name is selected, then OK. Right-click on the project name, then on Validate. The progress bar appears in lower right, and a popup should announce no errors.</p>
<p>2. Right-click on the project name again, then Run As &gt; Android Application. The emulator should start (consuming 669MB, according to the Windows Task Manager in my case). It usually takes a long wait before your application appears on the screen. You can look at the Console view at the bottom of the Eclipse window to see the progress of the emulator. When the messages stop, switch to the LogCat view to see the progress as it loads in the emulator.</p>
<p><strong>Error received:</strong></p>
<p>After I did a recent update, the emulator would no longer run. The console complained that there was no apk file. When I attempted to create an unsigned apk directly (steps are further down this page), I got the error: &#8220;No Build Tools installed in the SDK.&#8221; Evidently, the recent update did not complete.</p>
<p>I shut down Eclipse, went to my \android-sdks SDK folder, and double-clicked on the &#8220;SDK Manager.exe&#8221; file. I noticed the icon for the program at the bottom of the screen and opened it. The Android SDK Manager opened, showing me that there were 4 packages to install. After that install, I started Eclipse again and the emulator launched successfully. The problem was that Eclipse was locking a file, preventing a file from downloading and making changes; shutting down Eclipse and running the Manager again solved the problem.</p>
<p>3. If all goes well, the Android device screen will appear with an icon in the middle. Drag the icon to one side to unlock, then PhoneGap sample page should start up on the emulator screen. The emulator should display the one-page starting screen that Cordova PhoneGap created. Nothing more.</p>
<p>If it does not display, check the Console for reasons why it failed to launch. If you don&#8217;t understand the output, copy and paste one of the final lines into a search engine for solutions. That&#8217;s how I&#8217;ve resolved a majority of problems.</p>
<h2>Add Your Project&#8217;s Assets</h2>
<p>1. In Eclipse, open assets &gt; www and look at the files there. PhoneGap provided these files to build a sample output for the emulator so that you&#8217;ll know it&#8217;s working. You can remove all those files, except cordova-2.7.0.js, and replace them with yours; let&#8217;s follow those steps next. Right-click on each folder in www and select Delete. Also delete index.html, main.js, master.css, and spec.html.<br />
2. Make sure your index.html file references cordova-2.7.0.js before other JS scripts:</p>
<blockquote><p>&lt;script src=&#8221;cordova-2.7.0.js&#8221;&gt;&lt;/script&gt;</p></blockquote>
<p>3. Open the folder containing your already-created www assets in Windows Explorer (your project’s HTML, CSS, Javascript, videos, images, etc., files). Highlight the files and drag them to the www folder in Eclipse. Select to &#8220;Copy files and folders.&#8221;<br />
4. Do a Project &gt; Clean.<br />
5. Right-click on the project name and select Validate. If it mentions that it found a few errors, then look at the folder structure. You&#8217;ll see icons over the upper left corners. Open those and open the files with those icons. When you open one of the files, you&#8217;ll see a yellow marker (like a thick minus sign) to the right. Click on that marker and it&#8217;ll jump to the error and tell you the problem. In this way, I fixed 9 errors with my HTML files that I failed to find earlier. Shame on me!</p>
<p>You can also find the list of errors by: Window &gt; Show View &gt; Other&#8230; &gt; General &gt; Problems. In addition to Problems, click on Error Log. Learn more: <a title="http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcprbview.htm" href="http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcprbview.htm" target="_blank">http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcprbview.htm</a></p>
<h2>InAppBrowser Test</h2>
<p>If you have external links, you’ll want to change them to the following format. Without the InAppBrowser, your external links will open in a browser outside the app. You would then hit the back button on your Android device. But with the InAppBrowser, one needs only tap on a Done button at bottom to return right to the app.</p>
<pre>&lt;a href="#" onclick="window.open('https://iphonedevlog.wordpress.com', '_blank', 'location=no');"&gt;without location bar&lt;/a&gt;

&lt;a href="#" onclick="window.open('https://iphonedevlog.wordpress.com', '_blank');"&gt;with location bar&lt;/a&gt;</pre>
<p>Use location=no to refrain from showing the location bar with the external page’s URL. It is shown by default, so you can leave off location=no or location=yes and the path URL will be shown above the Done button at bottom.</p>
<p>More in the wiki at <a title="http://wiki.apache.org/cordova/InAppBrowser Other setup instructions: https://github.com/apache/cordova-ios/blob/master/FirstRun.md" href="http://wiki.apache.org/cordova/InAppBrowser Other setup instructions: https://github.com/apache/cordova-ios/blob/master/FirstRun.md" target="_blank">http://wiki.apache.org/cordova/InAppBrowser</a><br />
<a title="http://wiki.apache.org/cordova/InAppBrowser Other setup instructions: https://github.com/apache/cordova-ios/blob/master/FirstRun.md" href="http://wiki.apache.org/cordova/InAppBrowser Other setup instructions: https://github.com/apache/cordova-ios/blob/master/FirstRun.md" target="_blank"> Other setup instructions: https://github.com/apache/cordova-ios/blob/master/FirstRun.md</a></p>
<h2>Home Screen Icon Name</h2>
<p>1. Specify the name you want to appear under the icon on the device’s home screen. Open res/values/strings.xml with the Text Editor and edit as shown below. Keep the text short, like 20 characters or fewer. Unlike the iPhone, long titles will wrap, which is nice.</p>
<pre>&lt;string name=”app_name”&gt;App Title Here With Spaces&lt;/string&gt;</pre>
<p>2. Save the page.</p>
<h2>Debugging your Project</h2>
<p>1. The validator in Eclipse validates your HTML and CSS, giving filename, nature of problem, and line number of its location in the file, for all the HTML files in the app. In Eclipse, select the project name in the Package Explorer and refresh the project (File &gt; Refresh). Watch the progress bar in the lower right. Right-click on your project name again, and select Validate. Again, watch the progress bar in the lower right. An alert will give you a quantity of problems found. To read a listing of those problems, Window &gt; Show View &gt; Other&#8230; &gt; General &gt; Problems. In addition to Problems, click on Error Log. Learn more: <a title="http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcprbview.htm" href="http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcprbview.htm" target="_blank">http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.platform.doc.user%2Fconcepts%2Fcprbview.htm</a></p>
<p>(If you don&#8217;t see the validation option, you&#8217;ll need to download the WTP (Eclipse Web Tools Platform). The instructions on this page will tell you how to get them: <a title="http://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F" href="http://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F" target="_blank">http://wiki.eclipse.org/WTP_FAQ#How_do_I_install_WTP.3F  </a>Pay special attention to the paragraph, &#8220;How do I install WTP?&#8221;)</p>
<p>2. Debug by using the app in a virtual device onscreen with an emulator. Back in the Project Explorer view, right-click on your project name, and select Debug As &gt; Android Application. You’ll see the Console screen at the bottom of the Eclipse environment record the activity prior to appearing in the emulator.</p>
<p>When the emulator starts in a separate window, though, the Console will stop recording; at that point, to the right, click on the LogCat tab to see it start displaying the emulator activity. (So when you post a problem for other developers to help, this is where you’ll copy/paste from: the &#8220;LogCat&#8221; tab.)</p>
<p>If you have a working emulator installed, then it will launch and you’ll see the home screen. (Mine took more than a minute before it displayed, so you may need to be patient. Some have had to wait 5-10 minutes!) Drag the emulator window out of the way so you can see all the entries in LogCat.  In the emulator, drag the &#8220;lock&#8221; to the side and the app will launch after a while, if all is well. Again, be patient.</p>
<p>———————-</p>
<blockquote><p><strong>&#8220;Failed to install app_name.apk on device ‘emulator-5554!'&#8221;</strong><br />
<strong> &#8220;Unfortunately, launcher has stopped.&#8221;</strong></p></blockquote>
<p>Here are some of the ways I&#8217;ve tried to solve problems with the app not appearing in the emulator:</p>
<p>a. Pay attention to the logcat text, and see if any of it points to problems you recognize.</p>
<p>b. Go to Eclipse&#8217;s Window &gt; Preferences, then Android &gt; Launch, add “-partition-size 1024? on the Default emulator options field, then click Apply, and use your emulator as usual.</p>
<p>c. Create and use a new AVD.</p>
<p>d. Shut down Eclipse, then shut down and restart adb (Android Debug Bridge) with these steps:<br />
1. Open command prompt (Start &gt; Run &gt; cmd).<br />
2. Type adb kill-server and then hit Enter.<br />
3. Type adb devices and then hit Enter.<br />
4. Exit command prompt and start up Eclipse again, Project &gt; Clean, and test.</p>
<p>e. Open AndroidManifest.xml in a text editor and change the &#8220;17&#8221; to &#8220;16&#8221; or &#8220;15&#8221; at:<br />
android:targetSdkVersion=&#8221;16&#8243;/&gt;</p>
<p>f. Unplug device to prevent confusion, and test again.</p>
<p>g. Post the logcat to a forum and give details about the app. For instance, one poster pointed out that I neglected to include a needed permission.</p>
<p>h. Run the debugging steps above if you haven’t already, and fix the errors.</p>
<p>i. If you are making new apks again and again to test in the same device, remember to select the app name in Settings on the device, then select to Clear Cache, Clear Data, Force Stop, and Uninstall. Then install the newest version of the app for testing.</p>
<p>Even after all these steps and more, it may fail to load in the emulator, but work fine when testing in the device.</p>
<p>———————-</p>
<p>3. Right-click on the project name, choose Android Tools &gt; Run Lint. This will show you, in the Lint Warnings view, problems in the Android system. I wrote an article where I cover common and not-so-common Lint problems I&#8217;ve encountered when using PhoneGap: <a title="https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/" href="https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/" target="_blank">https://iphonedevlog.wordpress.com/2013/06/26/fixing-android-lint-warnings-found-when-building-a-phonegap-project/</a></p>
<p>4. A fourth and essential way to debug is to test the app on an actual device. Follow the next steps to do so.</p>
<h2>Sign the App</h2>
<p>Apps in the app store must be &#8220;signed&#8221; with keys. Here are the steps to accomplish this. These steps create the &#8220;apk&#8221; file that is uploaded to the app store for purchasers’ download.</p>
<p>1. Right-click on the project name in Eclipse, then click on Android Tools &gt; Export Signed Application Package.<br />
2. &#8220;Project Checks&#8221; dialog:<br />
This screen will tell you if you have serious errors that need to be fixed before you can go further. If you have problems, copy the error into Google and search for resolutions if you are unfamiliar with these problems.<br />
3. &#8220;Key selection&#8221; selection dialog:<br />
Create the key using the app name, no spaces, ending in &#8220;.keystore&#8221;. WARNING: if this is an upgrade, use the same name as the earlier version! Browse to the location to save the keystore and in the same box give the name of the keystore. Back in the Keystore selection dialog, add the password twice and hit Next.<br />
4. Key [&#8220;Private Key&#8221;] Creation dialog:<br />
Alias: same as app_name, no spaces.<br />
password of keystore.<br />
validity: 50 [meaning, good for 50 years].<br />
First and Last name:<br />
Organizational unit: [division of company, or leave blank]<br />
Organization: [use no punctuation &#8211; only letters and numbers, or you&#8217;ll get an &#8220;keytool error&#8221; notice later.]<br />
City:<br />
State: [2-letter abbr. is fine.]<br />
Country: 01. [which is U.S.]<br />
Destination APK file: This is the hard disk location where Eclipse will save the program&#8217;s .apk file that you will later upload to Google Play or other app store. Browse, then click Finish when done.</p>
<p>Write down the above Key Creation information, passwords, and APK destination and keep it safe for later retrieval and app updates. If it is lost, you can&#8217;t upgrade the app any further. To release the app after this file has been lost, you&#8217;ll have to create a whole new app and release it separately, making your customers ineligible for any updates.</p>
<p>Perhaps make a separate private key for each app, especially if you expect to sell the rights to an app to someone else. Save the keystore and apk files to a separate location for safety.</p>
<p>If you get: &#8220;keytool error: java.io.IOException: Incorrect AVA format,&#8221; then an invalid character was used in one of the previous screens. Solution: remove any punctuation so only letters, spaces, and numbers remain.</p>
<h2>Test the apk File in Device</h2>
<p>1. Check with your device as to how to install the apk file. In my defunct eLocity tablet, it was s a simple matter of copying the file to the SD card, navigating to it from Settings, and selecting and choosing to install it. My Google/Asus Nexus 7 does not include an SD card. So I downloaded <a title="http://DropBox.com" href="http://DropBox.com" target="_blank">DropBox.com</a> software to the computer and the <a title="https://play.google.com/store/apps/details?id=com.dropbox.android&amp;hl=en" href="https://play.google.com/store/apps/details?id=com.dropbox.android&amp;hl=en" target="_blank">DropBox app</a> to the Nexus. Once I signed up for a Dropbox account, I copied the apk file to the computer&#8217;s DropBox, then it was accessible on the Nexus. Then I tapped on the file and it asked if I wanted to install. Simple.<br />
2. Once installed, you&#8217;d click on Open, and you should see it on the home screen. If not, tap the middle button at the bottom of the screen to see all the installed apps and look for your icon. Check your app title underneath to make sure it is not truncated.<br />
3. Tap the icon and check out your work.<br />
4. Make changes to the files as necessary and redo.</p>
<h2>Prepare Promotional Artwork</h2>
<p>You&#8217;ll want to include screen captures for upload to the app store of your choice. Choose screens carefully to present your app in its best light. What if your device doesn&#8217;t take screen captures? My now-defunct eLocity tablet and Google Nexus 7 did not have this native functionality, nor did I find apps made for those devices that performed this function. All is not lost, though; here is what I&#8217;ve done as a hobbyist. If you&#8217;re a pro, you really should invest in several physical devices.</p>
<p><strong>A. First method</strong><br />
1. Just double-click the app&#8217;s index.html file in Windows Explorer to open it in Google Chrome, then narrow the browser window to approximate the device&#8217;s screen proportion.<br />
2. Use your favorite screen grab utility (or tap on your keyboard&#8217;s PrtScn key) to get the picture.<br />
3. Use GIMP (download free at gimp.org) or other photo-retouching program to crop and resize appropriately. Screen sizes follow.</p>
<p><strong>B. Second Method</strong><br />
1. Plug in your device, set it for debugging, and in Eclipse, go to Window &gt; Open Perspective &gt; DDMS. To the left of Devices you&#8217;ll see an icon of a camera. Click on that and it&#8217;ll take a screenshot. Click on Save to save to file.<br />
2. Use a photo-retouching program to crop and resize appropriately.</p>
<p><strong>See my Google Play App Publisher&#8217;s Template for the assets you&#8217;ll need</strong> to have on hand before you upload: <a title="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" href="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" target="_blank">https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/</a>. It covers the screenshots and other graphics needed. If you are submitting to Amazon, you may need different assets or different sizes.</p>
<p>Add icons of these sizes into these folders. According to <a title="http://developer.android.com/design/style/iconography.html" href="http://developer.android.com/design/style/iconography.html" target="_blank">http://developer.android.com/design/style/iconography.html</a>, Google wants the icons to be a distinct silhouette, and not to fill the entire field. Delete the current icons, then just drag yours from Windows Explorer right into the folder in Eclipse and select checkbox to copy:</p>
<blockquote><p>res/drawable: 96&#215;96 (icon.png)<br />
res/drawable-hdpi: 72&#215;72 (ic_launcher.png)<br />
res/drawable-ldpi: 36&#215;36 (ic_launcher.png)<br />
res/drawable-mdpi: 48&#215;48 (ic_launcher.png)<br />
res/drawable-xdpi: 96&#215;96 (ic_launcher.png)</p></blockquote>
<h2>Preparing for Google Play Launch</h2>
<p>When you are ready for release, open Eclipse, and in AndroidManifest.xml, turn off debugging. Remove the text:</p>
<pre>android:debuggable="true"</pre>
<p>You&#8217;ll want to move the closing &#8220;&gt;&#8221; symbol at the end of that line to the previous line.</p>
<p>Remove or comment out any other debugging in your HTML files, such as alert messages or log output. Do a Project &gt; Clean.</p>
<h2>Prepare Copy for Google Play Store</h2>
<p>1. Fill out the information on this template for the app assets for the Google Play store so you’ll have the information at hand when you go to the Developer Console: <a title="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" href="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" target="_blank">https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/</a> Of course, if you are releasing to Amazon or another store, the asset requirements may vary.</p>
<p>2. Back up your keystore off your development computer, if you don’t have regular backups.</p>
<h2>Ready For Public Release</h2>
<p>Congratulations! You are now ready to show off your baby to the world!</p>
<p>To register as a Google Play developer and set up your publisher account, visit the Google Play publisher site: <a title="https://play.google.com/apps/publish/Home" href="https://play.google.com/apps/publish/Home" target="_blank">https://play.google.com/apps/publish/Home</a></p>
<p>My Helpful Links page gives a small listing of other sites where you can list your apps. Visit <a title="https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/" href="https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/" target="_blank">https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/</a> and look under &#8220;App Stores.&#8221;</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/android-debugging/'>Android debugging</a>, <a href='https://iphonedevlog.wordpress.com/tag/app-submission/'>app submission</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/inappbrowser/'>inAppBrowser</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/843/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/843/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/843/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/843/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/843/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/843/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/843/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/843/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/843/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/843/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/843/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/843/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=843&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/05/24/cordova-phonegap-2-7-0-in-windows-with-eclipse/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>What programming language should you learn if you want to make apps?</title>
		<link>https://iphonedevlog.wordpress.com/2013/05/16/what-programming-language-should-you-learn-if-you-want-to-make-apps/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/05/16/what-programming-language-should-you-learn-if-you-want-to-make-apps/#respond</comments>
		<pubDate>Thu, 16 May 2013 22:02:58 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[iPhone dev]]></category>
		<category><![CDATA[Xcode]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=825</guid>
		<description><![CDATA[Newcomers ask this question a lot. I&#8217;ve posted my response to this under the link, &#8220;Which programming language should I learn to make apps?&#8221; I hope it helps to narrow down your choice of languages to start learning. I posted it here so I can point to it when I encounter the question in forum posts.Filed [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=825&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>Newcomers ask this question a lot. I&#8217;ve posted my response to this under the link, &#8220;<a title="https://iphonedevlog.wordpress.com/which-programming-language-should-i-learn-to-make-apps/" href="https://iphonedevlog.wordpress.com/which-programming-language-should-i-learn-to-make-apps/">Which programming language should I learn to make apps?</a>&#8221; I hope it helps to narrow down your choice of languages to start learning. I posted it here so I can point to it when I encounter the question in forum posts.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone-dev/'>iPhone dev</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/xcode/'>Xcode</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/825/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/825/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/825/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/825/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/825/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/825/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/825/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/825/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/825/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/825/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/825/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/825/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=825&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/05/16/what-programming-language-should-you-learn-if-you-want-to-make-apps/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Downloading Apache-Cordova PhoneGap 2.6.0rc1 on Mountain Lion 10.8: for Apple App Store</title>
		<link>https://iphonedevlog.wordpress.com/2013/04/05/downloading-apache-cordova-phonegap-2-6-0rc1-on-mountain-lion-10-8/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/04/05/downloading-apache-cordova-phonegap-2-6-0rc1-on-mountain-lion-10-8/#respond</comments>
		<pubDate>Fri, 05 Apr 2013 20:41:14 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[App Store]]></category>
		<category><![CDATA[Cordova]]></category>
		<category><![CDATA[Xcode]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=808</guid>
		<description><![CDATA[Requirements Before you can install the app you create with PhoneGap on your device, you need to sign up as a Developer with Apple and go through the business documentation, Certificate Signing, and Developer Certificate process, all of which are detailed on Apple’s web site (https://developer.apple.com/programs/ios/), under Prepare for App Submission. Nevertheless, you can skip [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=808&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<h2>Requirements</h2>
<p>Before you can install the app you create with PhoneGap on your device, you need to sign up as a Developer with Apple and go through the business documentation, Certificate Signing, and Developer Certificate process, all of which are detailed on Apple’s web site (<a title="https://developer.apple.com/programs/ios/" href="https://developer.apple.com/programs/ios/" target="_blank">https://developer.apple.com/programs/ios/</a>), under Prepare for App Submission. Nevertheless, you can skip all those steps and still see your work in the the iOS Simulator included with Xcode &#8212; you just won&#8217;t be able to view the app in your device or App Store. Xcode is a free download you can download now, but the Developer status comes at $99 a year. <span id="more-808"></span></p>
<p>If you are new to creating apps for the App Store, you’ll want to peruse the App Store Review Guidelines to make sure your app meets the rules (requires sign-in): <a title="https://developer.apple.com/appstore/guidelines.html" href="https://developer.apple.com/appstore/guidelines.html" target="_blank">https://developer.apple.com/appstore/guidelines.html</a> You are strongly encouraged to make use of these documents before you start your project, lest you run afoul of Apple&#8217;s rules for what apps they will and will not allow in the App Store.</p>
<p>You&#8217;ll need Mac® OS X® Lion or greater (10.7.4+ available for purchase from the <a title="http://www.apple.com/osx/apps/app-store.html" href="http://www.apple.com/osx/apps/app-store.html" target="_blank">Mac App Store</a>) running Xcode 4.5+ (free download from the <a title="http://www.apple.com/osx/apps/app-store.html" href="http://www.apple.com/osx/apps/app-store.html" target="_blank">Mac App Store</a>) with the iOS 6 SDK (software development kit). <em>Although you can develop the HTML/CSS/JS portion of an iPhone app on a Windows machine, you&#8217;ll still need a Mac with Xcode to convert the code to the binary that is uploaded to the App Store. You need a Mac to make iPhone apps. </em></p>
<p>Cordova uses the command line to create new app projects, so you&#8217;ll need to download that after installing Xcode. In Xcode, go to Xcode &gt; Preferences &gt; Downloads &gt; Command Line Tools.</p>
<p>To test on a device, the device needs to have a minimum of iOS 5 installed.</p>
<h2>Downloading Apache-Cordova PhoneGap</h2>
<p>The 31MB download went to my Downloads directory. Double-clicking n the file gave me a directory folder called &#8220;phonegap-2.6.0rc1&#8221;</p>
<p>In phonegap-2.6.0rc1, I clicked on the &#8220;ios&#8221; directory. Developers should read the RELEASENOTES.md provided to see if there are any changes they may need to make to update their code.</p>
<p>The README.md file tells us where the Getting Started guides are located online, various PhoneGap-related websites developers should know about, and briefly explains the directory structure in the PhoneGap directory. Do read it.</p>
<p>The phonegap-2.6.0rc1/doc directory gives us a wealth of material, including the API references and Getting Started guides. The instructions for this article on installing PG 2.6.0rc1 were taken from doc &gt; index.html &gt; Getting Started Guides &gt; Getting Started with iOS. They were not yet available online when I downloaded this.</p>
<p><em>iOS Plugin authors/users should also read: <a title="https://github.com/apache/cordova-ios/blob/master/guides/Cordova%20Plugin%20Upgrade%20Guide.md" href="https://github.com/apache/cordova-ios/blob/master/guides/Cordova%20Plugin%20Upgrade%20Guide.md" target="_blank">https://github.com/apache/cordova-ios/blob/master/guides/Cordova%20Plugin%20Upgrade%20Guide.md</a></em></p>
<div><em>Upgrading Guides also:</em></div>
<div><em><a title="http://docs.phonegap.com/en/edge/guide_upgrading_index.md.html#Upgrading%20Guides" href="http://docs.phonegap.com/en/edge/guide_upgrading_index.md.html#Upgrading%20Guides" target="_blank">http://docs.phonegap.com/en/edge/guide_upgrading_index.md.html#Upgrading%20Guides</a> </em></div>
<div></div>
<div>The steps that follow assume you are creating a new project, not updating a project.</div>
<h2>Creating a New Project</h2>
<p>1. We&#8217;ll be using the Terminal app to enter a line of text that sends the command to create the basic files used in a PhoneGap app. The command line text is composed of information in the following order with a space between each piece:</p>
<p>The command (./create)<br />
The location of the directory to be created (such as /Users/Steve/Documents/PhoneGap_apps/PhoneGap_apps/testPG260/)<br />
The Xcode package name (such as com.stevehusting.TestingPG260)<br />
And the project&#8217;s name (TestingPG260)</p>
<p>2. Now let&#8217;s execute the actual command. Open the Terminal app, either from the dock or by typing &#8220;terminal&#8221; in the search box that appears when you click on the magnifying glass in the upper right corner of the desktop.</p>
<p>3. Hold down the Command key while you drag the phonegap-2.6.0rc1 &gt; bin directory to the Terminal window. This sets that directory in the command prompt as the starting point for finding the ./create command.</p>
<p>4. Copy/paste all the pieces of the command line as noted earlier, in order, with a space between each:</p>
<pre>./create /Users/Steve/Documents/PhoneGap_apps/PhoneGap_apps/TestingPG260/ com.stevehusting.TestingPG260 TestingPG260</pre>
<p>5. Give the command time to work, then check the location for the directory and open it. If found, exit the Terminal. There are a variety of errors you can get if any of above four steps have been compromised, such as not starting the command prompt at the /bin directory as stated in step 3.</p>
<p>If you check the Getting Started with iOS guide included in this download, you&#8217;ll find additional parameters, such as referencing the common Cordova library from a fixed location.</p>
<p>If you&#8217;ve built up a few of the earlier PG projecs, you&#8217;ll see that the install follows the exact same steps back to 2.3.0.</p>
<h2>Setting up the Project in Xcode</h2>
<p><span style="color:#ff0000;">At this point, since the project follows the same building process as earlier PG version downloads, just visit</span> <a title="https://iphonedevlog.wordpress.com/2013/01/21/phonegap-2-3-0-in-mac-os-x-mountain-lion-10-8-from-download-to-ios-app-store/" href="https://iphonedevlog.wordpress.com/2013/01/21/phonegap-2-3-0-in-mac-os-x-mountain-lion-10-8-from-download-to-ios-app-store/" target="_blank">https://iphonedevlog.wordpress.com/2013/01/21/phonegap-2-3-0-in-mac-os-x-mountain-lion-10-8-from-download-to-ios-app-store/</a><span style="color:#ff0000;"> to read about how to set up your project for published on the App Store. In that article, you&#8217;ll substitute &#8220;TestingPG230&#8221; for &#8220;TestingPG260,&#8221; of course. <strong>Start with the heading, &#8220;View Files in the Simulator.&#8221; </strong></span></p>
<p>If you are only releasing an app in English, using no localizations (which allows users to read your app in their language), then you&#8217;ll want to delete the localization sections from your app folder structure within Xcode. If you don&#8217;t, the app will not go through until you add at least one screenshot per language. The Developer Console will accept the binary uploaded, but will leave a note asking for a localized screenshot.  (For more about localizations, one article is: <a title="https://iphonedevlog.wordpress.com/2013/01/21/phonegap-2-3-0-in-mac-os-x-mountain-lion-10-8-from-download-to-ios-app-store/" href="https://iphonedevlog.wordpress.com/2013/01/21/phonegap-2-3-0-in-mac-os-x-mountain-lion-10-8-from-download-to-ios-app-store/" target="_blank">https://code.google.com/p/jquery-i18n-properties/</a>)</p>
<p>You can safely delete these directories (right-click, Delete, Remove Reference) if not using localization:</p>
<address>Resources/de.lproj<br />
Resources/se.proj<br />
Resources/en.proj<br />
Resources/es.proj</address>
<p>Also, read the 2.6.0rc1 Getting Started further if you have problems. Some problems and their solutions are covered there that are not in my article.</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/app-store/'>App Store</a>, <a href='https://iphonedevlog.wordpress.com/tag/cordova/'>Cordova</a>, <a href='https://iphonedevlog.wordpress.com/tag/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a>, <a href='https://iphonedevlog.wordpress.com/tag/xcode/'>Xcode</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/808/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/808/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/808/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/808/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/808/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/808/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/808/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=808&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/04/05/downloading-apache-cordova-phonegap-2-6-0rc1-on-mountain-lion-10-8/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Converting to Universal App with Zurb&#8217;s Foundation using Responsive Web Design Techniques</title>
		<link>https://iphonedevlog.wordpress.com/2013/02/04/converting-to-universal-app-with-zurbs-foundation-using-responsive-web-design-techniques/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/02/04/converting-to-universal-app-with-zurbs-foundation-using-responsive-web-design-techniques/#respond</comments>
		<pubDate>Mon, 04 Feb 2013 17:28:54 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[iPhone]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[responsive web design]]></category>
		<category><![CDATA[Universal App]]></category>
		<category><![CDATA[Zurb Foundation]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=746</guid>
		<description><![CDATA[This article records the steps I followed to convert my mobile phone app into a Universal app good for mobile and tablet screen sizes. Normally, on the mobile device, the user follows this navigation paradigm: screen showing article categories, tap through to show article headings (titles) for that category, then tap on the article heading [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=746&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>This article records the steps I followed to convert my mobile phone app into a Universal app good for mobile and tablet screen sizes.</p>
<p>Normally, on the mobile device, the user follows this navigation paradigm: screen showing article categories, tap through to show article headings (titles) for that category, then tap on the article heading to show article. For the mobile version, I want to retain this path. For the tablet version, though, I want to show the article headings at left and article detail pages at right, side by side. For both mobile and tablet, I can show the article categories on the home page as large graphical buttons. A text footer with copyright information will stretch across the bottom; this footer will not be fixed.</p>
<p>How do I create both navigation types without duplicating pages for both? By using responsive web design (RWD) techniques, in which the layout changes with the screen width, repositioning the content at certain &#8220;breakpoints&#8221; of screen widths. Normally, when you narrow the browser window for sites that did not implement RWD techniques, the browser will cut off the site at the right end. As a positive example of RWD, go to the Microsoft web site and narrow your browser, and you&#8217;ll see the content adapt to fit. So I want one set of files to work across several screen widths, specifically various sizes of mobile screens and tablets. <span id="more-746"></span></p>
<h2>The Zurb Foundation framework</h2>
<p>Several RWD frameworks already exist to help us start building right away (if you have prior web design experience, of course). Zurb Foundation 3 (<a title="http://foundation.zurb.com/docs/index.php" href="http://foundation.zurb.com/docs/index.php" target="_blank">http://foundation.zurb.com/docs/index.php</a>) has the coding built in for many features that my project needs. It uses a grid layout that I can adapt to my purposes (<a title="http://foundation.zurb.com/docs/grid.php" href="http://foundation.zurb.com/docs/grid.php" target="_blank">http://foundation.zurb.com/docs/grid.php</a>), a variety of buttons (<a title="http://foundation.zurb.com/docs/buttons.php" href="http://foundation.zurb.com/docs/buttons.php" target="_blank">http://foundation.zurb.com/docs/buttons.php</a>), several navigation possibilities (<a title="http://foundation.zurb.com/docs/navigation.php" href="http://foundation.zurb.com/docs/navigation.php" target="_blank">http://foundation.zurb.com/docs/navigation.php</a>), and nice UI (user interface) elements (<a title="http://foundation.zurb.com/docs/elements.php" href="http://foundation.zurb.com/docs/elements.php" target="_blank">http://foundation.zurb.com/docs/elements.php</a>). It also includes several useful Javascripts (<a title="http://foundation.zurb.com/docs/javascripts.php" href="http://foundation.zurb.com/docs/javascripts.php" target="_blank">http://foundation.zurb.com/docs/javascripts.php</a>).</p>
<p>It is modular and editable, so I&#8217;ll be able to remove whatever parts I don&#8217;t need to keep the app size down. Unfortunately, it uses Jquery, which code bloat may slow down an app. However, different aspects of the framework are powered by individual Jquery js files, and we can delete fom the app all the ones we won&#8217;t be using. (I discovered to my delight that the app was fast anyway.)</p>
<p>For the mobile version navigation, I can show a drop-down Top Bar (<a title="http://foundation.zurb.com/docs/navigation.php" href="http://foundation.zurb.com/docs/navigation.php" target="_blank">http://foundation.zurb.com/docs/navigation.php</a>) that displays the article headings. For the tablet version, those article headings will just display in full at left with Foundation&#8217;s Nav Bar. So, how do I design this to happen?</p>
<p>The Foundational grid can be set to automatically &#8220;stack&#8221; when displayed on smaller screens. This means I would put the navigation elements for both mobile (Top Bar) and tablet (Nav Bar) in the left grid column. I would hide the mobile top bar for wider screen widths, but show the left article headings. For mobile, I would hide the article headings, and show the top bar; since it&#8217;s mobile, the right content column would &#8220;slip&#8221; under the left column&#8217;s top bar so they become stacked. Built-in media queries will be used for this show/hide scripting (<a title="http://foundation.zurb.com/docs/media-queries.php" href="http://foundation.zurb.com/docs/media-queries.php" target="_blank">http://foundation.zurb.com/docs/media-queries.php</a>).</p>
<p>Foundation is based upon a 12-column-wide imaginary layout. So if you want two equal columns on the page, you would make a row composed of two each the column called &#8220;six columns.&#8221; If you want two columns, one narrower than the other, as I do, you choose the narrow size (such as &#8220;four columns&#8221;) and the larger size (&#8220;eight columns&#8221;). The columns are delineated in percentages, so they will stretch and squash with the window size. As mentioned previously, at mobile size, the left column will stack on top of the right column.</p>
<p>I expect to fill the left navigation with innerHTML for a category&#8217;s listing of articles; same with the top bar. (This means that I will use Javascript to construct the links to each of the articles, and each time the top bar or left navigation bar appears, the links will show there. You&#8217;ll see code examples below.)</p>
<p>I won&#8217;t be explaining any more features of Foundation in depth for this article; you&#8217;ll need to go to their site to see their many examples.</p>
<p>What about pictures? They, too, will be displayed with innerHTML at the touch of a button in the article page (which will execute external Javascript functions to show and hide them); so they won&#8217;t automatically appear in the HTML document. This feature is not part of Foundation; I got it separately through a Sitepoint.com forum query. I did not want images to slow down the page-loading times.</p>
<p>Based on what I wrote above, I&#8217;ve adapted the template page as follows. (Of course, you won&#8217;t see it as intended unless you download the Foundation code first.)</p>
<h2>Template</h2>
<p>&lt;!DOCTYPE html&gt;<br />
&lt;head&gt;<br />
&lt;meta charset=&#8221;utf-8&#8243; /&gt;</p>
<p>&lt;!&#8211; Set the viewport width to device width for mobile &#8211;&gt;<br />
&lt;meta name=&#8221;viewport&#8221; content=&#8221;width=device-width&#8221; /&gt;</p>
<p>&lt;title&gt;Tempalte for pages&lt;/title&gt;</p>
<p>&lt;!&#8211; Included CSS Files (Compressed) &#8211;&gt;<br />
&lt;link rel=&#8221;stylesheet&#8221; href=&#8221;../stylesheets/foundation.css&#8221;&gt;<br />
&lt;link rel=&#8221;stylesheet&#8221; href=&#8221;../stylesheets/app.css&#8221;&gt;<br />
&lt;/head&gt;<br />
&lt;body&gt;</p>
<p>&lt;div class=&#8221;row&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;<br />
&lt;div class=&#8221;twelve columns&#8221;&gt;<br />
&lt;h3&gt;:: Header ::&lt;/h3&gt;<br />
&lt;p&gt;Show app info here for both versions. Code as innerHTML.&lt;/p&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;div class=&#8221;row&#8221;&gt;<br />
&lt;div class=&#8221;four columns&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;<br />
&lt;h3&gt;:: Article headings ::&lt;/h3&gt;<br />
&lt;p&gt;Show top bar only for mobile; this column will stack over the other column. Code as innerHTML.&lt;/p&gt;<br />
&lt;p&gt;Show left nav for tablets. Code as innerHTML.&lt;/p&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;div class=&#8221;eight columns&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;<br />
&lt;h3&gt;:: Articles ::&lt;/h3&gt;<br />
&lt;p&gt;Show same article content for mobile and tablet.&lt;/p&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;div class=&#8221;row&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;<br />
&lt;div class=&#8221;twelve columns&#8221;&gt;<br />
&lt;h3&gt;:: Footer ::&lt;/h3&gt;<br />
&lt;p&gt;Show copyright info here for both versions. Code as innerHTML.&lt;/p&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;!&#8211; Initialize JS Plugins &#8211;&gt;<br />
&lt;script src=&#8221;../javascripts/app.js&#8221;&gt;&lt;/script&gt;<br />
&lt;script src=&#8221;../javascripts/jquery.js&#8221;&gt;&lt;/script&gt;</p>
<p>&lt;/body&gt;<br />
&lt;/html&gt;</p>
<p>The above code successfully passed the <a href="http://validator.w3.org" rel="nofollow">http://validator.w3.org</a> validation.</p>
<h2>Footer content</h2>
<p>I&#8217;ll start with the copyright footer. My copyright.js file in the javascripts/ directory contains:</p>
<blockquote><p>function copyright() {<br />
document.getElementById(&#8216;copyright&#8217;).innerHTML = &#8216;Copyright &amp;copy; 2013 by Steve Husting&#8217;;<br />
}</p></blockquote>
<p>The footer row contains:</p>
<blockquote><p>&lt;span id=&#8221;copyright&#8221;&gt;&lt;/span&gt;&lt;script&gt;copyright();&lt;/script&gt;</p></blockquote>
<p>I added between the &lt;head&gt;&lt;/head&gt; tags:</p>
<blockquote><p>&lt;script src=&#8221;../javascripts/copyright.js&#8221;&gt;&lt;/script&gt;</p></blockquote>
<p>So when the page loads, at the &lt;script&gt; point, the page grabs the copyright.js file, and executes it, filling in the span tag with the content specified in the function. A quick test shows it works great. This is the same procedure I used to populate the top bar and nav list, following.</p>
<h2>Top Bar content</h2>
<p>Following this page, <a title="http://foundation.zurb.com/docs/navigation.php#btopCode" href="http://foundation.zurb.com/docs/navigation.php#btopCode" target="_blank">http://foundation.zurb.com/docs/navigation.php#btopCode</a>, I constructed a rudimentary top bar as innerHTML in javascripts/topbar_category1.js as follows:</p>
<blockquote><p>function topbar_category1() {<br />
document.getElementById(&#8216;topbar_category1&#8217;).innerHTML = &#8216;&lt;nav class=&#8221;top-bar&#8221;&gt;&#8217;<br />
+'&lt;ul&gt;&#8217;<br />
+'&lt;li class=&#8221;name&#8221;&gt;&lt;h1&gt;&lt;a href=&#8221;#&#8221;&gt;Category Title&lt;/a&gt;&lt;/h1&gt;&lt;/li&gt;&#8217;<br />
+'&lt;li class=&#8221;toggle-topbar&#8221;&gt;&lt;a href=&#8221;#&#8221;&gt;&lt;/a&gt;&lt;/li&gt;&#8217;<br />
+'&lt;/ul&gt;&#8217;</p>
<p>+'&lt;section&gt;&#8217;<br />
+'&lt;ul class=&#8221;left&#8221;&gt;&#8217;<br />
+'&lt;li&gt;&#8217;<br />
+'&lt;a href=&#8221;../index.html&#8221; style=&#8221;background-color:#eee;&#8221;&gt;Back&lt;/a&gt;&#8217;<br />
+'&lt;/li&gt;&#8217;<br />
+'&lt;/ul&gt;&#8217;<br />
+'&lt;/section&gt;&#8217;</p>
<p>+'&lt;section&gt;&#8217;<br />
+'&lt;ul class=&#8221;right&#8221;&gt;&#8217;<br />
+'&lt;li&gt;&lt;a href=&#8221;#&#8221;&gt;Article 1&lt;/a&gt;&#8217;<br />
+'&lt;li&gt;&lt;a href=&#8221;#&#8221;&gt;Article 2&lt;/a&gt;&lt;/li&gt;&#8217;<br />
+'&lt;li&gt;&lt;a href=&#8221;#&#8221;&gt;Article 3&lt;/a&gt;&lt;/li&gt;&#8217;<br />
+'&lt;/ul&gt;&#8217;<br />
+'&lt;/li&gt;&#8217;<br />
+'&lt;/ul&gt;&#8217;<br />
+'&lt;/li&gt;&#8217;<br />
+'&lt;/ul&gt;&#8217;<br />
+'&lt;/section&gt;&#8217;<br />
+'&lt;/nav&gt;&#8217;;<br />
}</p></blockquote>
<p>Right above the &lt;/body&gt; tag I added the following to enable the top bar functionality:</p>
<blockquote><p>&lt;script src=&#8221;../javascripts/jquery.foundation.topbar.js&#8221;&gt;&lt;/script&gt;</p></blockquote>
<p>Between the &lt;head&gt;&lt;/head&gt; tags I added the following to link to the script:</p>
<blockquote><p>&lt;script src=&#8221;../javascripts/topbar_category1.js&#8221;&gt;&lt;/script&gt;</p></blockquote>
<p>When I found the top bar was not working correctly in mobile, I searched the Foundation Google group for an answer. In response, I added the following to the stylesheets/app.css file:</p>
<blockquote><p>&lt;style type=&#8221;text/css&#8221;&gt;<br />
/* styling needed to make top bar work in mobile */<br />
.top-bar {<br />
min-height: 45px;<br />
margin: 0 0 30px 0;<br />
}<br />
&lt;/style&gt;</p></blockquote>
<p>I made sure that the above stylesheet was being referenced between the &lt;head&gt;&lt;/head&gt; tags of the template page:</p>
<blockquote><p>&lt;link rel=&#8221;stylesheet&#8221; href=&#8221;../stylesheets/app.css&#8221;&gt;</p></blockquote>
<p>None of this will work until I add the following to the left column between its &lt;div class=&#8221;panel&#8221;&gt; and &lt;/div&gt; tags:</p>
<blockquote><p>&lt;span id=&#8221;topbar_category1&#8243;&gt;&lt;/span&gt;&lt;script&gt;topbar_category1();&lt;/script&gt;</p></blockquote>
<p>I need to go another step further and make this disappear when the screen is wider than mobile. Foundation&#8217;s media queries page made it simple. I surrounded the span&#8217;s innerHTML element with a div of class of &#8220;show-for-small&#8221; and I was done:</p>
<blockquote><p>&lt;div class=&#8221;show-for-small&#8221;&gt;<br />
&lt;span id=&#8221;topbar_category1&#8243;&gt;&lt;/span&gt;&lt;script&gt;topbar_category1();&lt;/script&gt;<br />
&lt;/div&gt;</p></blockquote>
<p>Resizing the browser smaller showed the top bar above the article&#8217;s detail page, as desired. Widening the browser, the top bar disappeared, as it should.</p>
<h2>Template Update:</h2>
<p>&lt;!DOCTYPE html&gt;<br />
&lt;head&gt;<br />
&lt;meta charset=&#8221;utf-8&#8243; /&gt;</p>
<p>&lt;!&#8211; Set the viewport width to device width for mobile &#8211;&gt;<br />
&lt;meta name=&#8221;viewport&#8221; content=&#8221;width=device-width&#8221; /&gt;</p>
<p>&lt;title&gt;Template for pages&lt;/title&gt;<br />
&lt;!&#8211; Included CSS Files (Compressed) &#8211;&gt;<br />
&lt;link rel=&#8221;stylesheet&#8221; href=&#8221;../stylesheets/foundation.css&#8221;&gt;<br />
&lt;link rel=&#8221;stylesheet&#8221; href=&#8221;../stylesheets/app.css&#8221;&gt;<br />
&lt;script src=&#8221;../javascripts/copyright.js&#8221;&gt;&lt;/script&gt;<br />
&lt;script src=&#8221;../javascripts/topbar_category1.js&#8221;&gt;&lt;/script&gt;</p>
<p>&lt;style type=&#8221;text/css&#8221;&gt;</p>
<p>&lt;/style&gt;</p>
<p>&lt;/head&gt;</p>
<p>&lt;body&gt;<br />
&lt;div class=&#8221;row&#8221;&gt;<br />
&lt;div class=&#8221;five columns&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;<br />
&lt;h3&gt;:: Article headings ::&lt;/h3&gt;<br />
&lt;p&gt;Show top bar only for mobile; this column will stack over the other column. Code as innerHTML.&lt;/p&gt;<br />
&lt;div class=&#8221;show-for-small&#8221;&gt;<br />
&lt;span id=&#8221;topbar_category1&#8243;&gt;&lt;/span&gt;&lt;script&gt;topbar_category1();&lt;/script&gt;<br />
&lt;/div&gt;<br />
&lt;p&gt;Show left nav only for tablets. Code as innerHTML.&lt;/p&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;div class=&#8221;seven columns&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;<br />
&lt;h3&gt;:: Articles ::&lt;/h3&gt;<br />
&lt;p&gt;Show same article content for mobile and tablet.&lt;/p&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;div class=&#8221;row&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;<br />
&lt;div class=&#8221;twelve columns&#8221;&gt;<br />
&lt;h3&gt;:: Footer ::&lt;/h3&gt;<br />
&lt;p&gt;Show copyright info here for both versions. Code as innerHTML.&lt;/p&gt;<br />
&lt;span id=&#8221;copyright&#8221;&gt;&lt;/span&gt;&lt;script&gt;copyright();&lt;/script&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;!&#8211; Included JS Files (Compressed) &#8211;&gt;<br />
&lt;script src=&#8221;../javascripts/jquery.js&#8221;&gt;&lt;/script&gt;</p>
<p>&lt;!&#8211; Initialize JS Plugins &#8211;&gt;<br />
&lt;script src=&#8221;../javascripts/app.js&#8221;&gt;&lt;/script&gt;<br />
&lt;script src=&#8221;../javascripts/jquery.foundation.topbar.js&#8221;&gt;&lt;/script&gt;</p>
<p>&lt;/body&gt;<br />
&lt;/html&gt;</p>
<h2>Large-screen version of article listing</h2>
<p>With the top bar template for the mobile version finished, it&#8217;s time to work on the 2-column tablet version. I duplicated the top bar&#8217;s js file and renamed it wide_category1.js and opened it. Following the steps in the docs, I changed the content to:</p>
<blockquote><p>function wide_category1() {<br />
document.getElementById(&#8216;wide_category1&#8217;).innerHTML = &#8216;&lt;ul class=&#8221;nav-bar vertical&#8221;&gt;&#8217;<br />
+'&lt;li style=&#8221;background-color:#eee;&#8221;&gt;&lt;a href=&#8221;../index.html&#8221;&gt;&lt;strong&gt;Back&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&#8217;<br />
+'&lt;li&gt;&lt;a href=&#8221;#&#8221;&gt;Article 1&lt;/a&gt;&lt;/li&gt;&#8217;<br />
+'&lt;li&gt;&lt;a href=&#8221;#&#8221;&gt;Article 2&lt;/a&gt;&lt;/li&gt;&#8217;<br />
+'&lt;li&gt;&lt;a href=&#8221;#&#8221;&gt;Article 3&lt;/a&gt;&lt;/li&gt;&#8217;<br />
+'&lt;/ul&gt;&#8217;;<br />
}</p></blockquote>
<p>I added the following between the &lt;head&gt;&lt;/head&gt; tags to reference the script:</p>
<blockquote><p>&lt;script src=&#8221;../javascripts/wide_category1.js&#8221;&gt;&lt;/script&gt;</p></blockquote>
<p>Inside the left column, under the top bar lines, I put:</p>
<blockquote><p>&lt;div class=&#8221;hide-for-small&#8221;&gt;<br />
&lt;h3&gt;Category 1&lt;/h3&gt;<br />
&lt;span id=&#8221;wide_category1&#8243;&gt;&lt;/span&gt;&lt;script&gt;wide_category1();&lt;/script&gt;<br />
&lt;/div&gt;</p></blockquote>
<p>It resized perfectly in the browser, the left menu appearing in its own column when the browser window was wide, and being replaced by the top bar when narrow. The only thing I did not like was the wide line-height in the links when a long article title wrapped; the line could have looked like it was another link, except for the slightly darker borders on top and bottom defining the link buttons. The tall line-height, of course, spaced the links apart, so I think there is little I could do.</p>
<p>I plan on copying this page over and over, giving each page the same filename as the one it&#8217;s updating so that all the internal links would still work. One could also use a database to populate these pages.</p>
<p>Since articles are divided into different categories, I would have as many topbar_category.js files as there are categories (same with the wide_category.js files). Of course, the same footer.js file will be shared among all files. So, from the home page, one would click on a category of articles, and that page will show the correct list of categories for the left column (or top bar), and show any article I want in the right column.</p>
<p>I pasted in a sample page into the right column, added the old app&#8217;s css stylesheet to the &lt;head&gt; tags (for this is a makeover, not from scratch), and opened it in Firefox and Google to check. As expected, the css from both sources was mixed on the page. I turned on the &#8220;Firebug&#8221; add-on and began clicking on its HTML, drilling down through the code. As I clicked on a line of code, that section was highlighted in the browser. For instance, the side menu was a div of class &#8220;panel&#8221; with a padding of 20px and a very light background color of #E6E6E6. Since there already was padding around that element from the other css, I elected to remove it from foundation.css. Firebug showed me the line number, so I was able to go to the right place in the css quickly. I also changed the background color to match it up with what I already had.</p>
<p>I kept going back and forth from Firebug and the two css pages to get the Foundation layout in harmony. I used Google Chrome to check for final look, because it is a Webkit browser and is closer to the final iPhone appearance and functionality.</p>
<p>Foundation styled the &lt;li&gt; tags, and the list-style-type for bullets was set to none. In my app, I used bullets in some &lt;li&gt; tags, and those disappeared. I went ahead and added the HTML for bullets &#8211; &amp;bull; &#8211; to those lines needing bullets.</p>
<p>If you are starting from scratch, of course, you&#8217;ll style your code after you&#8217;ve put it into the column. Foundation provides default styling for many elements, and it may be too &#8220;corporate bland&#8221; for most sites, or just right for you.</p>
<p>In foundation.css, I deleted the lines for features I won&#8217;t be using, section by section. Don&#8217;t forget to check inside the javascripts/ folder to delete all the files you aren&#8217;t using there, too.</p>
<p>Testing in Android revealed plenty of speed in the app, in spite of the Jquery overhead. I had regretted using Jquery on an earlier project, so I was pleasantly surprised, and I will be using this conversion process for my other simple apps.</p>
<p>On the iPod touch emulator, I found that the buttons in the Top Bar  do not stretch vertically to accommodate the long titles that wrap. Instead, the long title wrap right over the text of the next button below. So for the iOS version, I was forced to shorten the wrapped titles where they appeared. Not a deal-breaker for this app.</p>
<p>Because this is being used for the iPhone and Android markets, to be sold in the Amazon app store and iTunes App Store, I had to make sure to include the app store link to the correct store in my Contact page. Including a link to the iPhone app store in an Amazon store app is a no-no, and vise-versa.</p>
<p>Also, because this is a Universal app for the Apple devices, I had to create two different screenshot sizes for the iPhone, and another for the iPad. — three screenshot sizes in all.</p>
<h2>Template final</h2>
<p>&lt;!DOCTYPE html&gt;&lt;html lang=&#8221;en&#8221;&gt;</p>
<p>&lt;head&gt;<br />
&lt;meta charset=&#8221;utf-8&#8243; /&gt;</p>
<p>&lt;!&#8211; Set the viewport width to device width for mobile &#8211;&gt;<br />
&lt;meta name=&#8221;viewport&#8221; content=&#8221;width=device-width&#8221; /&gt;</p>
<p>&lt;title&gt;Article Title for &#8220;General&#8221; category&lt;/title&gt;<br />
&lt;link rel=&#8221;stylesheet&#8221; href=&#8221;../stylesheets/foundation.css&#8221;&gt;<br />
&lt;link rel=&#8221;stylesheet&#8221; href=&#8221;../stylesheets/this-app-styles.css&#8221;&gt;<br />
&lt;link rel=&#8221;stylesheet&#8221; href=&#8221;../stylesheets/app.css&#8221;&gt;<br />
&lt;script src=&#8221;../javascripts/copyright.js&#8221;&gt;&lt;/script&gt;&lt;script src=&#8221;../cordova-2.3.0.js&#8221;&gt;&lt;/script&gt;<br />
&lt;script src=&#8221;../javascripts/topbar_general.js&#8221;&gt;&lt;/script&gt; &lt;!&#8211; for &#8220;General&#8221; category files &#8211;&gt;<br />
&lt;script src=&#8221;../javascripts/wide_general.js&#8221;&gt;&lt;/script&gt; &lt;!&#8211; for &#8220;General&#8221; category files &#8211;&gt;</p>
<p>&lt;/head&gt;</p>
<p>&lt;body&gt;<br />
&lt;div class=&#8221;row&#8221;&gt;<br />
&lt;div class=&#8221;four columns&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;</p>
<p>&lt;div class=&#8221;show-for-small&#8221;&gt;<br />
&lt;span id=&#8221;topbar_general&#8221;&gt;&lt;/span&gt;&lt;script&gt;topbar_general();&lt;/script&gt;<br />
&lt;/div&gt;</p>
<p>&lt;div class=&#8221;hide-for-small&#8221;&gt;<br />
&lt;h3&gt;General&lt;/h3&gt;<br />
&lt;span id=&#8221;wide_general&#8221;&gt;&lt;/span&gt;&lt;script&gt;wide_general();&lt;/script&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;div class=&#8221;eight columns&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;<br />
&lt;div class=&#8221;hide-for-small&#8221;&gt;<br />
&lt;br&gt;<br />
&lt;/div&gt;</p>
<p>&lt;!&#8211; &#8220;General&#8221; article category content goes here &#8211;&gt;</p>
<p>&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;div class=&#8221;row&#8221;&gt;<br />
&lt;div class=&#8221;panel&#8221;&gt;<br />
&lt;div class=&#8221;twelve columns&#8221;&gt;<br />
&lt;span id=&#8221;copyright&#8221;&gt;&lt;/span&gt;&lt;script&gt;copyright();&lt;/script&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;<br />
&lt;/div&gt;</p>
<p>&lt;!&#8211; Included JS Files (Compressed) &#8211;&gt;</p>
<p>&lt;script src=&#8221;../javascripts/jquery.js&#8221;&gt;&lt;/script&gt;</p>
<p>&lt;!&#8211; Initialize JS Plugins &#8211;&gt;<br />
&lt;script src=&#8221;../javascripts/app.js&#8221;&gt;&lt;/script&gt;<br />
&lt;script src=&#8221;../javascripts/jquery.foundation.topbar.js&#8221;&gt;&lt;/script&gt;</p>
<p>&lt;/body&gt;<br />
&lt;/html&gt;</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/iphone/'>iPhone</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/responsive-web-design/'>responsive web design</a>, <a href='https://iphonedevlog.wordpress.com/tag/universal-app/'>Universal App</a>, <a href='https://iphonedevlog.wordpress.com/tag/zurb-foundation/'>Zurb Foundation</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/746/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/746/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/746/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/746/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/746/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/746/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/746/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/746/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/746/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/746/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/746/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/746/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=746&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/02/04/converting-to-universal-app-with-zurbs-foundation-using-responsive-web-design-techniques/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
		<item>
		<title>Building a PhoneGap Android App in Windows: Cordova 2.3.0 with Eclipse 4.2.1</title>
		<link>https://iphonedevlog.wordpress.com/2013/02/01/building-a-phonegap-android-app-in-windows-cordova-2-3-0-with-eclipse-4-2-1/</link>
		<comments>https://iphonedevlog.wordpress.com/2013/02/01/building-a-phonegap-android-app-in-windows-cordova-2-3-0-with-eclipse-4-2-1/#respond</comments>
		<pubDate>Fri, 01 Feb 2013 19:42:42 +0000</pubDate>
		<dc:creator><![CDATA[Steve Husting]]></dc:creator>
				<category><![CDATA[Android]]></category>
		<category><![CDATA[PhoneGap]]></category>
		<category><![CDATA[Android debugging]]></category>
		<category><![CDATA[app submission]]></category>
		<category><![CDATA[Eclipse]]></category>
		<category><![CDATA[inAppBrowser]]></category>

		<guid isPermaLink="false">http://iphonedevlog.wordpress.com/?p=742</guid>
		<description><![CDATA[I already have the major software installed on my Windows machine from my last Eclipse build, detailed in https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/. If this is your first time with Eclipse and PhoneGap, follow the link above and pay careful attention to the following setup sections:  Install Eclipse Juno IDE Install Java JDK Install ADT Install the Android SDK [&#8230;]<img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=742&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></description>
				<content:encoded><![CDATA[<p>I already have the major software installed on my Windows machine from my last Eclipse build, detailed in <a title="https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/" href="https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/" target="_blank">https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/</a>. If this is your first time with Eclipse and PhoneGap, follow the link above and pay careful attention to the following setup sections: <span id="more-742"></span></p>
<p>Install Eclipse Juno IDE<br />
Install Java JDK<br />
Install ADT<br />
Install the Android SDK<br />
Android SDK Manager<br />
Set up your PATH environment variables</p>
<p>For system requirements to build Android apps, see: <a title="http://developer.android.com/sdk/index.html" href="http://developer.android.com/sdk/index.html" target="_blank">http://developer.android.com/sdk/index.html</a></p>
<p>For best practices for Google Play apps, see:<br />
<a title="http://support.google.com/googleplay/android-developer/bin/topic.py?hl=en&amp;topic=2364761&amp;parent=2365624&amp;ctx=topic" href="http://support.google.com/googleplay/android-developer/bin/topic.py?hl=en&amp;topic=2364761&amp;parent=2365624&amp;ctx=topic" target="_blank">http://support.google.com/googleplay/android-developer/bin/topic.py?hl=en&amp;topic=2364761&amp;parent=2365624&amp;ctx=topic</a></p>
<p>For a FAQ and content guidelines on submitting apps to Amazon, see:<br />
<a title="https://developer.amazon.com/help/faq.html" href="https://developer.amazon.com/help/faq.html" target="_blank">https://developer.amazon.com/help/faq.html</a></p>
<h2>Download Cordova 2.3.0</h2>
<p>1. From <a title="http://www.phonegap.com" href="http://www.phonegap.com" target="_blank">http://www.phonegap.com</a>, I downloaded version 2.3.0. A list of its upgrade changes can be found here: <a title="http://phonegap.com/blog/2013/01/07/phonegap-230/" href="http://phonegap.com/blog/2013/01/07/phonegap-230/" target="_blank">http://phonegap.com/blog/2013/01/07/phonegap-230/</a>.<br />
2. It was downloaded to my Downloads folder as: phonegap-2.3.0 I extracted it to D:/PhoneGap/phonegap-2.3.0<br />
3. In the phonegap.com download page, I clicked on Getting Started Guides, then chose Getting Started with Android. This tutorial will follow the Apache Cordova Getting started Guide steps outlined in: <a title="http://docs.phonegap.com/en/2.3.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android" href="http://docs.phonegap.com/en/2.3.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android" target="_blank">http://docs.phonegap.com/en/2.3.0/guide_getting-started_android_index.md.html#Getting%20Started%20with%20Android</a> in conjunction with my previous article here: <a title="https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/" href="https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/" target="_blank">https://iphonedevlog.wordpress.com/2012/11/20/building-a-phonegap-android-app-on-windows-cordova-2-2-0-with-eclipse/</a> We will follow those steps in the next section.</p>
<h2>Set Up Your Project&#8217;s Cordova Files</h2>
<p>Cordova will create the core files for your project via the console.</p>
<p>1. Open a command prompt: Go to Start, Run. . ., and type cmd.exe to open the command prompt console window.<br />
2. Get the address to the \bin directory within the Android subfolder of the Cordova distribution. In my case it was:<br />
D:\PhoneGap\phonegap-2.3.0-0\lib\android\bin<br />
If you look in the /bin folder, you’ll see the &#8220;create&#8221; file there that will execute the following command.<br />
3. Decide on:<br />
a. the path where your project will reside (like D:\Android\newProject)<br />
b. the package name (like com.stevehusting.newProject)<br />
c. the project name (newProject; no dashes allowed).<br />
Put all four pieces of information together:<br />
create &lt;Android_bin_path_to_create_file&gt; &lt;project_folder_path&gt; &lt;package_name&gt; &lt;project_name&gt;<br />
(Do not include the &lt; or &gt;.)<br />
My phonegap files resided on my D: drive, so I entered D: to change to that drive.<br />
4. Once the command prompt started with D:\&gt;, I typed the change directory command (cd), then the entire path to the &#8220;create&#8221; file (from step 2):</p>
<p>cd D:\PhoneGap\phonegap-2.3.0\lib\android\bin</p>
<p>5. Then I followed the steps to create the project with:</p>
<p>create D:\Android\newProject com.stevehusting.newProject newProject</p>
<p>7. When the command prompt finished, I found all the files set in the location I indicated.</p>
<h2>Set Up Project in Eclipse</h2>
<p>1. Start up Eclipse.<br />
2. File &gt; New &gt; Project<br />
3. Click on the + button to the left of Android to show its folder if its not open already.<br />
4. Choose Android Project from Existing Code, and hit Next.<br />
5. Click on the Browser button and select the folder you used for &lt;project_folder_path&gt;. Mine was D:\Android\newProject<br />
6. If you have a workspace already, check Copy projects into workspace; otherwise, leave it unchecked. Mine was left unchecked.<br />
7. Hit Finish and wait.</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8211;</p>
<p><strong>Warning Encountered</strong></p>
<p>The project has a warning after step 7 above: &#8220;The import android.app.Activity is never used.&#8221;</p>
<p>a. To resolve, navigate in the Package Explorer at left through src &gt; com.&lt;project info&gt; &gt; newProject.java, right-click on the latter, and choose Open with &gt; Text Editor.<br />
b. Change the following to comment out the line:</p>
<p>import android.app.Activity;</p>
<p>to . . .</p>
<p>/* import android.app.Activity; */</p>
<p>c. Project &gt; Clean should make the warning go away.</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p>9. In Eclipse, right-click on AndroidManifest.xml and select Open With &gt; Text Editor. Remove or comment out all the permissions your app doesn’t need. To learn more about permissions, see:<br />
<a title="http://developer.android.com/guide/topics/manifest/uses-feature-element.html " href="http://developer.android.com/guide/topics/manifest/uses-feature-element.html" target="_blank">http://developer.android.com/guide/topics/manifest/uses-feature-element.html </a><br />
<a title="http://developer.android.com/guide/topics/manifest/uses-permission-element.html " href="http://developer.android.com/guide/topics/manifest/uses-permission-element.html" target="_blank">http://developer.android.com/guide/topics/manifest/uses-permission-element.html </a><br />
<a title="http://developer.android.com/reference/android/Manifest.permission.html" href="http://developer.android.com/reference/android/Manifest.permission.html" target="_blank">http://developer.android.com/reference/android/Manifest.permission.html</a></p>
<p><strong>Some explanatory notes on this page:</strong></p>
<p>android:versionCode=&#8221;1&#8243;&gt;<br />
This is the first version of your app. Subsequent versions are always sequentially numbered. Not shown to the public.</p>
<p>android:versionName=&#8221;1.0&#8243;&gt;<br />
This is the actual version shown to users.</p>
<p>Below this is the &lt;uses-sdk&gt; section. For the minSdkVersion, put the lowest version your app is designed to use, such as 8 for Android 2.2. For the targetSdkVersion, put the number for the highest device you’ve tested it against (my current &#8220;Jelly Bean&#8221; device would be &#8220;15&#8221;). If you see a maxSdkVersion, it’s recommended that you leave it blank (according to <a title="http://developer.android.com/guide/topics/manifest/uses-sdk-element.html" href="http://developer.android.com/guide/topics/manifest/uses-sdk-element.html" target="_blank">http://developer.android.com/guide/topics/manifest/uses-sdk-element.html</a>).</p>
<p>If you started clicking around in Eclipse like I did, and you are unfamiliar with the IDE (integrated development environment with its myriad of views), you may lose the Project Explorer view. Just go to Window &gt; Show View &gt; Project Explorer to bring it back.</p>
<h2>Add Your Project&#8217;s Assets</h2>
<p>1. Open the folder containing your already-created www &#8220;assets&#8221; in Windows Explorer (your project’s HTML, CSS, Javascript, videos, images, etc., files). Copy all those files to the Android project&#8217;s /assets/www folder in Windows Explorer.<br />
2. Make sure you reference the cordova-2.3.0.js file in index.html. Also, you can safely delete the following files that PG generated to display its test screen:</p>
<blockquote><p>js/index.js<br />
spec.html<br />
www/spec folder</p></blockquote>
<p>You can also delete the assets/www/<strong>res</strong> folder in Windows Explorer (not in Eclipse). It contains all the icons and artwork depicting the PhoneGap logo.</p>
<h2>InAppBrowser</h2>
<p>If you have external links, you&#8217;ll want to change them to the following format. Without the InAppBrowser (IAB), your external links will open in a browser and there would be no way to get back to the app but to shut down the browser and tap on the app icon on the home screen. With the IAB, one needs only tap on a Done button at bottom to return right to the app.</p>
<blockquote><p>&lt;a href=&#8221;#&#8221; onclick=&#8221;window.open(&#8216;<a href="https://iphonedevlog.wordpress.com&#038;#8217" rel="nofollow">https://iphonedevlog.wordpress.com&#038;#8217</a>;, &#8216;_blank&#8217;, &#8216;location=no&#8217;);&#8221;&gt;without location bar&lt;/a&gt;</p>
<p>&lt;a href=&#8221;#&#8221; onclick=&#8221;window.open(&#8216;<a href="https://iphonedevlog.wordpress.com&#038;#8217" rel="nofollow">https://iphonedevlog.wordpress.com&#038;#8217</a>;, &#8216;_blank&#8217;);&#8221;&gt;with location bar&lt;/a&gt;</p></blockquote>
<p>Look at my separate article for the six steps you need to incorporate the IAB: <a title="https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/" href="https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/" target="_blank">https://iphonedevlog.wordpress.com/2013/06/27/implementing-inappbrowser-into-a-cordova-phonegap-project/</a></p>
<h2>Splash Screen</h2>
<p>You may want to add a splash screen to your app. Here are the three steps in a separate article: <a title="https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/" href="https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/" target="_blank">https://iphonedevlog.wordpress.com/2013/07/02/creating-and-installing-a-splash-screen-for-android-using-eclipse-and-phonegap/</a></p>
<h2>Home Screen Icon Name</h2>
<p>1. Specify the name you want to appear under the icon on the device’s home screen. Open res/values/strings.xml with the Text Editor and edit as shown below. Keep the text short, like 20 characters or fewer. Unlike the iPhone, long titles will wrap, which is nice. Make sure to check this later in your device or emulator.</p>
<blockquote><p>&lt;string name=&#8221;app_name&#8221;&gt;App Title Here With Spaces&lt;/string&gt;</p></blockquote>
<p>2. Save the page.</p>
<h2>Debugging your Project in 4 Phases</h2>
<p>1. The validator in Eclipse validates your HTML and CSS, giving filename, nature of problem, and line number of its location in the file, for all the HTML files in the app. In Eclipse, select the project name in the Package Explorer and refresh the project (File &gt; Refresh). Watch the progress bar in the lower right. Right-click on your project name again, and select Validate. Again, watch the progress bar in the lower right. An alert will give you a quantity of problems found. To read a listing of those problems, click on the Problems tab. (You can ignore the &#8220;No grammar constraints&#8221; warnings: <a title="http://argillander.wordpress.com/2011/06/14/no-grammar-constraints-dtd-or-xml-schema-detected-for-the-document/" href="http://argillander.wordpress.com/2011/06/14/no-grammar-constraints-dtd-or-xml-schema-detected-for-the-document/" target="_blank">http://argillander.wordpress.com/2011/06/14/no-grammar-constraints-dtd-or-xml-schema-detected-for-the-document/</a>). Resolve these HTML errors before proceeding.</p>
<p>2. To validate the Android files, look at the row of icons under Eclipse&#8217;s top menu bar and find the Android Lint&#8217;s &#8220;checkbox&#8221; icon. Click on that. The tab Lint Warnings will show you all the problems with the Android files (which are not in your HTML project files). You may need to post the errors in Google Search to find solutions.</p>
<p>3. Debug by using the app in a virtual device onscreen with an emulator. Back in the Project Explorer view, right-click on your project name, and select Debug As &gt; Android Application. You’ll see the Console screen at the bottom of the Eclipse environment record the activity prior to appearing in the emulator.</p>
<p>When the emulator starts in a separate window, the Console will stop recording (at &#8220;Waiting for HOME&#8221;), then, a few tabs to the right, click on the LogCat tab to see it start displaying the emulator activity. (So when you post a problem for other developers to help, this is where you’ll copy/paste from: the &#8220;LogCat&#8221; tab.)</p>
<p>If you have a working emulator installed, then it will launch and you’ll see the home screen. (Mine took more than a minute before it displayed, so you may need to be patient. Some have had to wait 5-10 minutes!) Drag it out of the way so you can see all the entries in LogCat.  In the emulator, drag the &#8220;lock&#8221; to the side and the app will launch after a while, if all is well. Again, be patient.</p>
<p>When my app did not appear, I clicked on the Console tab and found the reason displayed in red on three separate lines: &#8220;Installation error: INSTALL_FAILED_INSUFFICIENT_STORAGE. Please check logcat output for more details. Launch canceled!&#8221; Check your Console for reasons and Google for solutions.</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p><strong>&#8220;Failed to install app_name.apk on device &#8217;emulator-5554!&#8221;<br />
&#8220;Unfortunately, launcher has stopped.&#8221;</strong></p>
<p>Here are some of the ways I&#8217;ve tried to solve problems with the app not appearing in the emulator:</p>
<p>a. Pay attention to the logcat text, and see if any of it points to problems you recognize.</p>
<p>b. Go to Eclipse&#8217;s Window &gt; Preferences, then Android &gt; Launch, add &#8220;-partition-size 1024&#8221; on the Default emulator options field, then click Apply, and use your emulator as usual.</p>
<p>c. Window &gt; Android Virtual Device Manager, Select device, Edit&#8230;: Internal Storage of 500, SD Card of size 1024, no camera. Click on OK to return, select device AVD, Start&#8230; then scroll down and select Wipe User Data, then Launch.</p>
<p>d. Create and use a new AVD.</p>
<p>e. Shut down Eclipse, then shut down and restart adb (Android Debug Bridge) with these steps:<br />
1. Open command prompt (Start &gt; Run &gt; cmd).<br />
2. Type adb kill-server and then hit Enter.<br />
3. Type adb devices and then hit Enter.<br />
4. Start up Eclipse again, Project &gt; Clean, and test.</p>
<p>f. Open AndroidManifest.xml in a text editor and change the &#8220;17&#8221; to &#8220;16&#8221; or &#8220;15&#8221;:<br />
android:targetSdkVersion=&#8221;16&#8243;/&gt;</p>
<p>g. Unplug device to prevent confusion, and test again.</p>
<p>h. Post the logcat to a forum and give details about the app. For instance, one poster pointed out that I neglected to include a needed permission.</p>
<p>i. Run the debugging steps above if you haven&#8217;t already, and fix the errors.</p>
<p>j. If you are making new apks again and again to test in the same device, remember to select the app name in Settings on the device, then select to Clear Cache, Clear Data, Force Stop, and Uninstall. Then install the newest version of the app for testing.</p>
<p>Even after all these steps and more, it may fail to load in the emulator, but work fine when testing in the device.</p>
<p>&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-</p>
<p>4. The fourth step to debug is to test the app on an actual device. Follow the next steps to do so.</p>
<h2>Sign the App for the App Store</h2>
<p>Apps in the app store must be &#8220;signed&#8221; with keys. Here are the steps to accomplish this. These steps create the &#8220;apk&#8221; file that is uploaded to the app store for purchasers&#8217; download.</p>
<p>1. Right-click on the project name in Eclipse, then click on Android Tools &gt; Export Signed Application Package.<br />
2. Project Checks dialog:<br />
This screen will tell you if you have serious errors that need to be fixed before you can go further. If you have problems, copy the error into Google and search.<br />
3. Key alias selection dialog:<br />
Create the key using the app name, no spaces, ending in &#8220;.keystore&#8221;. [WARNING: if this is an upgrade, use the same name as the earlier version!] (A later version of Eclipse has the dialog named Keystore selection. Browse to the location to save the keystore and in the same box give the name of the keystore. Back in the Keystore selection dialog, add the password twice and hit Next.)<br />
4. Key [&#8220;Private Key&#8221;] Creation dialog:<br />
Alias: same as app_name, no spaces.<br />
password of keystore.<br />
validity: 50 [meaning, good for 50 years].<br />
First and Last name:<br />
Organizational unit: [division of company, or leave blank]<br />
Organization: [use no punctuation &#8211; only letters and numbers, or you&#8217;ll get an &#8220;keytool error&#8221; notice later.]<br />
City:<br />
State: [2-letter abbr. is fine.]<br />
Country: 01. [which is U.S.]<br />
Destination APK file: This is the hard disk location where Eclipse will save the program’s .apk file that you will later upload to Google Play or other app store. Browse, then click Finish when done.</p>
<p>Write down the above Key Creation information and APK destination and keep it safe for later retrieval and app updates. If it is lost, you can’t upgrade the app any further. To release the app after this file has been lost, you’ll have to create a whole new app and release it separately, making your customers ineligible for any updates.</p>
<p>Perhaps make a separate private key for each app, especially if you expect to sell the rights to an app to someone else. Save the keystore and apk files to a separate location for safety.</p>
<p>If you get: &#8220;keytool error: java.io.IOException: Incorrect AVA format&#8221;, then an invalid character was used in one of the previous screens. Solution: remove any punctuation so only letters and numbers remain.</p>
<h2>Test the apk File in Device</h2>
<p>1. Check with your device as to how to install the apk file. In my eLocity tablet, it’s a simple matter of copying it to the SD card, navigating to it from Settings, and selecting and choosing to install it. The Google/Asus Nexus 7 does not include an SD card. I downloaded DropBox.com software to the computer and the DropBox app to the Nexus. Once I signed up for an account, I copied the apk file to the computer’s DropBox, then it was accessible on the Nexus. Then I tapped on the file and it asked if I wanted to install. Simple.<br />
2. Once installed, you should see it on the home screen. If not, tap the middle button to see all the installed apps and look for your icon. Check the title underneath to make sure it is not truncated.<br />
3. Tap the icon and check out your work.<br />
4. Make changes to the files as necessary.</p>
<p>For another source for debugging in the device, follow these simple steps in a Webkit browser like Google Chrome:<br />
<a title="http://debug.phonegap.com/" href="http://debug.phonegap.com/" target="_blank">http://debug.phonegap.com/</a></p>
<h2>Prepare Promotional Artwork</h2>
<p>You’ll want to include screen captures for upload to the app store of your choice. Choose screens carefully to present your app in its best light. What if your device doesn’t take screen captures? My eLocity tablet and Google Nexus 7 did not have this native functionality, nor did I find apps made for those devices that performed this function. All is not lost, though; here is what I’ve done.</p>
<p><strong>A. First method</strong><br />
1. Just double-click the app’s index.html file in Windows Explorer to open it in Google Chrome, then narrow the browser window to approximate the device&#8217;s screen proportion.<br />
2. Use your favorite screen grab utility (or tap on your keyboard&#8217;s PrtScn key) to get the picture.<br />
3. Use GIMP (download free at <a title="http://www.gimp.org" href="http://www.gimp.org" target="_blank">gimp.org</a>) or other photo-retouching program to crop and resize appropriately. Screen sizes follow.</p>
<p><strong>B. Second Method</strong><br />
1. Plug in your device, set it for debugging, and in Eclipse, go to Window &gt; Open Perspective &gt; DDMS. To the left of Devices you’ll see an icon of a camera. Click on that and it’ll take a screenshot. Click on Save to save to file.<br />
2. Use a photo-retouching program to crop and resize appropriately.</p>
<p><strong>Screen sizes needed:</strong><br />
1. Need at least two images of one of these sizes: 320 x 480, 480 x 800, 480 x 854, 1280 x 720, 1280 x 800<br />
24 bit PNG or JPEG (no alpha); full bleed, no border in art. (I chose to use 1280 x 720 and use screen grabs from my 1280 x 800 resolution monitor to populate; showing single wide tablet shots &#8211; slightly stretched, and side-by-side small screen shots. Unfortunately, Apple&#8217;s different screenshot proportions means having to grab fresh screens for that platform.)<br />
2. Prepare a High Resolution Application Icon for Google Play: 512 x 512 pixel JPG image.<br />
3. Promo Graphic: 180w x 120h PNG or JPG. Also write promo text, 80 chars.<br />
4. Feature Graphic: 1024 x 500 PNG or JPG.<br />
5. Prepare a promo video.<br />
6. If preparing for iPhone: 1024 x 1024px JPG image, and screen grabs.<br />
7. If preparing for Amazon App Store release: 1024 x 500px PNG or JPG promotional image, and screen grabs.<br />
8. If you will create an an ebook version through smashwords.com (this is where Apple gets many of its iBooks from) create a 1400 x 2100px JPG image for the book cover.</p>
<p>Add icons of these sizes into these folders. Delete the current icons, then just drag yours from Windows Explorer right into the folder in Eclipse and select checkbox to copy:<br />
res/drawable: 96&#215;96 (icon.png)<br />
res/drawable-hdpi: 72&#215;72 (ic_launcher.png)<br />
res/drawable-ldpi: 36&#215;36 (ic_launcher.png)<br />
res/drawable-mdpi: 48&#215;48 (ic_launcher.png)<br />
res/drawable-xdpi: 96&#215;96 (ic_launcher.png)</p>
<h2>Preparing for Google Play Launch</h2>
<p>When you are ready for release, open Eclipse, and in AndroidManifest.xml, turn off debugging. Remove the line:</p>
<blockquote><p>android:debuggable=&#8221;true&#8221;&gt;</p></blockquote>
<p>Remove or comment out any other debugging in your HTML files, such as alert messages.</p>
<h1>Prepare Copy for Google Play Store</h1>
<p>1. Fill out the information on this template for the app assets for the Google Play store so you&#8217;ll have the information at hand when you go to the Developer Console: <a title="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" href="https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/" target="_blank">https://iphonedevlog.wordpress.com/google-play-app-publishers-template-22013/</a></p>
<p>2. Back up your keystore off your development computer, if you don&#8217;t have regular backups.</p>
<h1>Ready For Public Release</h1>
<p>Congratulations! You are now ready to show off your baby to the world!</p>
<p>To register as a Google Play developer and set up your publisher account, visit the Google Play publisher site: <a title="https://play.google.com/apps/publish/Home" href="https://play.google.com/apps/publish/Home" target="_blank">https://play.google.com/apps/publish/Home</a></p>
<p>My Helpful Links page gives a small listing of other sites where you can list your apps. Visit <a title="https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/" href="https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/" target="_blank">https://iphonedevlog.wordpress.com/phonegapcordova-crib-sheet/</a> and look under &#8220;App Stores.&#8221;</p><br />Filed under: <a href='https://iphonedevlog.wordpress.com/category/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/category/phonegap/'>PhoneGap</a> Tagged: <a href='https://iphonedevlog.wordpress.com/tag/android/'>Android</a>, <a href='https://iphonedevlog.wordpress.com/tag/android-debugging/'>Android debugging</a>, <a href='https://iphonedevlog.wordpress.com/tag/app-submission/'>app submission</a>, <a href='https://iphonedevlog.wordpress.com/tag/eclipse/'>Eclipse</a>, <a href='https://iphonedevlog.wordpress.com/tag/inappbrowser/'>inAppBrowser</a>, <a href='https://iphonedevlog.wordpress.com/tag/phonegap/'>PhoneGap</a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godelicious/iphonedevlog.wordpress.com/742/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/delicious/iphonedevlog.wordpress.com/742/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gofacebook/iphonedevlog.wordpress.com/742/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/facebook/iphonedevlog.wordpress.com/742/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gotwitter/iphonedevlog.wordpress.com/742/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/twitter/iphonedevlog.wordpress.com/742/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gostumble/iphonedevlog.wordpress.com/742/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/stumble/iphonedevlog.wordpress.com/742/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/godigg/iphonedevlog.wordpress.com/742/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/digg/iphonedevlog.wordpress.com/742/" /></a> <a rel="nofollow" href="http://feeds.wordpress.com/1.0/goreddit/iphonedevlog.wordpress.com/742/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/reddit/iphonedevlog.wordpress.com/742/" /></a> <img alt="" border="0" src="https://pixel.wp.com/b.gif?host=iphonedevlog.wordpress.com&#038;blog=8272979&#038;post=742&#038;subd=iphonedevlog&#038;ref=&#038;feed=1" width="1" height="1" />]]></content:encoded>
			<wfw:commentRss>https://iphonedevlog.wordpress.com/2013/02/01/building-a-phonegap-android-app-in-windows-cordova-2-3-0-with-eclipse-4-2-1/feed/</wfw:commentRss>
		<slash:comments>0</slash:comments>
	
		<media:content url="https://2.gravatar.com/avatar/5dbbc991abc5709e7f91a582f0a46496?s=96&#38;d=https%3A%2F%2F2.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D96&#38;r=G" medium="image">
			<media:title type="html">stevehusting</media:title>
		</media:content>
	</item>
	</channel>
</rss>
